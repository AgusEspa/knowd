{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Settings.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport NavBar from \"../components/Dashboard/Navbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const {\n    userAuth,\n    logout\n  } = useContext(AuthContext);\n  const [formData, setFormData] = useState({\n    username: userAuth.username,\n    emailAddress: userAuth.emailAddress,\n    password: \"\"\n  });\n  const [credentialsError, setCredentialsError] = useState(\"\");\n  const [formValidationErrors, setFormValidationErrors] = useState({\n    emailAddress: \"\",\n    password: \"\"\n  });\n  const baseUrl = \"http://localhost:8080/api/users\";\n\n  const handleFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const validateForm = data => {\n    const errors = {\n      emailAddress: \"\",\n      username: \"\",\n      password: \"\",\n      passwordVerification: \"\"\n    };\n    const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!data.emailAddress) {\n      errors.emailAddress = \"Email address is required\";\n    } else if (!emailPattern.test(data.emailAddress)) {\n      errors.emailAddress = \"Not a valid email address\";\n    }\n\n    if (!data.username) {\n      errors.username = \"Username is required\";\n    } else if (data.username.length < 3) {\n      errors.username = \"Username must be at least 3 characters long\";\n    }\n\n    if (!data.password) {\n      errors.password = \"Password is required\";\n    } else if (data.password.length < 8) {\n      errors.password = \"Password must be at least 8 characters long\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleEditUser = async event => {\n    event.preventDefault();\n    const validationErrors = validateForm(formData);\n\n    try {\n      const response = await api.put(baseUrl, editObjectiveFormData);\n      props.setObjectives(prevState => prevState.filter(objective => objective.id !== props.id).concat(response.data));\n      setObjectiveIsChanged(false);\n    } catch (error) {\n      console.log(`Request failed: ${error.response.data.error_message}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"settings-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit username and email adress:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditUser,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Username\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), formValidationErrors.username !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-error\",\n              children: formValidationErrors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              children: \"Email address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Email address\",\n              name: \"emailAddress\",\n              value: formData.emailAddress,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), formValidationErrors.emailAddress !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-error\",\n              children: formValidationErrors.emailAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 74\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              children: \"Current password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), formValidationErrors.password !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-error\",\n              children: formValidationErrors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"user-error\",\n            children: credentialsError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Settings, \"WmeGRFZk7nqTv6aQ9vpbn49Atro=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Settings.js"],"names":["useState","useContext","axios","AuthContext","NavBar","Settings","userAuth","logout","formData","setFormData","username","emailAddress","password","credentialsError","setCredentialsError","formValidationErrors","setFormValidationErrors","baseUrl","handleFormChange","event","name","value","target","prevState","validateForm","data","errors","passwordVerification","emailPattern","test","length","handleEditUser","preventDefault","validationErrors","response","api","put","editObjectiveFormData","props","setObjectives","filter","objective","id","concat","setObjectiveIsChanged","error","console","log","error_message"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport NavBar from \"../components/Dashboard/Navbar/Navbar\";\n\nconst Settings = () => {\n\n    const { userAuth, logout } = useContext(AuthContext);\n    const [formData, setFormData] = useState({username: userAuth.username, emailAddress: userAuth.emailAddress, password: \"\"});\n    const [credentialsError, setCredentialsError] = useState(\"\");\n    const [formValidationErrors, setFormValidationErrors] = useState({emailAddress: \"\", password: \"\"});\n\n    const baseUrl = \"http://localhost:8080/api/users\";\n\n    const handleFormChange = (event) => {\n        const {name, value} = event.target;\n        setFormData( prevState => ({\n            ...prevState,\n            [name]: value \n        }));\n    }\n\n    const validateForm = (data) => {\n        const errors = {emailAddress: \"\", username:\"\", password: \"\", passwordVerification:\"\"};\n    \n        const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    \n        if (!data.emailAddress) {\n            errors.emailAddress = \"Email address is required\";\n        } \n        else if (!(emailPattern.test(data.emailAddress))) {\n            errors.emailAddress = \"Not a valid email address\";\n        }\n\n        if (!data.username) {\n            errors.username = \"Username is required\";\n        } \n        else if (data.username.length < 3) {\n            errors.username = \"Username must be at least 3 characters long\";\n        }\n\n        if (!data.password) {\n            errors.password = \"Password is required\";\n        } else if (data.password.length < 8) {\n            errors.password = \"Password must be at least 8 characters long\";\n        }\n\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n    const handleEditUser = async (event) => {\n\n        event.preventDefault();\n\n        const validationErrors = validateForm(formData);\n\n        try {\n            const response = await api.put(baseUrl, editObjectiveFormData);\n\t\t\t\n\t\t\tprops.setObjectives(prevState => ( \n\t\t\t\tprevState.filter(objective => objective.id !== props.id)\n\t\t\t\t\t.concat(response.data)));\n\n\t\t\tsetObjectiveIsChanged(false);\n\n        } catch (error) {\n            console.log(`Request failed: ${error.response.data.error_message}`);\n\t\t}\n        \n    }\n\n\n\treturn (\n        <div>\n            <NavBar />\n        \n            <main className=\"settings-container\">\n\n                <h2>Account Settings</h2>\n\n                <div className=\"user-box\">\n\n                    <h3>Edit username and email adress:</h3>\n                \n                    <form onSubmit={handleEditUser}>\n                        <div>\n                            <label className=\"input-label\">Username:</label>\n                            <input type=\"text\" \n                            placeholder=\"Username\"\n                            name=\"username\"\n                            value={formData.username}\n                            onChange={handleFormChange}\n                            />\n                            {formValidationErrors.username !== \"\" && <p id=\"user-error\">{formValidationErrors.username}</p>}\n                        </div>\n\n                        <div>\n                            <label className=\"input-label\">Email address:</label>\n                            <input type=\"text\" \n                            placeholder=\"Email address\"\n                            name=\"emailAddress\"\n                            value={formData.emailAddress}\n                            onChange={handleFormChange}\n                            />\n                            {formValidationErrors.emailAddress !== \"\" && <p id=\"user-error\">{formValidationErrors.emailAddress}</p>}\n                        </div>\n                        \n                        <div> \n                            <label className=\"input-label\">Current password:</label>\n                            <input type=\"password\" \n                            name=\"password\"\n                            value={formData.password}\n                            onChange={handleFormChange}\n                            />\n                            {formValidationErrors.password !== \"\" && <p id=\"user-error\">{formValidationErrors.password}</p>}\n                        </div>\n\n                        {credentialsError !== \"\" && <p id=\"user-error\">{credentialsError}</p>}\n                        <button>Save changes</button>\n                    </form>\n                </div>\n\n            </main>\n        </div>\n\t)\n\n}\n\nexport default Settings;"]},"metadata":{},"sourceType":"module"}