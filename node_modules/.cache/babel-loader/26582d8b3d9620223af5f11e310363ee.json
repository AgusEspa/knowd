{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport NavBar from \"../components/Dashboard/Navbar\";\nimport Objectives from \"../components/Dashboard/Objectives\";\nimport useAxios from \"../utils/useAxios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [objectives, setObjectives] = useState([]);\n  const api = useAxios();\n  useEffect(() => {\n    getObjectives();\n  }, []);\n\n  const sortFunction = (a, b) => {\n    const fa = a.title.toLowerCase();\n    const fb = b.title.toLowerCase();\n    const ia = a.importance;\n    const ib = b.importance;\n    if (ia < ib) return -1;else if (ia > ib) return 1;else if (ia === ib) {\n      if (fa < fb) return -1;\n      if (fa > fb) return 1;\n    } else return 0;\n  };\n\n  const getObjectives = async () => {\n    try {\n      const response = await api.get(\"/objectives\");\n      const sortedResponse = response.data.sort(sortFunction);\n      setObjectives(sortedResponse);\n    } catch (error) {\n      console.log(`Request failed: ${error.response.data.error_message}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Objectives, {\n      objectives: objectives,\n      setObjectives: setObjectives\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"mz74jPDxDnK/b9aFo856Uz1OPvg=\", false, function () {\n  return [useAxios];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Dashboard.js"],"names":["NavBar","Objectives","useAxios","useState","useEffect","Dashboard","objectives","setObjectives","api","getObjectives","sortFunction","a","b","fa","title","toLowerCase","fb","ia","importance","ib","response","get","sortedResponse","data","sort","error","console","log","error_message"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMK,GAAG,GAAGN,QAAQ,EAApB;AAEAE,EAAAA,SAAS,CAAE,MAAM;AACbK,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,YAAY,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACjC,UAAMC,EAAE,GAAGF,CAAC,CAACG,KAAF,CAAQC,WAAR,EAAX;AACA,UAAMC,EAAE,GAAGJ,CAAC,CAACE,KAAF,CAAQC,WAAR,EAAX;AACM,UAAME,EAAE,GAAGN,CAAC,CAACO,UAAb;AACA,UAAMC,EAAE,GAAGP,CAAC,CAACM,UAAb;AACA,QAAID,EAAE,GAAGE,EAAT,EAAa,OAAO,CAAC,CAAR,CAAb,KACK,IAAIF,EAAE,GAAGE,EAAT,EAAa,OAAO,CAAP,CAAb,KACA,IAAIF,EAAE,KAAKE,EAAX,EAAe;AAChB,UAAIN,EAAE,GAAGG,EAAT,EAAa,OAAO,CAAC,CAAR;AACb,UAAIH,EAAE,GAAGG,EAAT,EAAa,OAAO,CAAP;AAChB,KAHI,MAIN,OAAO,CAAP;AACL,GAZE;;AAcA,QAAMP,aAAa,GAAG,YAAY;AAE9B,QAAI;AACA,YAAMW,QAAQ,GAAG,MAAMZ,GAAG,CAACa,GAAJ,CAAQ,aAAR,CAAvB;AACA,YAAMC,cAAc,GAAGF,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmBd,YAAnB,CAAvB;AACTH,MAAAA,aAAa,CAACe,cAAD,CAAb;AAEM,KALD,CAKE,OAAOG,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBF,KAAK,CAACL,QAAN,CAAeG,IAAf,CAAoBK,aAAc,EAAjE;AACT;AACE,GAVD;;AAYA,sBACI;AAAA,4BACL,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADK,eAEI,QAAC,UAAD;AACI,MAAA,UAAU,EAAEtB,UADhB;AAEI,MAAA,aAAa,EAAEC;AAFnB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA7CD;;GAAMF,S;UAIUH,Q;;;KAJVG,S;AA+CN,eAAeA,SAAf","sourcesContent":["import NavBar from \"../components/Dashboard/Navbar\";\nimport Objectives from \"../components/Dashboard/Objectives\";\nimport useAxios from \"../utils/useAxios\";\nimport { useState, useEffect } from \"react\";\n\nconst Dashboard = () => {\n\n    const [objectives, setObjectives] = useState([]);\n\n    const api = useAxios();\n\n    useEffect( () => {\n        getObjectives();\n    }, []);\n\n    const sortFunction = (a, b) => {\n\t\tconst fa = a.title.toLowerCase();\n\t\tconst fb = b.title.toLowerCase();\n        const ia = a.importance;\n        const ib = b.importance;\n        if (ia < ib) return -1;\n        else if (ia > ib) return 1;\n        else if (ia === ib) {\n            if (fa < fb) return -1;\n            if (fa > fb) return 1;\n        }\n\t\telse return 0;\n\t}\n\n    const getObjectives = async () => {\n\n        try {\n            const response = await api.get(\"/objectives\");\n            const sortedResponse = response.data.sort(sortFunction);\n\t\t\tsetObjectives(sortedResponse);\n            \n        } catch (error) {\n            console.log(`Request failed: ${error.response.data.error_message}`);\n\t\t}\n    };\n\n    return (\n        <div>\n\t\t\t<NavBar />\n            <Objectives \n                objectives={objectives}\n                setObjectives={setObjectives}\n            />\n        </div>\n    )\n}\n \nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}