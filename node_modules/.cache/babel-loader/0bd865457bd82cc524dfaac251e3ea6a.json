{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [loginFormData, setLoginFormData] = useState({\n    emailAddress: \"\",\n    password: \"\"\n  });\n  const [credentialsError, setCredentialsError] = useState(\"\");\n  const [formValidationErrors, setFormValidationErrors] = useState({});\n  const {\n    setUserAuth\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const baseUrl = \"http://localhost:8080\";\n\n  const handleLoginFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setLoginFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }; // const validateForm = (data) => {\n  //     const errors = {emailAddress:\"\", password:\"\"};\n  //     if (!data.emailAddress) errors.emailAddress = \"Email is required\";\n  //     if (!data.password) errors.password = \"Password is required\";\n  //     return errors;\n  // }\n\n\n  const handleLogin = event => {\n    event.preventDefault();\n    login(); // const validationErrors = validateForm(loginFormData);\n    // setFormValidationErrors(validationErrors);\n    // if (validationErrors.emailAddress === \"\" && validationErrors.password === \"\") {\n    //     login();        \n    // }\n  };\n\n  async function login() {\n    const credentials = new URLSearchParams();\n    credentials.append(\"username\", loginFormData.emailAddress);\n    credentials.append(\"password\", loginFormData.password);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n\n    try {\n      const response = await axios.post(`${baseUrl}/login`, credentials, config);\n      window.localStorage.setItem(\"username\", response.data.username);\n      window.localStorage.setItem(\"access_token\", response.data.access_token);\n      window.localStorage.setItem(\"refresh_token\", response.data.refresh_token);\n      setUserAuth({\n        username: response.data.username,\n        accessToken: response.data.access_token,\n        refreshToken: response.data.refresh_token\n      });\n      setLoginFormData({\n        username: \"\",\n        password: \"\"\n      });\n      navigate(\"/dashboard\");\n    } catch (e) {\n      console.log(`Error: ${e}`);\n      setCredentialsError(\"Incorrect email / password\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-box\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./logo.png\",\n        alt: \"self.OKRs logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Welcome to self.OKRs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email address\",\n          name: \"emailAddress\",\n          value: loginFormData.emailAddress,\n          onChange: handleLoginFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formValidationErrors.emailAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: loginFormData.password,\n          onChange: handleLoginFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formValidationErrors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: credentialsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Forgot your password? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"New to Self.OKRs? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Create account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"d1HQLg6qjB0UZtjwwYuByX7t2u0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Login.js"],"names":["useState","useContext","axios","useNavigate","Link","AuthContext","Login","loginFormData","setLoginFormData","emailAddress","password","credentialsError","setCredentialsError","formValidationErrors","setFormValidationErrors","setUserAuth","navigate","baseUrl","handleLoginFormChange","event","name","value","target","prevState","handleLogin","preventDefault","login","credentials","URLSearchParams","append","config","headers","response","post","window","localStorage","setItem","data","username","access_token","refresh_token","accessToken","refreshToken","e","console","log"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nconst Login = () => {\n\n    const [loginFormData, setLoginFormData] = useState({emailAddress: \"\", password: \"\"});\n    const [credentialsError, setCredentialsError] = useState(\"\");\n    const [formValidationErrors, setFormValidationErrors] = useState({});\n    const { setUserAuth } = useContext(AuthContext);\n    const navigate = useNavigate();\n\n    const baseUrl = \"http://localhost:8080\";\n\n    const handleLoginFormChange = (event) => {\n        const {name, value} = event.target;\n        setLoginFormData( prevState => ({\n            ...prevState,\n            [name]: value \n        }));\n    }\n\n    // const validateForm = (data) => {\n    //     const errors = {emailAddress:\"\", password:\"\"};\n    //     if (!data.emailAddress) errors.emailAddress = \"Email is required\";\n    //     if (!data.password) errors.password = \"Password is required\";\n    //     return errors;\n    // }\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        login();\n        // const validationErrors = validateForm(loginFormData);\n        // setFormValidationErrors(validationErrors);\n\n        // if (validationErrors.emailAddress === \"\" && validationErrors.password === \"\") {\n        //     login();        \n        // }\n    }\n\n    async function login() {\n        const credentials = new URLSearchParams();\n        credentials.append(\"username\", loginFormData.emailAddress);\n        credentials.append(\"password\", loginFormData.password);\n        \n        const config = {\n    \t    headers: {\n    \t        \"Content-Type\": \"application/x-www-form-urlencoded\"\n    \t    }\n        }\n\n        try {\n            const response = await axios.post(`${baseUrl}/login`, credentials, config);\n\n            window.localStorage.setItem(\"username\", response.data.username);\n            window.localStorage.setItem(\"access_token\", response.data.access_token);\n            window.localStorage.setItem(\"refresh_token\", response.data.refresh_token);\n            \n            setUserAuth({\n                username: response.data.username,\n                accessToken: response.data.access_token,\n                refreshToken: response.data.refresh_token\n            });\n\n            setLoginFormData({username: \"\", password: \"\"});\n\n            navigate(\"/dashboard\");\n\n        } catch (e) {\n            console.log(`Error: ${e}`);\n            setCredentialsError(\"Incorrect email / password\");\n        }\n    }\n\n\treturn (\n\t\t<div className=\"login-box\">\n      <div className=\"logo-box\">\n        <img src={\"./logo.png\"} alt=\"self.OKRs logo\"/> \n      </div>\n\n\t\t\t<h3>Welcome to self.OKRs</h3>\n\t\t\n\t\t\t<form onSubmit={handleLogin}>\n\t\t\t\t<div>\n\t\t\t\t\t<input type=\"email\" \n                    placeholder=\"Email address\"\n                    name=\"emailAddress\"\n\t\t\t\t\tvalue={loginFormData.emailAddress}\n\t\t\t\t\tonChange={handleLoginFormChange}\n\t\t\t\t\t/>\n                    <div className=\"error\"><span>{formValidationErrors.emailAddress}</span></div>\n\t\t\t\t</div>\n                \n\t\t\t\t<div> \n\t\t\t\t\t<input type=\"password\" \n                    placeholder=\"Password\"\n                    name=\"password\"\n\t\t\t\t\tvalue={loginFormData.password}\n\t\t\t\t\tonChange={handleLoginFormChange}\n\t\t\t\t\t/>\n                    <div className=\"error\"><span>{formValidationErrors.password}</span></div>\n\t\t\t\t</div>\n                <div className=\"error\"><span>{credentialsError}</span></div>\n\t\t\t\t<button>Log in</button>\n\t\t\t</form>\n            <div><p>Forgot your password? <Link to=\"/register\">Reset</Link></p></div>\n            <div><p>New to Self.OKRs? <Link to=\"/register\">Create account</Link></p></div>\n\t\t</div>\n\t)\n\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}