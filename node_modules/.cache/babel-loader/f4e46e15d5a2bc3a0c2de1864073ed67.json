{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\n\nconst useRefreshToken = () => {\n  _s();\n\n  const {\n    userAuth,\n    setUserAuth\n  } = useContext(AuthContext);\n  const baseURL = \"http://localhost:8080/api\";\n  const refreshURL = `${baseURL}/users/token/refresh`;\n  const axiosInstance = axios.create({\n    baseURL: baseURL,\n    timeout: 10000,\n    headers: {\n      'Authorization': `Bearer ${userAuth.accessToken}`\n    }\n  });\n  axiosInstance.interceptors.request.use(async request => {\n    // const decodedToken = jwt_decode(userAuth.accessToken);\n    // const tokenExpirationDate = decodedToken.exp;\n    // const currentTime = new Date().getTime() / 1000;\n    // const isValid = tokenExpirationDate > currentTime;\n    // if (isValid) return request;\n    // const config = {\n    // \theaders: {\n    // \t\t'Authorization': `Bearer ${userAuth.refreshToken}`\n    // \t}\n    // }\n    // const response = await axios.get(refreshURL, config);\n    // //log out if request unsuccessful\n    // window.localStorage.setItem(\"access_token\", response.data.access_token);\n    // setUserAuth(prevState => ( {\n    // \tusername: prevState.username,\n    // \taccessToken: response.data.access_token,\n    // \trefreshToken: prevState.refreshToken\n    // }));\n    // request.headers.Authorization = `Bearer ${response.data.access_token}`;\n    return request;\n  }, error => {\n    return Promise.reject(error);\n  });\n  axios.interceptors.response.use(response => {\n    console.log(\"Hi\");\n    return response;\n  }, async error => {\n    if (error.response.status !== 403) {\n      return new Promise((resolve, reject) => {\n        reject(error);\n      });\n    }\n\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${userAuth.refreshToken}`\n      }\n    };\n    const newResponse = await axios.get(`${baseURL}/api/users/token/refresh`, config);\n    window.localStorage.setItem(\"access_token\", newResponse.data.access_token);\n    setUserAuth(prevState => ({\n      username: prevState.username,\n      accessToken: newResponse.data.access_token,\n      refreshToken: prevState.refreshToken\n    })); // axios.request.headers.Authorization = `Bearer ${newResponse.data.access_token}`;\n    // return axios.request;\n\n    return error;\n  });\n  return axiosInstance;\n};\n\n_s(useRefreshToken, \"dRy7P6vBdAhkDNVwznNO7obL4K8=\");\n\nexport default useRefreshToken;","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/utils/useRefreshToken.js"],"names":["axios","jwt_decode","useContext","AuthContext","useRefreshToken","userAuth","setUserAuth","baseURL","refreshURL","axiosInstance","create","timeout","headers","accessToken","interceptors","request","use","error","Promise","reject","response","console","log","status","resolve","config","refreshToken","newResponse","get","window","localStorage","setItem","data","access_token","prevState","username"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAE1B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BJ,UAAU,CAACC,WAAD,CAA5C;AAEH,QAAMI,OAAO,GAAG,2BAAhB;AACA,QAAMC,UAAU,GAAI,GAAED,OAAQ,sBAA9B;AAEA,QAAME,aAAa,GAAGT,KAAK,CAACU,MAAN,CAAa;AAClCH,IAAAA,OAAO,EAAEA,OADyB;AAElCI,IAAAA,OAAO,EAAE,KAFyB;AAGlCC,IAAAA,OAAO,EAAE;AAAE,uBAAkB,UAASP,QAAQ,CAACQ,WAAY;AAAlD;AAHyB,GAAb,CAAtB;AAMAJ,EAAAA,aAAa,CAACK,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,MAAMD,OAAN,IAAiB;AAEvD;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA,WAAOA,OAAP;AAEA,GA/BD,EA+BGE,KAAK,IAAI;AACX,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,GAjCD;AAoCAjB,EAAAA,KAAK,CAACc,YAAN,CAAmBM,QAAnB,CAA4BJ,GAA5B,CAAiCI,QAAQ,IAAI;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,WAAOF,QAAP;AAEC,GAJF,EAII,MAAMH,KAAN,IAAe;AAEjB,QAAIA,KAAK,CAACG,QAAN,CAAeG,MAAf,KAA0B,GAA9B,EAAmC;AAClC,aAAO,IAAIL,OAAJ,CAAY,CAACM,OAAD,EAAUL,MAAV,KAAqB;AACtCA,QAAAA,MAAM,CAACF,KAAD,CAAN;AACD,OAFM,CAAP;AAGE;;AAGH,UAAMQ,MAAM,GAAG;AACdb,MAAAA,OAAO,EAAE;AACR,yBAAkB,UAASP,QAAQ,CAACqB,YAAa;AADzC;AADK,KAAf;AAMA,UAAMC,WAAW,GAAG,MAAM3B,KAAK,CAAC4B,GAAN,CAAW,GAAErB,OAAQ,0BAArB,EAAgDkB,MAAhD,CAA1B;AAEAI,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B,EAA4CJ,WAAW,CAACK,IAAZ,CAAiBC,YAA7D;AAEA3B,IAAAA,WAAW,CAAC4B,SAAS,KAAM;AAC1BC,MAAAA,QAAQ,EAAED,SAAS,CAACC,QADM;AAE1BtB,MAAAA,WAAW,EAAEc,WAAW,CAACK,IAAZ,CAAiBC,YAFJ;AAG1BP,MAAAA,YAAY,EAAEQ,SAAS,CAACR;AAHE,KAAN,CAAV,CAAX,CAnBiB,CAyBlB;AACA;;AAEA,WAAOT,KAAP;AACA,GAjCD;AAmCG,SAAOR,aAAP;AACH,CArFD;;GAAML,e;;AAuFN,eAAeA,eAAf","sourcesContent":["import axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\n\nconst useRefreshToken = () => {\n\n    const { userAuth, setUserAuth } = useContext(AuthContext);\n\n\tconst baseURL = \"http://localhost:8080/api\";\n\tconst refreshURL = `${baseURL}/users/token/refresh`; \n\n\tconst axiosInstance = axios.create({\n\t\tbaseURL: baseURL,\n\t\ttimeout: 10000,\n\t\theaders: { 'Authorization': `Bearer ${userAuth.accessToken}`}\n\t});\n\n\taxiosInstance.interceptors.request.use(async request => {\n\n\t\t// const decodedToken = jwt_decode(userAuth.accessToken);\n\t\t// const tokenExpirationDate = decodedToken.exp;\n\t\t// const currentTime = new Date().getTime() / 1000;\n\t\n\t\t// const isValid = tokenExpirationDate > currentTime;\n\t\n\t\t// if (isValid) return request;\n\n\t\t// const config = {\n\t\t// \theaders: {\n\t\t// \t\t'Authorization': `Bearer ${userAuth.refreshToken}`\n\t\t// \t}\n\t\t// }\n\n\t\t// const response = await axios.get(refreshURL, config);\n\n\t\t// //log out if request unsuccessful\n\t\t\t\t\n\t\t// window.localStorage.setItem(\"access_token\", response.data.access_token);\n\n\t\t// setUserAuth(prevState => ( {\n\t\t// \tusername: prevState.username,\n\t\t// \taccessToken: response.data.access_token,\n\t\t// \trefreshToken: prevState.refreshToken\n\t\t// }));\n\t\t\n\t\t// request.headers.Authorization = `Bearer ${response.data.access_token}`;\n\t\treturn request;\n\n\t}, error => {\n\t\treturn Promise.reject(error);\n\t});\n\n\n\taxios.interceptors.response.use( response => {\n\t\tconsole.log(\"Hi\");\n\t\treturn response;\n\t\t\n\t\t}, async error => {\n\n\t\t\tif (error.response.status !== 403) {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t  reject(error);\n\t\t\t\t});\n\t\t\t  }\n\t\t\n\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': `Bearer ${userAuth.refreshToken}`\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst newResponse = await axios.get(`${baseURL}/api/users/token/refresh`, config);\n\t\t\t\t\t\t\n\t\t\twindow.localStorage.setItem(\"access_token\", newResponse.data.access_token);\n\n\t\t\tsetUserAuth(prevState => ( {\n\t\t\t\tusername: prevState.username,\n\t\t\t\taccessToken: newResponse.data.access_token,\n\t\t\t\trefreshToken: prevState.refreshToken\n\t\t\t}));\n\t\t\t\n\t\t// axios.request.headers.Authorization = `Bearer ${newResponse.data.access_token}`;\n\t\t// return axios.request;\n\n\t\treturn error;\n\t});\n    \n    return axiosInstance;\n}\n\nexport default useRefreshToken;"]},"metadata":{},"sourceType":"module"}