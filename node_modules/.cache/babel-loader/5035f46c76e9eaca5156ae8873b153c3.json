{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    emailAddress: \"\",\n    username: \"\",\n    password: \"\",\n    passwordVerification: \"\"\n  });\n  const [formValidationErrors, setFormValidationErrors] = useState({\n    emailAddress: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  const baseUrl = \"http://localhost:8080\";\n\n  const handleFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setLoginFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleRegistration = event => {\n    event.preventDefault();\n    const credentials = new URLSearchParams();\n    credentials.append(\"username\", emailAddress);\n    credentials.append(\"password\", password);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n    axios.post(`${baseUrl}/login`, credentials, config).then(response => {\n      if (response.status === 200) return response.data;else alert(\"error\");\n    }).then(data => {\n      setEmailAddress(\"\");\n      setPassword(\"\");\n      navigate(\"/login\");\n    }).catch(error => {\n      console.log(`Error: ${error}`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo-box\",\n        src: \"./logo.png\",\n        alt: \"self.OKRs logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegistration,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email address\",\n            name: \"emailAddress\",\n            value: formData.emailAddress,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), formValidationErrors.emailAddress !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"login-error\",\n            children: formValidationErrors.emailAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), formValidationErrors.password !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"login-error\",\n            children: formValidationErrors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"login-error\",\n          children: credentialsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Register, \"dgIN4LkxKtjOeoGW6aXJTKzU0Ls=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Register.js"],"names":["useState","axios","useNavigate","Register","formData","setFormData","emailAddress","username","password","passwordVerification","formValidationErrors","setFormValidationErrors","navigate","baseUrl","handleFormChange","event","name","value","target","setLoginFormData","prevState","handleRegistration","preventDefault","credentials","URLSearchParams","append","config","headers","post","then","response","status","data","alert","setEmailAddress","setPassword","catch","error","console","log","credentialsError"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Register = () => {\n\n    const [formData, setFormData] = useState({emailAddress: \"\", username:\"\", password: \"\", passwordVerification:\"\"});\n    const [formValidationErrors, setFormValidationErrors] = useState({emailAddress: \"\", password: \"\"});\n\tconst navigate = useNavigate();\n\n\tconst baseUrl = \"http://localhost:8080\";\n\n\tconst handleFormChange = (event) => {\n        const {name, value} = event.target;\n        setLoginFormData( prevState => ({\n            ...prevState,\n            [name]: value \n        }));\n    }\n\n  \tconst handleRegistration = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst credentials = new URLSearchParams();\n\t\tcredentials.append(\"username\", emailAddress);\n\t\tcredentials.append(\"password\", password);\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\"\n\t\t\t}\n\t\t}\n\n\t\taxios.post(`${baseUrl}/login`, credentials, config)\n\t\t.then(response => {\n\t\t\tif (response.status === 200) return response.data;\n\t\t\telse alert(\"error\");\n\t\t})\n\t\t.then(data => {\n\t\t\tsetEmailAddress(\"\");\n\t\t\tsetPassword(\"\");\n\t\t\tnavigate(\"/login\");\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(`Error: ${error}`)\n\t\t})\n  \t}\n\n\treturn (\n\t\t<main className=\"login-container\">\n            <div className=\"login-box\">\n                <img className=\"logo-box\" src={\"./logo.png\"} alt=\"self.OKRs logo\"/> \n\n                <form onSubmit={handleRegistration}>\n                    <div>\n                        <input type=\"email\" \n                        placeholder=\"Email address\"\n                        name=\"emailAddress\"\n                        value={formData.emailAddress}\n                        onChange={handleFormChange}\n                        />\n                        {formValidationErrors.emailAddress !== \"\" && <p id=\"login-error\">{formValidationErrors.emailAddress}</p>}\n                    </div>\n                    \n                    <div> \n                        <input type=\"password\" \n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={formData.password}\n                        onChange={handleFormChange}\n                        />\n                        {formValidationErrors.password !== \"\" && <p id=\"login-error\">{formValidationErrors.password}</p>}\n                    </div>\n                    {credentialsError !== \"\" && <p id=\"login-error\">{credentialsError}</p>}\n                    <button>Log in</button>\n                </form>\n            </div>\n        </main>\n\t)\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}