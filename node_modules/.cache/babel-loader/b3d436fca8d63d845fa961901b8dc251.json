{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Settings.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport NavBar from \"../components/Dashboard/Navbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    emailAddress: \"\",\n    username: \"\",\n    password: \"\",\n    passwordVerification: \"\"\n  });\n  const [credentialsError, setCredentialsError] = useState(\"\");\n  const [formValidationErrors, setFormValidationErrors] = useState({\n    emailAddress: \"\",\n    password: \"\"\n  });\n  const {\n    setUserAuth\n  } = useContext(AuthContext);\n  const baseUrl = \"http://localhost:8080\";\n\n  const handleLoginFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setLoginFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const validateForm = data => {\n    const errors = {\n      emailAddress: \"\",\n      password: \"\"\n    };\n    const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!data.emailAddress) {\n      errors.emailAddress = \"Email address is required\";\n    } else if (!emailPattern.test(data.emailAddress)) {\n      errors.emailAddress = \"Not a valid email address\";\n    }\n\n    if (!data.password) {\n      errors.password = \"Password is required\";\n    } else if (data.password.length < 8) {\n      errors.password = \"Password must be at least 8 characters\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleLogin = event => {\n    event.preventDefault();\n    const validationErrors = validateForm(loginFormData);\n\n    if (validationErrors.emailAddress === \"\" && validationErrors.password === \"\") {\n      login();\n      setFormValidationErrors({});\n    }\n  };\n\n  async function login() {\n    const credentials = new URLSearchParams();\n    credentials.append(\"username\", loginFormData.emailAddress);\n    credentials.append(\"password\", loginFormData.password);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n\n    try {\n      const response = await axios.post(`${baseUrl}/login`, credentials, config);\n      window.localStorage.setItem(\"username\", response.data.username);\n      window.localStorage.setItem(\"access_token\", response.data.access_token);\n      window.localStorage.setItem(\"refresh_token\", response.data.refresh_token);\n      setUserAuth({\n        username: response.data.username,\n        accessToken: response.data.access_token,\n        refreshToken: response.data.refresh_token\n      });\n    } catch (e) {\n      console.log(e);\n      setCredentialsError(\"Incorrect email / password\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Change user details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegistration,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), formValidationErrors.emailAddress !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"login-error\",\n            children: formValidationErrors.emailAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email address\",\n            name: \"emailAddress\",\n            value: formData.emailAddress,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), formValidationErrors.emailAddress !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"login-error\",\n            children: formValidationErrors.emailAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Repeat password\",\n            name: \"passwordVerification\",\n            value: formData.passwordVerification,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), formValidationErrors.emailAddress !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"login-error\",\n            children: formValidationErrors.emailAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"login-error\",\n          children: credentialsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Settings, \"9VdSAC10JXc9lYfCcYbJ3DIrito=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Settings.js"],"names":["useState","useContext","axios","AuthContext","NavBar","Settings","formData","setFormData","emailAddress","username","password","passwordVerification","credentialsError","setCredentialsError","formValidationErrors","setFormValidationErrors","setUserAuth","baseUrl","handleLoginFormChange","event","name","value","target","setLoginFormData","prevState","validateForm","data","errors","emailPattern","test","length","handleLogin","preventDefault","validationErrors","loginFormData","login","credentials","URLSearchParams","append","config","headers","response","post","window","localStorage","setItem","access_token","refresh_token","accessToken","refreshToken","e","console","log","handleRegistration","handleFormChange"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport NavBar from \"../components/Dashboard/Navbar/Navbar\";\n\nconst Settings = () => {\n\n    const [formData, setFormData] = useState({emailAddress: \"\", username:\"\", password: \"\", passwordVerification:\"\"});\n    const [credentialsError, setCredentialsError] = useState(\"\");\n    const [formValidationErrors, setFormValidationErrors] = useState({emailAddress: \"\", password: \"\"});\n    const { setUserAuth } = useContext(AuthContext);\n\n    const baseUrl = \"http://localhost:8080\";\n\n    const handleLoginFormChange = (event) => {\n        const {name, value} = event.target;\n        setLoginFormData( prevState => ({\n            ...prevState,\n            [name]: value \n        }));\n    }\n\n    const validateForm = (data) => {\n        const errors = {emailAddress:\"\", password:\"\"};\n    \n        const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    \n        if (!data.emailAddress) {\n            errors.emailAddress = \"Email address is required\";\n        } \n        else if (!(emailPattern.test(data.emailAddress))) {\n            errors.emailAddress = \"Not a valid email address\";\n        }\n        if (!data.password) {\n            errors.password = \"Password is required\";\n        } else if (data.password.length < 8) {\n            errors.password = \"Password must be at least 8 characters\";\n        }\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        const validationErrors = validateForm(loginFormData);\n\n        if (validationErrors.emailAddress === \"\" && validationErrors.password === \"\") {\n            login(); \n            setFormValidationErrors({});\n        }\n    }\n\n    async function login() {\n        const credentials = new URLSearchParams();\n        credentials.append(\"username\", loginFormData.emailAddress);\n        credentials.append(\"password\", loginFormData.password);\n        \n        const config = {\n    \t    headers: {\n    \t        \"Content-Type\": \"application/x-www-form-urlencoded\"\n    \t    }\n        }\n\n        try {\n            const response = await axios.post(`${baseUrl}/login`, credentials, config);\n\n            window.localStorage.setItem(\"username\", response.data.username);\n            window.localStorage.setItem(\"access_token\", response.data.access_token);\n            window.localStorage.setItem(\"refresh_token\", response.data.refresh_token);\n            \n            setUserAuth({\n                username: response.data.username,\n                accessToken: response.data.access_token,\n                refreshToken: response.data.refresh_token\n            });\n\n\n        } catch (e) {\n            console.log(e);\n            setCredentialsError(\"Incorrect email / password\");\n\n        }\n    }\n\n\treturn (\n        <div>\n            <NavBar />\n        \n            <div className=\"login-box\">\n\n                <h2>Settings</h2>\n\n                <h3>Change user details:</h3>\n            \n                <form onSubmit={handleRegistration}>\n\t\t\t\t\t<div>\n                        <input type=\"text\" \n                        placeholder=\"Username\"\n                        name=\"username\"\n                        value={formData.username}\n                        onChange={handleFormChange}\n                        />\n                        {formValidationErrors.emailAddress !== \"\" && <p id=\"login-error\">{formValidationErrors.emailAddress}</p>}\n                    </div>\n\n                    <div>\n                        <input type=\"email\" \n                        placeholder=\"Email address\"\n                        name=\"emailAddress\"\n                        value={formData.emailAddress}\n                        onChange={handleFormChange}\n                        />\n                        {formValidationErrors.emailAddress !== \"\" && <p id=\"login-error\">{formValidationErrors.emailAddress}</p>}\n                    </div>\n                    \n                    <div> \n                        <input type=\"password\" \n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={formData.password}\n                        onChange={handleFormChange}\n                        />\n                        <input type=\"password\" \n                        placeholder=\"Repeat password\"\n                        name=\"passwordVerification\"\n                        value={formData.passwordVerification}\n                        onChange={handleFormChange}\n                        />\n                        {formValidationErrors.emailAddress !== \"\" && <p id=\"login-error\">{formValidationErrors.emailAddress}</p>}\n                    </div>\n\n                    {credentialsError !== \"\" && <p id=\"login-error\">{credentialsError}</p>}\n                    <button>Create account</button>\n                </form>\n\n            </div>\n        </div>\n\t)\n\n}\n\nexport default Settings;"]},"metadata":{},"sourceType":"module"}