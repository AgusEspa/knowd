{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport NavBar from \"../components/Dashboard/Navbar\";\nimport Goals from \"../components/Dashboard/Goals\";\nimport useRefreshToken from \"../utils/useRefreshToken\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    userAuth\n  } = useContext(AuthContext);\n  const [goals, setGoals] = useState([]);\n  const baseUrl = 'http://localhost:8080';\n  const api = useRefreshToken();\n  useEffect(() => {\n    getGoals();\n  }, []);\n\n  const getGoals = async () => {\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${userAuth.accessToken}`\n      }\n    };\n\n    try {\n      const response = await api.get(`${baseUrl}/api/goals`, config);\n      setGoals(response.data);\n    } catch (e) {\n      console.log(`Error: ${e}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      handleGetGoals: getGoals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Goals, {\n      goals: goals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"6XbS/HgFD+7Jy01JxHgAow3KcDs=\", false, function () {\n  return [useRefreshToken];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Dashboard.js"],"names":["NavBar","Goals","useRefreshToken","useState","useEffect","useContext","AuthContext","Dashboard","userAuth","goals","setGoals","baseUrl","api","getGoals","config","headers","accessToken","response","get","data","e","console","log"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM;AAAEC,IAAAA;AAAF,MAAeH,UAAU,CAACC,WAAD,CAA/B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMQ,OAAO,GAAG,uBAAhB;AAEA,QAAMC,GAAG,GAAGV,eAAe,EAA3B;AAEAE,EAAAA,SAAS,CAAE,MAAM;AACbS,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,QAAQ,GAAG,YAAY;AAEzB,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASP,QAAQ,CAACQ,WAAY;AAD3C;AADE,KAAf;;AAMA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAS,GAAEP,OAAQ,YAAnB,EAAgCG,MAAhC,CAAvB;AACTJ,MAAAA,QAAQ,CAACO,QAAQ,CAACE,IAAV,CAAR;AAEM,KAJD,CAIE,OAAOC,CAAP,EAAU;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,CAAE,EAAxB;AACA;AACE,GAfD;;AAkBA,sBACI;AAAA,4BACL,QAAC,MAAD;AACa,MAAA,cAAc,EAAEP;AAD7B;AAAA;AAAA;AAAA;AAAA,YADK,eAII,QAAC,KAAD;AACI,MAAA,KAAK,EAAEJ;AADX;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA1CD;;GAAMF,S;UAOUL,e;;;KAPVK,S;AA4CN,eAAeA,SAAf","sourcesContent":["import NavBar from \"../components/Dashboard/Navbar\";\nimport Goals from \"../components/Dashboard/Goals\";\nimport useRefreshToken from \"../utils/useRefreshToken\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nconst Dashboard = () => {\n\n    const { userAuth } = useContext(AuthContext);\n    const [goals, setGoals] = useState([]);\n\n    const baseUrl = 'http://localhost:8080';\n\n    const api = useRefreshToken();\n\n    useEffect( () => {\n        getGoals();\n    }, []);\n\n    const getGoals = async () => {\n\n        const config = {\n            headers: {\n                'Authorization': `Bearer ${userAuth.accessToken}`\n            }\n        }\n\n        try {\n            const response = await api.get(`${baseUrl}/api/goals`, config);\n\t\t\tsetGoals(response.data);\n            \n        } catch (e) {\n\t\t\tconsole.log(`Error: ${e}`);\n\t\t}\n    };\n\n\n    return (\n        <div>\n\t\t\t<NavBar \n                handleGetGoals={getGoals}\n            />\n            <Goals \n                goals={goals}\n            />\n\n        </div>\n    )\n}\n \nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}