{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/components/Dashboard/Objectives.js\",\n    _s = $RefreshSig$();\n\nimport useAxios from \"../../utils/useAxios\";\nimport Objective from \"./Objective\";\nimport ToolBar from \"./Toolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Objectives = props => {\n  _s();\n\n  const api = useAxios();\n\n  const handleCreateObjective = async () => {\n    const newObjectiveTemplate = {\n      title: \"Title\",\n      importance: \"5\"\n    };\n\n    try {\n      const response = await api.post(\"/objectives\", newObjectiveTemplate);\n      props.setObjectives(props.objectives.concat(response.data));\n    } catch (error) {\n      console.log(`Request failed: ${error.response.data.error_message}`);\n    }\n  };\n\n  const searchObjectives = searchTerm => {\n    if (searchTerm === \"\" || searchTerm === undefined) {// return props.objectives.map(objective => \n      // \t<Objective \n      // \t\tkey={objective.id}\n      // \t\tid={objective.id}\n      // \t\ttitle={objective.title}\n      // \t\timportance={objective.importance}\n      // \t\tsetObjectives={props.setObjectives}\n      // \t/>);\n    }\n  }; // const mappedObjectives = props.objectives.map(objective => \n  // \t<Objective \n  // \t\tkey={objective.id}\n  // \t\tid={objective.id}\n  // \t\ttitle={objective.title}\n  // \t\timportance={objective.importance}\n  // \t\tsetObjectives={props.setObjectives}\n  // \t/>);\t\t\t\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToolBar, {\n      handleCreateObjective: handleCreateObjective,\n      searchObjectives: searchObjectives\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"objectives-container\",\n      children: searchObjectives()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Objectives, \"s4UP1S+mik2ekvdhiyPK6Slhdxk=\", false, function () {\n  return [useAxios];\n});\n\n_c = Objectives;\nexport default Objectives;\n\nvar _c;\n\n$RefreshReg$(_c, \"Objectives\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/components/Dashboard/Objectives.js"],"names":["useAxios","Objective","ToolBar","Objectives","props","api","handleCreateObjective","newObjectiveTemplate","title","importance","response","post","setObjectives","objectives","concat","data","error","console","log","error_message","searchObjectives","searchTerm","undefined"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAMC,GAAG,GAAGL,QAAQ,EAApB;;AAEA,QAAMM,qBAAqB,GAAG,YAAY;AAEzC,UAAMC,oBAAoB,GAAG;AAC5BC,MAAAA,KAAK,EAAE,OADqB;AAE5BC,MAAAA,UAAU,EAAE;AAFgB,KAA7B;;AAIA,QAAI;AACM,YAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,aAAT,EAAwBJ,oBAAxB,CAAvB;AAETH,MAAAA,KAAK,CAACQ,aAAN,CAAoBR,KAAK,CAACS,UAAN,CAAiBC,MAAjB,CAAwBJ,QAAQ,CAACK,IAAjC,CAApB;AAEM,KALP,CAKQ,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBF,KAAK,CAACN,QAAN,CAAeK,IAAf,CAAoBI,aAAc,EAAjE;AACT;AACD,GAdD;;AAgBA,QAAMC,gBAAgB,GAAIC,UAAD,IAAgB;AACxC,QAAIA,UAAU,KAAK,EAAf,IAAqBA,UAAU,KAAKC,SAAxC,EAAmD,CAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAXD,CApB6B,CAiC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,sBACC;AAAA,4BACC,QAAC,OAAD;AACC,MAAA,qBAAqB,EAAEhB,qBADxB;AAEC,MAAA,gBAAgB,EAAEc;AAFnB;AAAA;AAAA;AAAA;AAAA,YADD,eAKC;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACEA,gBAAgB;AADlB;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CAtDD;;GAAMjB,U;UAEOH,Q;;;KAFPG,U;AAwDN,eAAeA,UAAf","sourcesContent":["import useAxios from \"../../utils/useAxios\";\nimport Objective from \"./Objective\";\nimport ToolBar from \"./Toolbar\";\n\n\nconst Objectives = (props) => {\n\n\tconst api = useAxios();\n\n\tconst handleCreateObjective = async () => {\n\n\t\tconst newObjectiveTemplate = {\n\t\t\ttitle: \"Title\", \n\t\t\timportance: \"5\" }\n\n\t\ttry {\n            const response = await api.post(\"/objectives\", newObjectiveTemplate);\n\t\t\t\n\t\t\tprops.setObjectives(props.objectives.concat(response.data));\n            \n        } catch (error) {\n            console.log(`Request failed: ${error.response.data.error_message}`);\n\t\t}\n\t}\n\n\tconst searchObjectives = (searchTerm) => {\n\t\tif (searchTerm === \"\" || searchTerm === undefined) {\n\t\t\t// return props.objectives.map(objective => \n\t\t\t// \t<Objective \n\t\t\t// \t\tkey={objective.id}\n\t\t\t// \t\tid={objective.id}\n\t\t\t// \t\ttitle={objective.title}\n\t\t\t// \t\timportance={objective.importance}\n\t\t\t// \t\tsetObjectives={props.setObjectives}\n\t\t\t// \t/>);\n\t\t}\n\t}\n\n\t// const mappedObjectives = props.objectives.map(objective => \n\t// \t<Objective \n\t// \t\tkey={objective.id}\n\t// \t\tid={objective.id}\n\t// \t\ttitle={objective.title}\n\t// \t\timportance={objective.importance}\n\t// \t\tsetObjectives={props.setObjectives}\n\t// \t/>);\t\t\t\n\n\n\treturn (\n\t\t<div>\n\t\t\t<ToolBar \n\t\t\t\thandleCreateObjective={handleCreateObjective}\n\t\t\t\tsearchObjectives={searchObjectives}\n\t\t\t/>\n\t\t\t<div className=\"objectives-container\">\n\t\t\t\t{searchObjectives()}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Objectives;"]},"metadata":{},"sourceType":"module"}