{"ast":null,"code":"import qs from \"qs\";\nimport axios from 'axios';\nimport emailAddress from '../App';\nconst baseUrl = 'http://localhost:8080/login';\n\nconst loginService = props => {\n  const credentials = new URLSearchParams();\n  credentials.append('username', props.emailAddress);\n  credentials.append('password', props.password);\n  const config = {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  };\n  console.log(qs.stringify(credentials));\n  axios.post(baseUrl, qs.stringify(credentials), config).then(result => {\n    props.setUsername('login');\n  }).catch(error => {\n    console.log(`Error: ${error}`);\n  });\n};\n\nexport default loginService;","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/services/login.js"],"names":["qs","axios","emailAddress","baseUrl","loginService","props","credentials","URLSearchParams","append","password","config","headers","console","log","stringify","post","then","result","setUsername","catch","error"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,QAAzB;AAEA,MAAMC,OAAO,GAAG,6BAAhB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAE/B,QAAMC,WAAW,GAAG,IAAIC,eAAJ,EAApB;AACAD,EAAAA,WAAW,CAACE,MAAZ,CAAmB,UAAnB,EAA+BH,KAAK,CAACH,YAArC;AACAI,EAAAA,WAAW,CAACE,MAAZ,CAAmB,UAAnB,EAA+BH,KAAK,CAACI,QAArC;AAEA,QAAMC,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADK,GAAf;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,EAAE,CAACc,SAAH,CAAaR,WAAb,CAAZ;AAGAL,EAAAA,KAAK,CAACc,IAAN,CAAWZ,OAAX,EAAoBH,EAAE,CAACc,SAAH,CAAaR,WAAb,CAApB,EAA+CI,MAA/C,EACGM,IADH,CACSC,MAAD,IAAY;AAChBZ,IAAAA,KAAK,CAACa,WAAN,CAAkB,OAAlB;AACD,GAHH,EAIGC,KAJH,CAIUC,KAAD,IAAW;AAChBR,IAAAA,OAAO,CAACC,GAAR,CAAa,UAASO,KAAM,EAA5B;AACD,GANH;AASA,CAxBD;;AA0BA,eAAehB,YAAf","sourcesContent":["import qs from \"qs\";\nimport axios from 'axios';\nimport emailAddress from '../App';\n\nconst baseUrl = 'http://localhost:8080/login';\n\nconst loginService = (props) => {\n\t\n\tconst credentials = new URLSearchParams();\n\tcredentials.append('username', props.emailAddress);\n\tcredentials.append('password', props.password);\n\n\tconst config = {\n\t\theaders: {\n\t\t  'Content-Type': 'application/x-www-form-urlencoded'\n\t\t}\n\t}\n\t\n\tconsole.log(qs.stringify(credentials));\n\n\n\taxios.post(baseUrl, qs.stringify(credentials), config)\n  \t.then((result) => {\n    \tprops.setUsername('login')\n  \t})\n  \t.catch((error) => {\n    \tconsole.log(`Error: ${error}`)\n  \t})\n\n\t\n}\n\nexport default loginService;"]},"metadata":{},"sourceType":"module"}