{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    emailAddress: \"\",\n    username: \"\",\n    password: \"\",\n    passwordVerification: \"\"\n  });\n  const [formValidationErrors, setFormValidationErrors] = useState({\n    emailAddress: \"\",\n    username: \"\",\n    password: \"\",\n    passwordVerification: \"\"\n  });\n  const [credentialsError, setCredentialsError] = useState(\"\");\n  const [isRegistered, setIsRegistered] = useState(false);\n  const navigate = useNavigate();\n  const baseUrl = \"http://localhost:8080/api\";\n\n  const handleFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const validateForm = data => {\n    const errors = {\n      emailAddress: \"\",\n      username: \"\",\n      password: \"\",\n      passwordVerification: \"\"\n    };\n    const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!data.emailAddress) {\n      errors.emailAddress = \"Email address is required\";\n    } else if (!emailPattern.test(data.emailAddress)) {\n      errors.emailAddress = \"Not a valid email address\";\n    }\n\n    if (!data.username) {\n      errors.username = \"Username is required\";\n    } else if (data.username.length < 3) {\n      errors.username = \"Username must be at least 3 characters long\";\n    }\n\n    if (!data.password) {\n      errors.password = \"Password is required\";\n    } else if (data.password.length < 8) {\n      errors.password = \"Password must be at least 8 characters long\";\n    }\n\n    if (!data.passwordVerification) {\n      errors.passwordVerification = \"Plese re-enter the password\";\n    } else if (data.password !== data.passwordVerification) {\n      errors.passwordVerification = \"Passwords don't match\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleRegistration = async event => {\n    event.preventDefault();\n    const validationErrors = validateForm(formData);\n\n    if (validationErrors.emailAddress === \"\" && validationErrors.username === \"\" && validationErrors.password === \"\" && validationErrors.passwordVerification === \"\") {\n      const requestBody = {\n        username: formData.username,\n        emailAddress: formData.emailAddress,\n        password: formData.password\n      };\n\n      try {\n        await axios.post(`${baseUrl}/users/signup`, requestBody);\n        setIsRegistered(true);\n        await new Promise(resolve => setTimeout(resolve, 5000));\n        navigate(\"/login\");\n      } catch (error) {\n        if (!error.response) {\n          //console.log(error);\n          setCredentialsError(\"Unable to contact the server. Try again later.\");\n        } else {\n          //console.log(`Error: ${error.response.data}`);\n          setCredentialsError(error.response.data);\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-box\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: \"./logo.png\",\n          alt: \"self.OKRs logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegistration,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), formValidationErrors.username !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"login-error\",\n            children: formValidationErrors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Email address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"emailAddress\",\n            value: formData.emailAddress,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), formValidationErrors.emailAddress !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"login-error\",\n            children: formValidationErrors.emailAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"description\",\n            children: [\"Passwords must contain at least eight characters,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 94\n            }, this), \"including at least 1 letter and 1 number.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), formValidationErrors.password !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"login-error\",\n            children: formValidationErrors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 66\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Re-enter password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"passwordVerification\",\n            value: formData.passwordVerification,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), formValidationErrors.passwordVerification !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"login-error\",\n            children: formValidationErrors.passwordVerification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 78\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"login-error\",\n          children: credentialsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), isRegistered && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your account was succesfully created.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Redirecting to login page...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Register, \"cU2hC4pCtBoV1zecQlk+hw1Av4U=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Register.js"],"names":["useState","axios","useNavigate","Register","formData","setFormData","emailAddress","username","password","passwordVerification","formValidationErrors","setFormValidationErrors","credentialsError","setCredentialsError","isRegistered","setIsRegistered","navigate","baseUrl","handleFormChange","event","name","value","target","prevState","validateForm","data","errors","emailPattern","test","length","handleRegistration","preventDefault","validationErrors","requestBody","post","Promise","resolve","setTimeout","error","response"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Register = () => {\n\n    const [formData, setFormData] = useState({emailAddress: \"\", username:\"\", password: \"\", passwordVerification:\"\"});\n    const [formValidationErrors, setFormValidationErrors] = useState({emailAddress: \"\", username:\"\", password: \"\", passwordVerification:\"\"});\n    const [credentialsError, setCredentialsError] = useState(\"\");\n    const [isRegistered, setIsRegistered] = useState(false);\n\tconst navigate = useNavigate();\n\n\tconst baseUrl = \"http://localhost:8080/api\";\n\n\tconst handleFormChange = (event) => {\n        const {name, value} = event.target;\n        setFormData( prevState => ({\n            ...prevState,\n            [name]: value \n        }));\n    }\n\n    const validateForm = (data) => {\n        const errors = {emailAddress: \"\", username:\"\", password: \"\", passwordVerification:\"\"};\n    \n        const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    \n        if (!data.emailAddress) {\n            errors.emailAddress = \"Email address is required\";\n        } \n        else if (!(emailPattern.test(data.emailAddress))) {\n            errors.emailAddress = \"Not a valid email address\";\n        }\n\n        if (!data.username) {\n            errors.username = \"Username is required\";\n        } \n        else if (data.username.length < 3) {\n            errors.username = \"Username must be at least 3 characters long\";\n        }\n\n        if (!data.password) {\n            errors.password = \"Password is required\";\n        } else if (data.password.length < 8) {\n            errors.password = \"Password must be at least 8 characters long\";\n        }\n\n        if (!data.passwordVerification) {\n            errors.passwordVerification = \"Plese re-enter the password\";\n        } else if (data.password !== data.passwordVerification) {\n            errors.passwordVerification = \"Passwords don't match\";\n        }\n\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n  \tconst handleRegistration = async (event) => {\n\t\tevent.preventDefault();\n\n        const validationErrors = validateForm(formData);\n\n        if (validationErrors.emailAddress === \"\" && validationErrors.username === \"\" && validationErrors.password === \"\" && validationErrors.passwordVerification === \"\") {\n        \n            const requestBody = {username: formData.username, \n                emailAddress: formData.emailAddress,\n                password: formData.password};\n\n            try {\n                await axios.post(`${baseUrl}/users/signup`, requestBody);\n                setIsRegistered(true);\n                await new Promise(resolve => setTimeout(resolve, 5000));\n                navigate(\"/login\");\n            } catch (error) {\n                if (!error.response) {\n                    //console.log(error);\n                    setCredentialsError(\"Unable to contact the server. Try again later.\");\n                } else {\n                    //console.log(`Error: ${error.response.data}`);\n                    setCredentialsError(error.response.data);\n                }\n            } \n        }\n  \t}\n\n\n\treturn (\n\t\t<main className=\"login-container\">\n            <div className=\"login-box\">\n                <div className=\"logo-box\">\n\t\t\t\t\t<img className=\"logo\" src={\"./logo.png\"} alt=\"self.OKRs logo\"/>\n\t\t\t\t</div>  \n\n                <form onSubmit={handleRegistration}>\n\t\t\t\t\t<div>\n                        <label className=\"input-label\">Username:</label>\n                        <input type=\"text\" \n                        name=\"username\"\n                        value={formData.username}\n                        onChange={handleFormChange}\n                        />\n                        {formValidationErrors.username !== \"\" && <p id=\"login-error\">{formValidationErrors.username}</p>}\n                    </div>\n\n                    <div>\n                        <label className=\"input-label\">Email address:</label>\n                        <input type=\"text\" \n                        name=\"emailAddress\"\n                        value={formData.emailAddress}\n                        onChange={handleFormChange}\n                        />\n                        {formValidationErrors.emailAddress !== \"\" && <p id=\"login-error\">{formValidationErrors.emailAddress}</p>}\n                    </div>\n                    \n                    <div> \n                        <label className=\"input-label\">Password:</label>\n                        <p id=\"description\">Passwords must contain at least eight characters,<br/>including at least 1 letter and 1 number.</p>\n                        <input type=\"password\" \n                        name=\"password\"\n                        value={formData.password}\n                        onChange={handleFormChange}\n                        />\n                        {formValidationErrors.password !== \"\" && <p id=\"login-error\">{formValidationErrors.password}</p>}\n                        <label className=\"input-label\">Re-enter password:</label>\n                        <input type=\"password\" \n                        name=\"passwordVerification\"\n                        value={formData.passwordVerification}\n                        onChange={handleFormChange}\n                        />\n                        {formValidationErrors.passwordVerification !== \"\" && <p id=\"login-error\">{formValidationErrors.passwordVerification}</p>}\n                    </div>\n\n                    {credentialsError !== \"\" && <p id=\"login-error\">{credentialsError}</p>}\n                    <button>Create account</button>\n                </form>\n\n                {isRegistered && \n                <div>\n                    <p>Your account was succesfully created.</p>\n                    <p>Redirecting to login page...</p>\n                </div>}\n            </div>\n        </main>\n\t)\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}