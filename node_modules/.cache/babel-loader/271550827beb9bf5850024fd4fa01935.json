{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styles from \"../styles/Login.module.scss\";\nimport resources from \"../styles/Resources.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    emailAddress: \"\",\n    username: \"\",\n    password: \"\",\n    passwordVerification: \"\"\n  });\n  const [formValidationErrors, setFormValidationErrors] = useState({\n    emailAddress: \"\",\n    username: \"\",\n    password: \"\",\n    passwordVerification: \"\"\n  });\n  const [networkError, setNetworkError] = useState(\"\");\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [buttonIsEnabled, setButtonIsEnabled] = useState(true);\n  const [passwordHelperDisplay, setPasswordHelperDisplay] = useState(false);\n  const navigate = useNavigate();\n  const baseUrl = \"http://localhost:8080/api\";\n\n  const handleFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const validateForm = data => {\n    const errors = {\n      emailAddress: \"\",\n      username: \"\",\n      password: \"\",\n      passwordVerification: \"\"\n    };\n    setFormValidationErrors(errors);\n    const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!data.emailAddress) {\n      errors.emailAddress = \"Email address is required\";\n    } else if (!emailPattern.test(data.emailAddress)) {\n      errors.emailAddress = \"Please enter a valid email address\";\n    }\n\n    if (!data.username) {\n      errors.username = \"Username is required\";\n    } else if (data.username.length < 3) {\n      errors.username = \"Username must be at least 3 characters long\";\n    }\n\n    if (!data.password) {\n      errors.password = \"Password is required\";\n    } else if (data.password.length < 8) {\n      errors.password = \"Password must be at least 8 characters long\";\n    }\n\n    if (!data.passwordVerification) {\n      errors.passwordVerification = \"Plese re-enter the password\";\n    } else if (data.password !== data.passwordVerification) {\n      errors.passwordVerification = \"Passwords don't match\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleRegistration = async event => {\n    event.preventDefault();\n    setNetworkError(\"\");\n    const validationErrors = validateForm(formData);\n\n    if (validationErrors.emailAddress === \"\" && validationErrors.username === \"\" && validationErrors.password === \"\" && validationErrors.passwordVerification === \"\") {\n      const requestBody = {\n        username: formData.username,\n        emailAddress: formData.emailAddress,\n        password: formData.password\n      };\n      setIsLoading(true);\n      setButtonIsEnabled(false);\n\n      try {\n        await axios.post(`${baseUrl}/users/signup`, requestBody);\n        setIsLoading(false);\n        setIsRegistered(true);\n        await new Promise(resolve => setTimeout(resolve, 4000));\n        navigate(\"/login\");\n      } catch (error) {\n        setIsLoading(false);\n        setButtonIsEnabled(true);\n\n        if (!error.response || error.response.status >= 500) {\n          setNetworkError(\"Unable to contact the server. Please try again later.\");\n        } else if (error.response.status) {\n          if (error.response.data.includes(\"email\")) setFormValidationErrors(prevState => ({ ...prevState,\n            emailAddress: error.response.data\n          }));\n        } else setNetworkError(error.response.data);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.loginContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loginBox,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logoBox,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.logo,\n          src: \"./logo.png\",\n          alt: \"self.OKRs logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegistration,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), formValidationErrors.username !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"validation-error\",\n            type: \"text\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"validation-error-message\",\n            children: formValidationErrors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), formValidationErrors.emailAddress !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"validation-error\",\n            type: \"email\",\n            name: \"emailAddress\",\n            value: formData.emailAddress,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"validation-error-message\",\n            children: formValidationErrors.emailAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"emailAddress\",\n          value: formData.emailAddress,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./info.png\",\n            alt: \"information icon\",\n            onMouseEnter: () => setPasswordHelperDisplay(true),\n            onMouseLeave: () => setPasswordHelperDisplay(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), passwordHelperDisplay && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"password-helper\",\n            children: \"Password must have at least 8 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), formValidationErrors.password !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"validation-error\",\n            type: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"validation-error-message\",\n            children: formValidationErrors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), formValidationErrors.passwordVerification !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"validation-error\",\n            type: \"password\",\n            name: \"passwordVerification\",\n            value: formData.passwordVerification,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"validation-error-message\",\n            children: formValidationErrors.passwordVerification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"passwordVerification\",\n          value: formData.passwordVerification,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), buttonIsEnabled ? /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          children: \"Creating account...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), networkError !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registration-error-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: networkError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), isRegistered && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"successful-registration\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your account was succesfully created.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Redirecting to login...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-link\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Read legal notice.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Register, \"PTwsg5YCgYzWptyH7uaHVf6nn6g=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Register.js"],"names":["useState","useNavigate","axios","styles","resources","Register","formData","setFormData","emailAddress","username","password","passwordVerification","formValidationErrors","setFormValidationErrors","networkError","setNetworkError","isRegistered","setIsRegistered","isLoading","setIsLoading","buttonIsEnabled","setButtonIsEnabled","passwordHelperDisplay","setPasswordHelperDisplay","navigate","baseUrl","handleFormChange","event","name","value","target","prevState","validateForm","data","errors","emailPattern","test","length","handleRegistration","preventDefault","validationErrors","requestBody","post","Promise","resolve","setTimeout","error","response","status","includes","loginContainer","loginBox","logoBox","logo"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styles from \"../styles/Login.module.scss\";\nimport resources from \"../styles/Resources.module.scss\";\n\nconst Register = () => {\n\n    const [formData, setFormData] = useState({emailAddress: \"\", username:\"\", password: \"\", passwordVerification:\"\"});\n    const [formValidationErrors, setFormValidationErrors] = useState({emailAddress: \"\", username:\"\", password: \"\", passwordVerification:\"\"});\n    const [networkError, setNetworkError] = useState(\"\");\n    const [isRegistered, setIsRegistered] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [buttonIsEnabled, setButtonIsEnabled] = useState(true);\n\tconst [passwordHelperDisplay, setPasswordHelperDisplay] = useState(false);\n\tconst navigate = useNavigate();\n\n\tconst baseUrl = \"http://localhost:8080/api\";\n\n\tconst handleFormChange = (event) => {\n        const {name, value} = event.target;\n        setFormData( prevState => ({\n            ...prevState,\n            [name]: value \n        }));\n    }\n\n    const validateForm = (data) => {\n        const errors = {emailAddress: \"\", username:\"\", password: \"\", passwordVerification:\"\"};\n        setFormValidationErrors(errors);\n    \n        const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    \n        if (!data.emailAddress) {\n            errors.emailAddress = \"Email address is required\";\n        } \n        else if (!(emailPattern.test(data.emailAddress))) {\n            errors.emailAddress = \"Please enter a valid email address\";\n        }\n\n        if (!data.username) {\n            errors.username = \"Username is required\";\n        } \n        else if (data.username.length < 3) {\n            errors.username = \"Username must be at least 3 characters long\";\n        }\n\n        if (!data.password) {\n            errors.password = \"Password is required\";\n        } else if (data.password.length < 8) {\n            errors.password = \"Password must be at least 8 characters long\";\n        }\n\n        if (!data.passwordVerification) {\n            errors.passwordVerification = \"Plese re-enter the password\";\n        } else if (data.password !== data.passwordVerification) {\n            errors.passwordVerification = \"Passwords don't match\";\n        }\n\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n  \tconst handleRegistration = async (event) => {\n\t\tevent.preventDefault();\n\n        setNetworkError(\"\");\n\n        const validationErrors = validateForm(formData);\n\n        if (validationErrors.emailAddress === \"\" && validationErrors.username === \"\" && validationErrors.password === \"\" && validationErrors.passwordVerification === \"\") {\n        \n            const requestBody = {username: formData.username, \n                emailAddress: formData.emailAddress,\n                password: formData.password};\n                \n            setIsLoading(true);\n            setButtonIsEnabled(false);\n\n            try {\n                await axios.post(`${baseUrl}/users/signup`, requestBody);\n                setIsLoading(false);\n                setIsRegistered(true);\n                await new Promise(resolve => setTimeout(resolve, 4000));\n                navigate(\"/login\");\n            } catch (error) {\n                setIsLoading(false);\n                setButtonIsEnabled(true);\n                if (!error.response || error.response.status >= 500) {\n                    setNetworkError(\"Unable to contact the server. Please try again later.\");\n                } else if (error.response.status) {\n                    if (error.response.data.includes(\"email\"))\n                    setFormValidationErrors( prevState => ({\n                        ...prevState,\n                        emailAddress: error.response.data \n                    }));\n                } else setNetworkError(error.response.data);     \n            } \n        }\n  \t}\n\n\n\treturn (\n\t\t<main className={styles.loginContainer}>\n            <div className={styles.loginBox}>\n                <div className={styles.logoBox}>\n                    <img className={styles.logo} src={\"./logo.png\"} alt=\"self.OKRs logo\"/> \n                </div>  \n\n                <form onSubmit={handleRegistration} noValidate>\n\n                    <label>Username:</label>\n                    {formValidationErrors.username !== \"\" ?\n                    <div>\n                    <input id=\"validation-error\" type=\"text\" \n                        name=\"username\"\n                        value={formData.username}\n                        onChange={handleFormChange}\n                        />\n                        <p id=\"validation-error-message\">{formValidationErrors.username}</p>\n                    </div> :\n                    <input type=\"text\" \n                        name=\"username\"\n                        value={formData.username}\n                        onChange={handleFormChange}\n                        />\n                    }\n\n                    <label>Email address:</label>\n                    {formValidationErrors.emailAddress !== \"\" ?\n                    <div>\n                        <input id=\"validation-error\" type=\"email\"\n                        name=\"emailAddress\"\n                        value={formData.emailAddress}\n                        onChange={handleFormChange}\n                        />\n                        <p id=\"validation-error-message\">{formValidationErrors.emailAddress}</p>\n                    </div> :\n                    <input type=\"email\" \n                    name=\"emailAddress\"\n                    value={formData.emailAddress}\n                    onChange={handleFormChange}\n                    />\n                    }\n\n                    <div className=\"password\">\n                        <label>Password:</label>\n                        <img src={\"./info.png\"} alt=\"information icon\"\n                            onMouseEnter={() => setPasswordHelperDisplay(true)}\n        \t\t\t\t    onMouseLeave={() => setPasswordHelperDisplay(false)} />\n                        {passwordHelperDisplay && <span className=\"password-helper\">Password must have at least 8 characters</span>}\n                    </div>\n                    {formValidationErrors.password !== \"\" ?\n                    <div> \n                        <input id=\"validation-error\" type=\"password\" \n                        name=\"password\"\n                        value={formData.password}\n                        onChange={handleFormChange}\n                        />\n                        <p id=\"validation-error-message\">{formValidationErrors.password}</p>\n                    </div> :\n                    <input type=\"password\" \n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleFormChange}\n                    />\n                    }\n\n                    <label>Confirm password:</label>\n                    {formValidationErrors.passwordVerification !== \"\" ?\n                    <div> \n                        <input id=\"validation-error\" type=\"password\" \n                        name=\"passwordVerification\"\n                        value={formData.passwordVerification}\n                        onChange={handleFormChange}\n                        />\n                        <p id=\"validation-error-message\">{formValidationErrors.passwordVerification}</p>\n                    </div> :\n                    <input type=\"password\" \n                    name=\"passwordVerification\"\n                    value={formData.passwordVerification}\n                    onChange={handleFormChange}\n                    />\n                    }\n                    \n                    {buttonIsEnabled ? \n                        <button>Create account</button> :\n                        <button disabled>Creating account...</button>\n                    }\n\n                    {isLoading &&\n                    <div className=\"loading-spinner-container\">\n                        <div className=\"loading-spinner\"></div>\n                    </div>\n                    }\n\n                    {networkError !== \"\" && \n                    <div className=\"registration-error-message\">\n                        <p>{networkError}</p>\n                    </div>}\n                    {isRegistered && \n                    <div className=\"successful-registration\">\n                    <p>Your account was succesfully created.</p>\n                    <p>Redirecting to login...</p>\n                    </div>}\n\n                    <div className=\"register-link\"><p>Read legal notice.</p></div>\n                </form>\n\n                \n            </div>\n        </main>\n\t)\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}