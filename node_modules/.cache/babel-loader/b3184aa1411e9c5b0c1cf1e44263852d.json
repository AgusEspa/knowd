{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [userAuth, setUserAuth] = useState({\n    username: window.localStorage.getItem(\"username\"),\n    accessToken: window.localStorage.getItem(\"access_token\"),\n    refreshToken: window.localStorage.getItem(\"refresh_token\")\n  });\n  const navigate = useNavigate();\n  const baseUrl = 'http://localhost:8080';\n  useEffect(() => {}, []);\n\n  const checkTokenValidity = () => {\n    const decodedToken = jwt_decode(userAuth.accessToken);\n    const currentTime = new Date().getTime() / 1000;\n    const tokenExpirationDate = decodedToken.exp;\n    if (tokenExpirationDate < currentTime) updateToken();\n  };\n\n  const updateToken = async () => {\n    try {\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${userAuth.refreshToken}`\n        }\n      };\n      const response = await axios.get(`${baseUrl}/api/users/token/refresh`, config);\n\n      if (response.status === 200) {\n        window.localStorage.setItem(\"access_token\", response.data.access_token);\n        setUserAuth({\n          username: userAuth.username,\n          accessToken: response.data.access_token,\n          refreshToken: userAuth.refreshToken\n        });\n      } else {\n        logout();\n      }\n    } catch (e) {\n      console.log(`Error: ${e}`);\n      logout();\n    }\n  };\n\n  const logout = () => {\n    window.localStorage.removeItem(\"access_token\");\n    window.localStorage.removeItem(\"refresh_token\");\n    window.localStorage.removeItem(\"username\");\n    setUserAuth([]);\n    navigate('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      userAuth,\n      setUserAuth,\n      logout,\n      updateToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AuthProvider, \"tfMX7KnEiBZ+c1voZkwEaPbocgw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/context/AuthContext.js"],"names":["useState","createContext","useEffect","useNavigate","axios","jwt_decode","AuthContext","AuthProvider","children","userAuth","setUserAuth","username","window","localStorage","getItem","accessToken","refreshToken","navigate","baseUrl","checkTokenValidity","decodedToken","currentTime","Date","getTime","tokenExpirationDate","exp","updateToken","config","headers","response","get","status","setItem","data","access_token","logout","e","console","log","removeItem"],"mappings":"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","sourcesContent":["import { useState, createContext, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\n\nexport const AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n\n\tconst [userAuth, setUserAuth] = useState({\n\t\tusername: window.localStorage.getItem(\"username\"),\n\t\taccessToken: window.localStorage.getItem(\"access_token\"),\n\t\trefreshToken: window.localStorage.getItem(\"refresh_token\")}\n\t);\n\n\tconst navigate = useNavigate();\n\n\tconst baseUrl = 'http://localhost:8080';\n\n\tuseEffect(() => {\n\n\t}, []);\n\n\tconst checkTokenValidity = () => {\n\t\tconst decodedToken = jwt_decode(userAuth.accessToken);\n\t\tconst currentTime = new Date().getTime() / 1000;\n\t\tconst tokenExpirationDate = decodedToken.exp;\n\n\t\tif (tokenExpirationDate < currentTime) updateToken();\n\t}\n\n\tconst updateToken = async () => {\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': `Bearer ${userAuth.refreshToken}`\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst response = await axios.get(`${baseUrl}/api/users/token/refresh`, config);\n        \n\t\t\tif (response.status === 200) {\n\t\t\t\twindow.localStorage.setItem(\"access_token\", response.data.access_token);\n\t\t\t\tsetUserAuth({\n\t\t\t\t\tusername: userAuth.username,\n\t\t\t\t\taccessToken: response.data.access_token,\n\t\t\t\t\trefreshToken: userAuth.refreshToken}\n\t\t\t\t);\n        \t} else {\n            \tlogout();\n\t\t\t}\n        } catch (e) {\n\t\t\tconsole.log(`Error: ${e}`);\n\t\t\tlogout();\n\t\t}\n    }\n\n\tconst logout = () => {\n\t\twindow.localStorage.removeItem(\"access_token\");\n\t\twindow.localStorage.removeItem(\"refresh_token\");\n        window.localStorage.removeItem(\"username\");\n\t\tsetUserAuth([]);\n\t\tnavigate('/');\n\t}\n\n\treturn(\n\t\t<AuthContext.Provider value={{ userAuth, setUserAuth, logout, updateToken }} >\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t);\n}\n "]},"metadata":{},"sourceType":"module"}