{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [loginFormData, setLoginFormData] = useState({\n    emailAddress: \"\",\n    password: \"\"\n  });\n  const [credentialsError, setCredentialsError] = useState(\"\");\n  const [networkError, setNetworkError] = useState(\"\");\n  const [formValidationErrors, setFormValidationErrors] = useState({\n    emailAddress: \"\",\n    password: \"\"\n  });\n  const {\n    setUserAuth\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const baseUrl = \"http://localhost:8080\";\n\n  const handleLoginFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setLoginFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const validateForm = data => {\n    const errors = {\n      emailAddress: \"\",\n      password: \"\"\n    };\n    const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!data.emailAddress) {\n      errors.emailAddress = \"Email address is required\";\n    } else if (!emailPattern.test(data.emailAddress)) {\n      errors.emailAddress = \"Please enter a valid email address\";\n    }\n\n    if (!data.password) {\n      errors.password = \"Password is required\";\n    } else if (data.password.length < 8) {\n      errors.password = \"Password must be at least 8 characters long\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleLogin = event => {\n    event.preventDefault();\n    const validationErrors = validateForm(loginFormData);\n\n    if (validationErrors.emailAddress === \"\" && validationErrors.password === \"\") {\n      login();\n    }\n  };\n\n  async function login() {\n    const credentials = new URLSearchParams();\n    credentials.append(\"username\", loginFormData.emailAddress);\n    credentials.append(\"password\", loginFormData.password);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n    setFormValidationErrors({\n      emailAddress: \"\",\n      password: \"\"\n    });\n    setCredentialsError(\"\");\n    setNetworkError(\"\");\n\n    try {\n      const response = await axios.post(`${baseUrl}/login`, credentials, config);\n      window.localStorage.setItem(\"access_token\", response.data.access_token);\n      window.localStorage.setItem(\"refresh_token\", response.data.refresh_token);\n      setUserAuth(prevState => ({ ...prevState,\n        accessToken: window.localStorage.getItem(\"access_token\"),\n        refreshToken: window.localStorage.getItem(\"refresh_token\")\n      }));\n      navigate(\"/dashboard\");\n    } catch (error) {\n      if (!error.response || error.response.status >= 500) {\n        setNetworkError(\"Unable to contact the server. Please try again later.\");\n      } else {\n        setCredentialsError(\"Incorrect email / password\");\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-box\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: \"./logo.png\",\n          alt: \"self.OKRs logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        noValidate: true,\n        children: [formValidationErrors.emailAddress !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"validation-error\",\n            type: \"email\",\n            placeholder: \"Email address\",\n            name: \"emailAddress\",\n            value: loginFormData.emailAddress,\n            onChange: handleLoginFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"validation-error-message\",\n            children: formValidationErrors.emailAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email address\",\n            name: \"emailAddress\",\n            value: loginFormData.emailAddress,\n            onChange: handleLoginFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), formValidationErrors.password !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"validation-error\",\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            value: loginFormData.password,\n            onChange: handleLoginFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"validation-error-message\",\n            children: formValidationErrors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: loginFormData.password,\n          onChange: handleLoginFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"validation-error-message\",\n          children: credentialsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), networkError !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registration-error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: networkError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-link\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Forgot your password? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot_password\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-link\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"New to self.OKRs? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"WDO+v2p9t35Xv74uV+KMJUwx7YM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Login.js"],"names":["useState","useContext","axios","useNavigate","Link","AuthContext","Login","loginFormData","setLoginFormData","emailAddress","password","credentialsError","setCredentialsError","networkError","setNetworkError","formValidationErrors","setFormValidationErrors","setUserAuth","navigate","baseUrl","handleLoginFormChange","event","name","value","target","prevState","validateForm","data","errors","emailPattern","test","length","handleLogin","preventDefault","validationErrors","login","credentials","URLSearchParams","append","config","headers","response","post","window","localStorage","setItem","access_token","refresh_token","accessToken","getItem","refreshToken","error","status"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nconst Login = () => {\n\n    const [loginFormData, setLoginFormData] = useState({emailAddress: \"\", password: \"\"});\n    const [credentialsError, setCredentialsError] = useState(\"\");\n    const [networkError, setNetworkError] = useState(\"\");\n    const [formValidationErrors, setFormValidationErrors] = useState({emailAddress: \"\", password: \"\"});\n    const { setUserAuth } = useContext(AuthContext);\n    const navigate = useNavigate();\n\n    const baseUrl = \"http://localhost:8080\";\n\n    const handleLoginFormChange = (event) => {\n        const {name, value} = event.target;\n        setLoginFormData( prevState => ({\n            ...prevState,\n            [name]: value \n        }));\n    }\n\n    const validateForm = (data) => {\n        const errors = {emailAddress:\"\", password:\"\"};\n    \n        const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    \n        if (!data.emailAddress) {\n            errors.emailAddress = \"Email address is required\";\n        } \n        else if (!(emailPattern.test(data.emailAddress))) {\n            errors.emailAddress = \"Please enter a valid email address\";\n        }\n        if (!data.password) {\n            errors.password = \"Password is required\";\n        } else if (data.password.length < 8) {\n            errors.password = \"Password must be at least 8 characters long\";\n        }\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        const validationErrors = validateForm(loginFormData);\n\n        if (validationErrors.emailAddress === \"\" && validationErrors.password === \"\") {\n            login(); \n        }\n    }\n\n    async function login() {\n        const credentials = new URLSearchParams();\n        credentials.append(\"username\", loginFormData.emailAddress);\n        credentials.append(\"password\", loginFormData.password);\n        \n        const config = {\n    \t    headers: {\n    \t        \"Content-Type\": \"application/x-www-form-urlencoded\"\n    \t    }\n        }\n\n        setFormValidationErrors({emailAddress: \"\", password: \"\"});\n        setCredentialsError(\"\");\n        setNetworkError(\"\");\n\n        try {\n            const response = await axios.post(`${baseUrl}/login`, credentials, config);\n\n            window.localStorage.setItem(\"access_token\", response.data.access_token);\n            window.localStorage.setItem(\"refresh_token\", response.data.refresh_token);\n            \n            setUserAuth( prevState => ({\n                ...prevState,\n                accessToken: window.localStorage.getItem(\"access_token\"),\n                refreshToken: window.localStorage.getItem(\"refresh_token\")}\n            ));\n\n            navigate(\"/dashboard\");\n\n        } catch (error) {\n            if (!error.response || error.response.status >= 500) {\n                setNetworkError(\"Unable to contact the server. Please try again later.\");\n            } else {\n                setCredentialsError(\"Incorrect email / password\");\n            }\n        }\n    }\n\n\treturn (\n        <main className=\"login-container\">\n            <div className=\"login-box\">\n                <div className=\"logo-box\">\n                    <img className=\"logo\" src={\"./logo.png\"} alt=\"self.OKRs logo\"/> \n                </div>\n\n                <form onSubmit={handleLogin} noValidate>\n                    {formValidationErrors.emailAddress !== \"\" ?\n                    <div>\n                        <input id=\"validation-error\" type=\"email\"\n                        placeholder=\"Email address\"\n                        name=\"emailAddress\"\n                        value={loginFormData.emailAddress}\n                        onChange={handleLoginFormChange}\n                        />\n                        <p id=\"validation-error-message\">{formValidationErrors.emailAddress}</p>\n                    </div> :\n                    <div>\n                        <input type=\"email\" \n                        placeholder=\"Email address\"\n                        name=\"emailAddress\"\n                        value={loginFormData.emailAddress}\n                        onChange={handleLoginFormChange}\n                        />\n                    </div>\n                    }\n                    {formValidationErrors.password !== \"\" ?\n                    <div> \n                        <input id=\"validation-error\" type=\"password\" \n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={loginFormData.password}\n                        onChange={handleLoginFormChange}\n                        />\n                        <p id=\"validation-error-message\">{formValidationErrors.password}</p>\n                    </div> :\n                    <input type=\"password\" \n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={loginFormData.password}\n                        onChange={handleLoginFormChange}\n                        />\n                    }\n                    {credentialsError !== \"\" && <p id=\"validation-error-message\">{credentialsError}</p>}\n                    <button>Log in</button>\n                </form>\n                {networkError !== \"\" && \n                    <div className=\"registration-error-message\">\n                        <p>{networkError}</p>\n                    </div>}\n                <div className=\"login-link\"><p>Forgot your password? <Link to=\"/forgot_password\">Reset</Link></p></div>\n                <div className=\"login-link\"><p>New to self.OKRs? <Link to=\"/register\">Register</Link></p></div>\n            </div>\n        </main>\n\t)\n\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}