{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport NavBar from \"../components/Dashboard/Navbar\";\nimport Goals from \"../components/Dashboard/Goals\";\nimport axios from 'axios';\nimport { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    userAuth,\n    checkTokenValidity,\n    updateToken\n  } = useContext(AuthContext);\n  const [goals, setGoals] = useState([]);\n  const baseUrl = 'http://localhost:8080';\n  useEffect(() => {\n    handleGetGoals();\n  }, []);\n\n  const handleGetGoals = () => {\n    const tokenValidity = checkTokenValidity();\n\n    if (tokenValidity === false) {\n      const updated = updateToken();\n      updated.then(response => {\n        console.log(userAuth.accessToken);\n        if (response) getGoals();\n      });\n    } else getGoals();\n  };\n\n  const getGoals = async () => {\n    console.log(userAuth.accessToken);\n\n    try {\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${userAuth.accessToken}`\n        }\n      };\n      const response = await axios.get(`${baseUrl}/api/goals`, config);\n      setGoals(response.data);\n      console.log(response.data);\n    } catch (e) {\n      console.log(`Error: ${e}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      handleGetGoals: handleGetGoals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Goals, {\n      goals: goals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"gcisdAx6xJLWJ04Mwz9WbkM6stU=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Dashboard.js"],"names":["NavBar","Goals","axios","useState","useEffect","useContext","AuthContext","Dashboard","userAuth","checkTokenValidity","updateToken","goals","setGoals","baseUrl","handleGetGoals","tokenValidity","updated","then","response","console","log","accessToken","getGoals","config","headers","get","data","e"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,kBAAZ;AAAgCC,IAAAA;AAAhC,MAAgDL,UAAU,CAACC,WAAD,CAAhE;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMU,OAAO,GAAG,uBAAhB;AAEAT,EAAAA,SAAS,CAAE,MAAM;AACbU,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,cAAc,GAAG,MAAM;AACzB,UAAMC,aAAa,GAAGN,kBAAkB,EAAxC;;AACA,QAAIM,aAAa,KAAK,KAAtB,EAA6B;AACzB,YAAMC,OAAO,GAAGN,WAAW,EAA3B;AACAM,MAAAA,OAAO,CAACC,IAAR,CAAcC,QAAD,IAAc;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAQ,CAACa,WAArB;AACA,YAAIH,QAAJ,EAAcI,QAAQ;AACzB,OAHD;AAKH,KAPD,MAOOA,QAAQ;AAClB,GAVD;;AAYA,QAAMA,QAAQ,GAAG,YAAY;AAEzBH,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAQ,CAACa,WAArB;;AAEA,QAAI;AAET,YAAME,MAAM,GAAG;AACdC,QAAAA,OAAO,EAAE;AACR,2BAAkB,UAAShB,QAAQ,CAACa,WAAY;AADxC;AADK,OAAf;AAKA,YAAMH,QAAQ,GAAG,MAAMhB,KAAK,CAACuB,GAAN,CAAW,GAAEZ,OAAQ,YAArB,EAAkCU,MAAlC,CAAvB;AACAX,MAAAA,QAAQ,CAACM,QAAQ,CAACQ,IAAV,CAAR;AAESP,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACQ,IAArB;AAEH,KAZD,CAYE,OAAOC,CAAP,EAAU;AACjBR,MAAAA,OAAO,CAACC,GAAR,CAAa,UAASO,CAAE,EAAxB;AACA;AACE,GAnBD;;AAqBA,sBACI;AAAA,4BACL,QAAC,MAAD;AACa,MAAA,cAAc,EAAEb;AAD7B;AAAA;AAAA;AAAA;AAAA,YADK,eAII,QAAC,KAAD;AACI,MAAA,KAAK,EAAEH;AADX;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAvDD;;GAAMJ,S;;KAAAA,S;AAyDN,eAAeA,SAAf","sourcesContent":["import NavBar from \"../components/Dashboard/Navbar\";\nimport Goals from \"../components/Dashboard/Goals\";\nimport axios from 'axios';\nimport { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nconst Dashboard = () => {\n\n    const { userAuth, checkTokenValidity, updateToken } = useContext(AuthContext);\n    const [goals, setGoals] = useState([]);\n\n    const baseUrl = 'http://localhost:8080';\n\n    useEffect( () => {\n        handleGetGoals();\n    }, []);\n\n    const handleGetGoals = () => {\n        const tokenValidity = checkTokenValidity();\n        if (tokenValidity === false) {\n            const updated = updateToken();\n            updated.then((response) => {\n                console.log(userAuth.accessToken);\n                if (response) getGoals();\n            });\n            \n        } else getGoals();\n    }\n\n    const getGoals = async () => {\n\n        console.log(userAuth.accessToken);\n        \n        try {\n            \n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': `Bearer ${userAuth.accessToken}`\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst response = await axios.get(`${baseUrl}/api/goals`, config);\n\t\t\tsetGoals(response.data);\n            \n            console.log(response.data);\n            \n        } catch (e) {\n\t\t\tconsole.log(`Error: ${e}`);\n\t\t}\n    }\n\n    return (\n        <div>\n\t\t\t<NavBar \n                handleGetGoals={handleGetGoals}\n            />\n            <Goals \n                goals={goals}\n            />\n\n        </div>\n    )\n}\n \nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}