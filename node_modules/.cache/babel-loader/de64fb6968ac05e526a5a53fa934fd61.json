{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/components/Dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport NavBar from \"./Navbar\";\nimport Goals from \"./Goals\";\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = props => {\n  _s();\n\n  const [username, setUsername] = useState('Username');\n  const baseUrl = 'http://localhost:8080';\n  useEffect(() => {\n    const fetchedUsername = getUsername(props.accessToken);\n    setUsername(fetchedUsername);\n  }, [props.accessToken]);\n\n  const getUsername = currentAccessToken => {\n    const token = `Bearer ${currentAccessToken}`;\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    axios.get(`${baseUrl}/api/users/authenticated`, config).then(response => {\n      if (response.status === 200) return response.data;else alert(\"error\");\n    }).then(data => {\n      return data.username;\n    }).catch(error => {\n      console.log(`Error: ${error}`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      username: props.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Goals, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"S7x50W9OTE62vtdAH61piN80djc=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/components/Dashboard/Dashboard.js"],"names":["NavBar","Goals","useState","useEffect","axios","Dashboard","props","username","setUsername","baseUrl","fetchedUsername","getUsername","accessToken","currentAccessToken","token","config","headers","Authorization","get","then","response","status","data","alert","catch","error","console","log"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,UAAD,CAAxC;AAEA,QAAMO,OAAO,GAAG,uBAAhB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,eAAe,GAAGC,WAAW,CAACL,KAAK,CAACM,WAAP,CAAnC;AACAJ,IAAAA,WAAW,CAACE,eAAD,CAAX;AACD,GAHM,EAGJ,CAACJ,KAAK,CAACM,WAAP,CAHI,CAAT;;AAMA,QAAMD,WAAW,GAAIE,kBAAD,IAAwB;AACxC,UAAMC,KAAK,GAAI,UAASD,kBAAmB,EAA3C;AACA,UAAME,MAAM,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEH;AAAjB;AAAX,KAAf;AAEAV,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAET,OAAQ,0BAArB,EAAgDM,MAAhD,EACKI,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,OAAOD,QAAQ,CAACE,IAAhB,CAA7B,KACKC,KAAK,CAAC,OAAD,CAAL;AACR,KAJL,EAKKJ,IALL,CAKUG,IAAI,IAAI;AACV,aAAOA,IAAI,CAACf,QAAZ;AACH,KAPL,EAQKiB,KARL,CAQYC,KAAD,IAAW;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,KAAM,EAA5B;AACF,KAVL;AAWH,GAfD;;AAiBA,sBACI;AAAA,4BACL,QAAC,MAAD;AACa,MAAA,QAAQ,EAAEnB,KAAK,CAACC;AAD7B;AAAA;AAAA;AAAA;AAAA,YADK,eAII,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAtCD;;GAAMF,S;;KAAAA,S;AAwCN,eAAeA,SAAf","sourcesContent":["import NavBar from \"./Navbar\";\nimport Goals from \"./Goals\";\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nconst Dashboard = (props) => {\n\n    const [username, setUsername] = useState('Username');\n\n    const baseUrl = 'http://localhost:8080';\n\n    useEffect(() => {\n        const fetchedUsername = getUsername(props.accessToken);\n        setUsername(fetchedUsername);\n      }, [props.accessToken]);\n\n\n    const getUsername = (currentAccessToken) => {\n        const token = `Bearer ${currentAccessToken}`;\n        const config = { headers: { Authorization: token } };\n        \n        axios.get(`${baseUrl}/api/users/authenticated`, config)\n            .then(response => {\n                if (response.status === 200) return response.data;\n                else alert(\"error\");\n            })\n            .then(data => {\n                return data.username;\n            })\n            .catch((error) => {\n      \t        console.log(`Error: ${error}`)\n            });\n    }\n\n    return (\n        <div>\n\t\t\t<NavBar \n                username={props.username} \n            />\n            <Goals />\n\n        </div>\n    )\n}\n \nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}