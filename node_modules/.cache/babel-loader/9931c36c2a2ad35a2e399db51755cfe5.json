{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Settings.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport useAxios from \"../utils/useAxios\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport NavBar from \"../components/Dashboard/Navbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const {\n    userAuth,\n    logout\n  } = useContext(AuthContext);\n  const [formData, setFormData] = useState({\n    username: userAuth.username,\n    emailAddress: userAuth.emailAddress,\n    oldPassword: \"\",\n    newPassword: \"\",\n    passwordVerification: \"\"\n  });\n  const [credentialsError, setCredentialsError] = useState(\"\");\n  const [formValidationErrors, setFormValidationErrors] = useState({\n    username: \"\",\n    emailAddress: \"\",\n    oldPassword: \"\",\n    newPassword: \"\",\n    passwordVerification: \"\"\n  });\n  const [passwordHelperDisplay, setPasswordHelperDisplay] = useState(false);\n  const api = useAxios();\n\n  const handleFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n    setFormValidationErrors(prevState => ({ ...prevState,\n      [name]: \"\"\n    }));\n    setCredentialsError(\"\");\n  };\n\n  const validateDetailsForm = data => {\n    const errors = {\n      username: \"\",\n      emailAddress: \"\",\n      oldPassword: \"\"\n    };\n    const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!data.emailAddress) {\n      errors.emailAddress = \"Email address is required\";\n    } else if (!emailPattern.test(data.emailAddress)) {\n      errors.emailAddress = \"Please enter a valid email address\";\n    }\n\n    if (!data.username) {\n      errors.username = \"Username is required\";\n    } else if (data.username.length < 3) {\n      errors.username = \"Username must be at least 3 characters long\";\n    }\n\n    if (!data.oldPassword) {\n      errors.oldPassword = \"Password is required\";\n    } else if (data.oldPassword.length < 8) {\n      errors.oldPassword = \"Password must be at least 8 characters long\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleEditUserDetails = async event => {\n    event.preventDefault();\n    const validationErrors = validateDetailsForm(formData);\n\n    if (validationErrors.emailAddress === \"\" && validationErrors.username === \"\" && validationErrors.oldPassword === \"\") {\n      try {\n        await api.put(\"/users\", formData);\n        logout();\n      } catch (error) {\n        if (!error.response) {\n          //console.log(error);\n          setCredentialsError(\"Unable to contact the server. Try again later.\");\n        } else {\n          //console.log(`Error: ${error.response.data}`);\n          setCredentialsError(error.response.data);\n        }\n      }\n    }\n  };\n\n  const validatePasswordForm = data => {\n    const errors = {\n      oldPassword: \"\",\n      newPassword: \"\",\n      passwordVerification: \"\"\n    };\n\n    if (!data.oldPassword) {\n      errors.oldPassword = \"Password is required\";\n    } else if (data.oldPassword.length < 8) {\n      errors.oldPassword = \"Password must be at least 8 characters long\";\n    }\n\n    if (!data.newPassword) {\n      errors.newPassword = \"Password is required\";\n    } else if (data.newPassword.length < 8) {\n      errors.newPassword = \"Password must be at least 8 characters long\";\n    }\n\n    if (!data.passwordVerification) {\n      errors.passwordVerification = \"Plese re-enter the password\";\n    } else if (data.newPassword !== data.passwordVerification) {\n      errors.passwordVerification = \"Passwords don't match\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleEditUserPassword = async event => {\n    event.preventDefault();\n    const validationErrors = validatePasswordForm(formData);\n\n    if (validationErrors.oldPassword === \"\" && validationErrors.newPassword === \"\" && validationErrors.passwordVerification === \"\") {\n      try {\n        await api.put(\"/users\", formData);\n        logout();\n      } catch (error) {\n        if (!error.response) {\n          //console.log(error);\n          setCredentialsError(\"Unable to contact the server. Try again later.\");\n        } else {\n          //console.log(`Error: ${error.response.data}`);\n          setCredentialsError(error.response.data);\n        }\n      }\n    }\n  };\n\n  const validateDeleteForm = data => {\n    const errors = {\n      emailAddress: \"\",\n      oldPassword: \"\"\n    };\n    const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!data.emailAddress) {\n      errors.emailAddress = \"Email address is required\";\n    } else if (!emailPattern.test(data.emailAddress)) {\n      errors.emailAddress = \"Please enter a valid email address\";\n    }\n\n    if (!data.oldPassword) {\n      errors.oldPassword = \"Password is required\";\n    } else if (data.oldPassword.length < 8) {\n      errors.oldPassword = \"Password must be at least 8 characters long\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleDeleteUser = async event => {\n    event.preventDefault();\n    const validationErrors = validateDeleteForm(formData);\n\n    if (validationErrors.emailAddress === \"\" && validationErrors.oldPassword === \"\") {\n      try {\n        console.log(formData);\n        await api.delete(\"/users\", {\n          data: formData\n        });\n        logout();\n      } catch (error) {\n        if (!error.response) {\n          //console.log(error);\n          setCredentialsError(\"Unable to contact the server. Please try again later.\");\n        } else {\n          //console.log(error);\n          setCredentialsError(\"Incorrect email / password\");\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"settings-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit username and email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditUserDetails,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), formValidationErrors.username !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"text\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"validation-error-message\",\n              children: formValidationErrors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Email address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), formValidationErrors.emailAddress !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"email\",\n              name: \"emailAddress\",\n              value: formData.emailAddress,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"validation-error-message\",\n              children: formValidationErrors.emailAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"emailAddress\",\n            value: formData.emailAddress,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Current password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), formValidationErrors.oldPassword !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"password\",\n              name: \"oldPassword\",\n              value: formData.oldPassword,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"validation-error-message\",\n              children: formValidationErrors.oldPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"oldPassword\",\n            value: formData.oldPassword,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"validation-error-message\",\n            children: credentialsError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Change password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditUserPassword,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Current password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), formValidationErrors.oldPassword !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"password\",\n              name: \"oldPassword\",\n              value: formData.oldPassword,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"validation-error-message\",\n              children: formValidationErrors.oldPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"oldPassword\",\n            value: formData.oldPassword,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./info.png\",\n              alt: \"information icon\",\n              onMouseEnter: () => setPasswordHelperDisplay(true),\n              onMouseLeave: () => setPasswordHelperDisplay(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 25\n            }, this), passwordHelperDisplay && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"password-helper\",\n              children: \"Password must have at least 8 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"New password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), formValidationErrors.newPassword !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"password\",\n              name: \"newPassword\",\n              value: formData.newPassword,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"validation-error-message\",\n              children: formValidationErrors.newPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"newPassword\",\n            value: formData.newPassword,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Re-enter password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this), formValidationErrors.passwordVerification !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"password\",\n              name: \"passwordVerification\",\n              value: formData.passwordVerification,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"validation-error-message\",\n              children: formValidationErrors.passwordVerification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"passwordVerification\",\n            value: formData.passwordVerification,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"validation-error-message\",\n            children: credentialsError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Permanently Delete Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleDeleteUser,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Email address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), formValidationErrors.emailAddress !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"email\",\n              name: \"emailAddress\",\n              value: formData.emailAddress,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"validation-error-message\",\n              children: formValidationErrors.emailAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"emailAddress\",\n            value: formData.emailAddress,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Current password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this), formValidationErrors.oldPassword !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"password\",\n              name: \"oldPassword\",\n              value: formData.oldPassword,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"validation-error-message\",\n              children: formValidationErrors.oldPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"oldPassword\",\n            value: formData.oldPassword,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"validation-error-message\",\n            children: credentialsError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"WARNING - All content will be lost.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Settings, \"a5KHy1nCsHMb+Ohxha+aE7+0w1c=\", false, function () {\n  return [useAxios];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Settings.js"],"names":["useState","useContext","useAxios","AuthContext","NavBar","Settings","userAuth","logout","formData","setFormData","username","emailAddress","oldPassword","newPassword","passwordVerification","credentialsError","setCredentialsError","formValidationErrors","setFormValidationErrors","passwordHelperDisplay","setPasswordHelperDisplay","api","handleFormChange","event","name","value","target","prevState","validateDetailsForm","data","errors","emailPattern","test","length","handleEditUserDetails","preventDefault","validationErrors","put","error","response","validatePasswordForm","handleEditUserPassword","validateDeleteForm","handleDeleteUser","console","log","delete"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,MAAP,MAAmB,uCAAnB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBN,UAAU,CAACE,WAAD,CAAvC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AAACU,IAAAA,QAAQ,EAAEJ,QAAQ,CAACI,QAApB;AAA8BC,IAAAA,YAAY,EAAEL,QAAQ,CAACK,YAArD;AAAmEC,IAAAA,WAAW,EAAE,EAAhF;AAAoFC,IAAAA,WAAW,EAAE,EAAjG;AAAqGC,IAAAA,oBAAoB,EAAE;AAA3H,GAAD,CAAxC;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0ChB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACiB,oBAAD,EAAuBC,uBAAvB,IAAkDlB,QAAQ,CAAC;AAACU,IAAAA,QAAQ,EAAE,EAAX;AAAeC,IAAAA,YAAY,EAAE,EAA7B;AAAiCC,IAAAA,WAAW,EAAE,EAA9C;AAAkDC,IAAAA,WAAW,EAAE,EAA/D;AAAmEC,IAAAA,oBAAoB,EAAE;AAAzF,GAAD,CAAhE;AACH,QAAM,CAACK,qBAAD,EAAwBC,wBAAxB,IAAoDpB,QAAQ,CAAC,KAAD,CAAlE;AAGA,QAAMqB,GAAG,GAAGnB,QAAQ,EAApB;;AAEG,QAAMoB,gBAAgB,GAAIC,KAAD,IAAW;AAChC,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACAjB,IAAAA,WAAW,CAAEkB,SAAS,KAAK,EACvB,GAAGA,SADoB;AAEvB,OAACH,IAAD,GAAQC;AAFe,KAAL,CAAX,CAAX;AAIAP,IAAAA,uBAAuB,CAAES,SAAS,KAAK,EACnC,GAAGA,SADgC;AAEnC,OAACH,IAAD,GAAQ;AAF2B,KAAL,CAAX,CAAvB;AAIAR,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACH,GAXD;;AAaA,QAAMY,mBAAmB,GAAIC,IAAD,IAAU;AAClC,UAAMC,MAAM,GAAG;AAACpB,MAAAA,QAAQ,EAAC,EAAV;AAAcC,MAAAA,YAAY,EAAE,EAA5B;AAAgCC,MAAAA,WAAW,EAAE;AAA7C,KAAf;AAEA,UAAMmB,YAAY,GAAG,6CAArB;;AAEA,QAAI,CAACF,IAAI,CAAClB,YAAV,EAAwB;AACpBmB,MAAAA,MAAM,CAACnB,YAAP,GAAsB,2BAAtB;AACH,KAFD,MAGK,IAAI,CAAEoB,YAAY,CAACC,IAAb,CAAkBH,IAAI,CAAClB,YAAvB,CAAN,EAA6C;AAC9CmB,MAAAA,MAAM,CAACnB,YAAP,GAAsB,oCAAtB;AACH;;AAED,QAAI,CAACkB,IAAI,CAACnB,QAAV,EAAoB;AAChBoB,MAAAA,MAAM,CAACpB,QAAP,GAAkB,sBAAlB;AACH,KAFD,MAGK,IAAImB,IAAI,CAACnB,QAAL,CAAcuB,MAAd,GAAuB,CAA3B,EAA8B;AAC/BH,MAAAA,MAAM,CAACpB,QAAP,GAAkB,6CAAlB;AACH;;AAED,QAAI,CAACmB,IAAI,CAACjB,WAAV,EAAuB;AACnBkB,MAAAA,MAAM,CAAClB,WAAP,GAAqB,sBAArB;AACH,KAFD,MAEO,IAAIiB,IAAI,CAACjB,WAAL,CAAiBqB,MAAjB,GAA0B,CAA9B,EAAiC;AACpCH,MAAAA,MAAM,CAAClB,WAAP,GAAqB,6CAArB;AACH;;AAEDM,IAAAA,uBAAuB,CAACY,MAAD,CAAvB;AACA,WAAOA,MAAP;AACH,GA3BD;;AA6BA,QAAMI,qBAAqB,GAAG,MAAOX,KAAP,IAAiB;AAC3CA,IAAAA,KAAK,CAACY,cAAN;AAEA,UAAMC,gBAAgB,GAAGR,mBAAmB,CAACpB,QAAD,CAA5C;;AAEA,QAAI4B,gBAAgB,CAACzB,YAAjB,KAAkC,EAAlC,IAAwCyB,gBAAgB,CAAC1B,QAAjB,KAA8B,EAAtE,IAA4E0B,gBAAgB,CAACxB,WAAjB,KAAiC,EAAjH,EAAqH;AAEjH,UAAI;AACA,cAAMS,GAAG,CAACgB,GAAJ,CAAQ,QAAR,EAAkB7B,QAAlB,CAAN;AACAD,QAAAA,MAAM;AAET,OAJD,CAIE,OAAO+B,KAAP,EAAc;AACZ,YAAI,CAACA,KAAK,CAACC,QAAX,EAAqB;AACjB;AACAvB,UAAAA,mBAAmB,CAAC,gDAAD,CAAnB;AACH,SAHD,MAGO;AACH;AACAA,UAAAA,mBAAmB,CAACsB,KAAK,CAACC,QAAN,CAAeV,IAAhB,CAAnB;AACH;AACJ;AACJ;AAEJ,GAtBD;;AAwBA,QAAMW,oBAAoB,GAAIX,IAAD,IAAU;AACnC,UAAMC,MAAM,GAAG;AAAClB,MAAAA,WAAW,EAAE,EAAd;AAAkBC,MAAAA,WAAW,EAAE,EAA/B;AAAmCC,MAAAA,oBAAoB,EAAE;AAAzD,KAAf;;AAEA,QAAI,CAACe,IAAI,CAACjB,WAAV,EAAuB;AACnBkB,MAAAA,MAAM,CAAClB,WAAP,GAAqB,sBAArB;AACH,KAFD,MAEO,IAAIiB,IAAI,CAACjB,WAAL,CAAiBqB,MAAjB,GAA0B,CAA9B,EAAiC;AACpCH,MAAAA,MAAM,CAAClB,WAAP,GAAqB,6CAArB;AACH;;AAED,QAAI,CAACiB,IAAI,CAAChB,WAAV,EAAuB;AACnBiB,MAAAA,MAAM,CAACjB,WAAP,GAAqB,sBAArB;AACH,KAFD,MAEO,IAAIgB,IAAI,CAAChB,WAAL,CAAiBoB,MAAjB,GAA0B,CAA9B,EAAiC;AACpCH,MAAAA,MAAM,CAACjB,WAAP,GAAqB,6CAArB;AACH;;AAED,QAAI,CAACgB,IAAI,CAACf,oBAAV,EAAgC;AAC5BgB,MAAAA,MAAM,CAAChB,oBAAP,GAA8B,6BAA9B;AACH,KAFD,MAEO,IAAIe,IAAI,CAAChB,WAAL,KAAqBgB,IAAI,CAACf,oBAA9B,EAAoD;AACvDgB,MAAAA,MAAM,CAAChB,oBAAP,GAA8B,uBAA9B;AACH;;AAEDI,IAAAA,uBAAuB,CAACY,MAAD,CAAvB;AACA,WAAOA,MAAP;AACH,GAvBD;;AAyBA,QAAMW,sBAAsB,GAAI,MAAOlB,KAAP,IAAiB;AAC7CA,IAAAA,KAAK,CAACY,cAAN;AAEA,UAAMC,gBAAgB,GAAGI,oBAAoB,CAAChC,QAAD,CAA7C;;AAEA,QAAI4B,gBAAgB,CAACxB,WAAjB,KAAiC,EAAjC,IAAuCwB,gBAAgB,CAACvB,WAAjB,KAAiC,EAAxE,IAA8EuB,gBAAgB,CAACtB,oBAAjB,KAA0C,EAA5H,EAAiI;AAE7H,UAAI;AACA,cAAMO,GAAG,CAACgB,GAAJ,CAAQ,QAAR,EAAkB7B,QAAlB,CAAN;AACAD,QAAAA,MAAM;AAET,OAJD,CAIE,OAAO+B,KAAP,EAAc;AACZ,YAAI,CAACA,KAAK,CAACC,QAAX,EAAqB;AACjB;AACAvB,UAAAA,mBAAmB,CAAC,gDAAD,CAAnB;AACH,SAHD,MAGO;AACH;AACAA,UAAAA,mBAAmB,CAACsB,KAAK,CAACC,QAAN,CAAeV,IAAhB,CAAnB;AACH;AACJ;AACJ;AAEJ,GAtBD;;AAwBA,QAAMa,kBAAkB,GAAIb,IAAD,IAAU;AACjC,UAAMC,MAAM,GAAG;AAACnB,MAAAA,YAAY,EAAE,EAAf;AAAmBC,MAAAA,WAAW,EAAE;AAAhC,KAAf;AAEA,UAAMmB,YAAY,GAAG,6CAArB;;AAEA,QAAI,CAACF,IAAI,CAAClB,YAAV,EAAwB;AACpBmB,MAAAA,MAAM,CAACnB,YAAP,GAAsB,2BAAtB;AACH,KAFD,MAGK,IAAI,CAAEoB,YAAY,CAACC,IAAb,CAAkBH,IAAI,CAAClB,YAAvB,CAAN,EAA6C;AAC9CmB,MAAAA,MAAM,CAACnB,YAAP,GAAsB,oCAAtB;AACH;;AAED,QAAI,CAACkB,IAAI,CAACjB,WAAV,EAAuB;AACnBkB,MAAAA,MAAM,CAAClB,WAAP,GAAqB,sBAArB;AACH,KAFD,MAEO,IAAIiB,IAAI,CAACjB,WAAL,CAAiBqB,MAAjB,GAA0B,CAA9B,EAAiC;AACpCH,MAAAA,MAAM,CAAClB,WAAP,GAAqB,6CAArB;AACH;;AAEDM,IAAAA,uBAAuB,CAACY,MAAD,CAAvB;AACA,WAAOA,MAAP;AACH,GApBD;;AAsBA,QAAMa,gBAAgB,GAAG,MAAOpB,KAAP,IAAiB;AACtCA,IAAAA,KAAK,CAACY,cAAN;AAEA,UAAMC,gBAAgB,GAAGM,kBAAkB,CAAClC,QAAD,CAA3C;;AAEA,QAAI4B,gBAAgB,CAACzB,YAAjB,KAAkC,EAAlC,IAAwCyB,gBAAgB,CAACxB,WAAjB,KAAiC,EAA7E,EAAiF;AAE7E,UAAI;AACAgC,QAAAA,OAAO,CAACC,GAAR,CAAYrC,QAAZ;AAEA,cAAMa,GAAG,CAACyB,MAAJ,CAAW,QAAX,EAAqB;AAACjB,UAAAA,IAAI,EAAErB;AAAP,SAArB,CAAN;AACAD,QAAAA,MAAM;AACT,OALD,CAKE,OAAO+B,KAAP,EAAc;AACZ,YAAI,CAACA,KAAK,CAACC,QAAX,EAAqB;AACjB;AACAvB,UAAAA,mBAAmB,CAAC,uDAAD,CAAnB;AACH,SAHD,MAGO;AACH;AACAA,UAAAA,mBAAmB,CAAC,4BAAD,CAAnB;AACH;AACJ;AACJ;AAEJ,GAvBD;;AA0BH,sBACO;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA,8BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAM,UAAA,QAAQ,EAAEkB,qBAAhB;AAAuC,UAAA,UAAU,MAAjD;AAAA,kCAEI;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGKjB,oBAAoB,CAACP,QAArB,KAAkC,EAAlC,gBACD;AAAA,oCACA;AAAO,cAAA,EAAE,EAAC,kBAAV;AAA6B,cAAA,IAAI,EAAC,MAAlC;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,KAAK,EAAEF,QAAQ,CAACE,QAFpB;AAGI,cAAA,QAAQ,EAAEY;AAHd;AAAA;AAAA;AAAA;AAAA,oBADA,eAMI;AAAG,cAAA,EAAE,EAAC,0BAAN;AAAA,wBAAkCL,oBAAoB,CAACP;AAAvD;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,gBASD;AAAO,YAAA,IAAI,EAAC,MAAZ;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,KAAK,EAAEF,QAAQ,CAACE,QAFpB;AAGI,YAAA,QAAQ,EAAEY;AAHd;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAmBI;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBJ,EAoBKL,oBAAoB,CAACN,YAArB,KAAsC,EAAtC,gBACD;AAAA,oCACI;AAAO,cAAA,EAAE,EAAC,kBAAV;AAA6B,cAAA,IAAI,EAAC,OAAlC;AACA,cAAA,IAAI,EAAC,cADL;AAEA,cAAA,KAAK,EAAEH,QAAQ,CAACG,YAFhB;AAGA,cAAA,QAAQ,EAAEW;AAHV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI;AAAG,cAAA,EAAE,EAAC,0BAAN;AAAA,wBAAkCL,oBAAoB,CAACN;AAAvD;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,gBASD;AAAO,YAAA,IAAI,EAAC,OAAZ;AACA,YAAA,IAAI,EAAC,cADL;AAEA,YAAA,KAAK,EAAEH,QAAQ,CAACG,YAFhB;AAGA,YAAA,QAAQ,EAAEW;AAHV;AAAA;AAAA;AAAA;AAAA,kBA7BJ,eAoCI;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApCJ,EAqCKL,oBAAoB,CAACL,WAArB,KAAqC,EAArC,gBACD;AAAA,oCACI;AAAO,cAAA,EAAE,EAAC,kBAAV;AAA6B,cAAA,IAAI,EAAC,UAAlC;AACA,cAAA,IAAI,EAAC,aADL;AAEA,cAAA,KAAK,EAAEJ,QAAQ,CAACI,WAFhB;AAGA,cAAA,QAAQ,EAAEU;AAHV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI;AAAG,cAAA,EAAE,EAAC,0BAAN;AAAA,wBAAkCL,oBAAoB,CAACL;AAAvD;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,gBASD;AAAO,YAAA,IAAI,EAAC,UAAZ;AACA,YAAA,IAAI,EAAC,aADL;AAEA,YAAA,KAAK,EAAEJ,QAAQ,CAACI,WAFhB;AAGA,YAAA,QAAQ,EAAEU;AAHV;AAAA;AAAA;AAAA;AAAA,kBA9CJ,EAqDKP,gBAAgB,KAAK,EAArB,iBAA2B;AAAG,YAAA,EAAE,EAAC,0BAAN;AAAA,sBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,kBArDhC,eAsDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtDJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAkEI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAM,UAAA,QAAQ,EAAE0B,sBAAhB;AAAwC,UAAA,UAAU,MAAlD;AAAA,kCAEI;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGKxB,oBAAoB,CAACL,WAArB,KAAqC,EAArC,gBACD;AAAA,oCACI;AAAO,cAAA,EAAE,EAAC,kBAAV;AAA6B,cAAA,IAAI,EAAC,UAAlC;AACA,cAAA,IAAI,EAAC,aADL;AAEA,cAAA,KAAK,EAAEJ,QAAQ,CAACI,WAFhB;AAGA,cAAA,QAAQ,EAAEU;AAHV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI;AAAG,cAAA,EAAE,EAAC,0BAAN;AAAA,wBAAkCL,oBAAoB,CAACL;AAAvD;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,gBASD;AAAO,YAAA,IAAI,EAAC,UAAZ;AACA,YAAA,IAAI,EAAC,aADL;AAEA,YAAA,KAAK,EAAEJ,QAAQ,CAACI,WAFhB;AAGA,YAAA,QAAQ,EAAEU;AAHV;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAmBI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAK,cAAA,GAAG,EAAE,YAAV;AAAwB,cAAA,GAAG,EAAC,kBAA5B;AACI,cAAA,YAAY,EAAE,MAAMF,wBAAwB,CAAC,IAAD,CADhD;AAER,cAAA,YAAY,EAAE,MAAMA,wBAAwB,CAAC,KAAD;AAFpC;AAAA;AAAA;AAAA;AAAA,oBAFA,EAKCD,qBAAqB,iBAAI;AAAM,cAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAL1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBJ,eA0BI;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BJ,EA2BKF,oBAAoB,CAACJ,WAArB,KAAqC,EAArC,gBACD;AAAA,oCACI;AAAO,cAAA,EAAE,EAAC,kBAAV;AAA6B,cAAA,IAAI,EAAC,UAAlC;AACA,cAAA,IAAI,EAAC,aADL;AAEA,cAAA,KAAK,EAAEL,QAAQ,CAACK,WAFhB;AAGA,cAAA,QAAQ,EAAES;AAHV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI;AAAG,cAAA,EAAE,EAAC,0BAAN;AAAA,wBAAkCL,oBAAoB,CAACJ;AAAvD;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,gBASD;AAAO,YAAA,IAAI,EAAC,UAAZ;AACA,YAAA,IAAI,EAAC,aADL;AAEA,YAAA,KAAK,EAAEL,QAAQ,CAACK,WAFhB;AAGA,YAAA,QAAQ,EAAES;AAHV;AAAA;AAAA;AAAA;AAAA,kBApCJ,eA2CI;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3CJ,EA4CKL,oBAAoB,CAACH,oBAArB,KAA8C,EAA9C,gBACD;AAAA,oCACI;AAAO,cAAA,EAAE,EAAC,kBAAV;AAA6B,cAAA,IAAI,EAAC,UAAlC;AACA,cAAA,IAAI,EAAC,sBADL;AAEA,cAAA,KAAK,EAAEN,QAAQ,CAACM,oBAFhB;AAGA,cAAA,QAAQ,EAAEQ;AAHV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI;AAAG,cAAA,EAAE,EAAC,0BAAN;AAAA,wBAAkCL,oBAAoB,CAACH;AAAvD;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,gBASD;AAAO,YAAA,IAAI,EAAC,UAAZ;AACA,YAAA,IAAI,EAAC,sBADL;AAEA,YAAA,KAAK,EAAEN,QAAQ,CAACM,oBAFhB;AAGA,YAAA,QAAQ,EAAEQ;AAHV;AAAA;AAAA;AAAA;AAAA,kBArDJ,EA4DKP,gBAAgB,KAAK,EAArB,iBAA2B;AAAG,YAAA,EAAE,EAAC,0BAAN;AAAA,sBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,kBA5DhC,eA6DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7DJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlEJ,eAuII;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,QAAQ,EAAE4B,gBAAhB;AAAkC,UAAA,UAAU,MAA5C;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEK1B,oBAAoB,CAACN,YAArB,KAAsC,EAAtC,gBACD;AAAA,oCACI;AAAO,cAAA,EAAE,EAAC,kBAAV;AAA6B,cAAA,IAAI,EAAC,OAAlC;AACA,cAAA,IAAI,EAAC,cADL;AAEA,cAAA,KAAK,EAAEH,QAAQ,CAACG,YAFhB;AAGA,cAAA,QAAQ,EAAEW;AAHV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI;AAAG,cAAA,EAAE,EAAC,0BAAN;AAAA,wBAAkCL,oBAAoB,CAACN;AAAvD;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,gBASD;AAAO,YAAA,IAAI,EAAC,OAAZ;AACA,YAAA,IAAI,EAAC,cADL;AAEA,YAAA,KAAK,EAAEH,QAAQ,CAACG,YAFhB;AAGA,YAAA,QAAQ,EAAEW;AAHV;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAkBI;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBJ,EAmBKL,oBAAoB,CAACL,WAArB,KAAqC,EAArC,gBACD;AAAA,oCACI;AAAO,cAAA,EAAE,EAAC,kBAAV;AAA6B,cAAA,IAAI,EAAC,UAAlC;AACA,cAAA,IAAI,EAAC,aADL;AAEA,cAAA,KAAK,EAAEJ,QAAQ,CAACI,WAFhB;AAGA,cAAA,QAAQ,EAAEU;AAHV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI;AAAG,cAAA,EAAE,EAAC,0BAAN;AAAA,wBAAkCL,oBAAoB,CAACL;AAAvD;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,gBASD;AAAO,YAAA,IAAI,EAAC,UAAZ;AACA,YAAA,IAAI,EAAC,aADL;AAEA,YAAA,KAAK,EAAEJ,QAAQ,CAACI,WAFhB;AAGA,YAAA,QAAQ,EAAEU;AAHV;AAAA;AAAA;AAAA;AAAA,kBA5BJ,EAmCKP,gBAAgB,KAAK,EAArB,iBAA2B;AAAG,YAAA,EAAE,EAAC,0BAAN;AAAA,sBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAnChC,eAoCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApCJ,eAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAvIJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADP;AA2LA,CAzWD;;GAAMV,Q;UASOH,Q;;;KATPG,Q;AA2WN,eAAeA,QAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport useAxios from \"../utils/useAxios\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport NavBar from \"../components/Dashboard/Navbar/Navbar\";\n\nconst Settings = () => {\n\n    const { userAuth, logout } = useContext(AuthContext);\n    const [formData, setFormData] = useState({username: userAuth.username, emailAddress: userAuth.emailAddress, oldPassword: \"\", newPassword: \"\", passwordVerification: \"\"});\n    const [credentialsError, setCredentialsError] = useState(\"\");\n    const [formValidationErrors, setFormValidationErrors] = useState({username: \"\", emailAddress: \"\", oldPassword: \"\", newPassword: \"\", passwordVerification: \"\"});\n\tconst [passwordHelperDisplay, setPasswordHelperDisplay] = useState(false);\n\n\n\tconst api = useAxios();\n\n    const handleFormChange = (event) => {\n        const {name, value} = event.target;\n        setFormData( prevState => ({\n            ...prevState,\n            [name]: value \n        }));\n        setFormValidationErrors( prevState => ({\n            ...prevState,\n            [name]: \"\" \n        }));\n        setCredentialsError(\"\");\n    }\n\n    const validateDetailsForm = (data) => {\n        const errors = {username:\"\", emailAddress: \"\", oldPassword: \"\"};\n    \n        const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    \n        if (!data.emailAddress) {\n            errors.emailAddress = \"Email address is required\";\n        } \n        else if (!(emailPattern.test(data.emailAddress))) {\n            errors.emailAddress = \"Please enter a valid email address\";\n        }\n\n        if (!data.username) {\n            errors.username = \"Username is required\";\n        } \n        else if (data.username.length < 3) {\n            errors.username = \"Username must be at least 3 characters long\";\n        }\n\n        if (!data.oldPassword) {\n            errors.oldPassword = \"Password is required\";\n        } else if (data.oldPassword.length < 8) {\n            errors.oldPassword = \"Password must be at least 8 characters long\";\n        }\n\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n    const handleEditUserDetails = async (event) => {\n        event.preventDefault();\n\n        const validationErrors = validateDetailsForm(formData);\n        \n        if (validationErrors.emailAddress === \"\" && validationErrors.username === \"\" && validationErrors.oldPassword === \"\") {\n            \n            try {\n                await api.put(\"/users\", formData);\n                logout();\n\n            } catch (error) {\n                if (!error.response) {\n                    //console.log(error);\n                    setCredentialsError(\"Unable to contact the server. Try again later.\");\n                } else {\n                    //console.log(`Error: ${error.response.data}`);\n                    setCredentialsError(error.response.data);\n                }\n            }\n        }\n        \n    }\n\n    const validatePasswordForm = (data) => {\n        const errors = {oldPassword: \"\", newPassword: \"\", passwordVerification: \"\"};\n    \n        if (!data.oldPassword) {\n            errors.oldPassword = \"Password is required\";\n        } else if (data.oldPassword.length < 8) {\n            errors.oldPassword = \"Password must be at least 8 characters long\";\n        }\n\n        if (!data.newPassword) {\n            errors.newPassword = \"Password is required\";\n        } else if (data.newPassword.length < 8) {\n            errors.newPassword = \"Password must be at least 8 characters long\";\n        }\n\n        if (!data.passwordVerification) {\n            errors.passwordVerification = \"Plese re-enter the password\";\n        } else if (data.newPassword !== data.passwordVerification) {\n            errors.passwordVerification = \"Passwords don't match\";\n        }\n\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n    const handleEditUserPassword =  async (event) => {\n        event.preventDefault();\n\n        const validationErrors = validatePasswordForm(formData);\n        \n        if (validationErrors.oldPassword === \"\" && validationErrors.newPassword === \"\" && validationErrors.passwordVerification === \"\" ) {\n            \n            try {\n                await api.put(\"/users\", formData);\n                logout();\n\n            } catch (error) {\n                if (!error.response) {\n                    //console.log(error);\n                    setCredentialsError(\"Unable to contact the server. Try again later.\");\n                } else {\n                    //console.log(`Error: ${error.response.data}`);\n                    setCredentialsError(error.response.data);\n                }\n            }\n        }\n        \n    }\n\n    const validateDeleteForm = (data) => {\n        const errors = {emailAddress: \"\", oldPassword: \"\"};\n    \n        const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    \n        if (!data.emailAddress) {\n            errors.emailAddress = \"Email address is required\";\n        } \n        else if (!(emailPattern.test(data.emailAddress))) {\n            errors.emailAddress = \"Please enter a valid email address\";\n        }\n\n        if (!data.oldPassword) {\n            errors.oldPassword = \"Password is required\";\n        } else if (data.oldPassword.length < 8) {\n            errors.oldPassword = \"Password must be at least 8 characters long\";\n        }\n\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n    const handleDeleteUser = async (event) => {\n        event.preventDefault();\n\n        const validationErrors = validateDeleteForm(formData);\n        \n        if (validationErrors.emailAddress === \"\" && validationErrors.oldPassword === \"\") {\n\n            try {\n                console.log(formData);\n\n                await api.delete(\"/users\", {data: formData});\n                logout();\n            } catch (error) {\n                if (!error.response) {\n                    //console.log(error);\n                    setCredentialsError(\"Unable to contact the server. Please try again later.\");\n                } else {\n                    //console.log(error);\n                    setCredentialsError(\"Incorrect email / password\");\n                }\n            }\n        }\n\n    }\n\n\n\treturn (\n        <div>\n            <NavBar />\n        \n            <main className=\"settings-container\">\n\n                <h2>Account Settings</h2>\n\n                <div className=\"user-box\">\n\n                    <h3>Edit username and email address</h3>\n                \n                    <form onSubmit={handleEditUserDetails} noValidate>\n                        \n                        <label className=\"input-label\">Username:</label>\n                        {formValidationErrors.username !== \"\" ?\n                        <div>\n                        <input id=\"validation-error\" type=\"text\" \n                            name=\"username\"\n                            value={formData.username}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"validation-error-message\">{formValidationErrors.username}</p>\n                        </div> :\n                        <input type=\"text\" \n                            name=\"username\"\n                            value={formData.username}\n                            onChange={handleFormChange}\n                            />\n                        }\n\n                        <label className=\"input-label\">Email address:</label>\n                        {formValidationErrors.emailAddress !== \"\" ?\n                        <div>\n                            <input id=\"validation-error\" type=\"email\"\n                            name=\"emailAddress\"\n                            value={formData.emailAddress}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"validation-error-message\">{formValidationErrors.emailAddress}</p>\n                        </div> :\n                        <input type=\"email\" \n                        name=\"emailAddress\"\n                        value={formData.emailAddress}\n                        onChange={handleFormChange}\n                        />\n                        }\n                        \n                        <label className=\"input-label\">Current password:</label>\n                        {formValidationErrors.oldPassword !== \"\" ?\n                        <div> \n                            <input id=\"validation-error\" type=\"password\" \n                            name=\"oldPassword\"\n                            value={formData.oldPassword}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"validation-error-message\">{formValidationErrors.oldPassword}</p>\n                        </div> :\n                        <input type=\"password\" \n                        name=\"oldPassword\"\n                        value={formData.oldPassword}\n                        onChange={handleFormChange}\n                        />\n                        }\n\n                        {credentialsError !== \"\" && <p id=\"validation-error-message\">{credentialsError}</p>}\n                        <button>Save changes</button>\n                    </form>\n                </div>\n\n                <div className=\"user-box\">\n\n                    <h3>Change password</h3>\n                \n                    <form onSubmit={handleEditUserPassword} noValidate>\n\n                        <label className=\"input-label\">Current password:</label>\n                        {formValidationErrors.oldPassword !== \"\" ?\n                        <div> \n                            <input id=\"validation-error\" type=\"password\" \n                            name=\"oldPassword\"\n                            value={formData.oldPassword}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"validation-error-message\">{formValidationErrors.oldPassword}</p>\n                        </div> :\n                        <input type=\"password\" \n                        name=\"oldPassword\"\n                        value={formData.oldPassword}\n                        onChange={handleFormChange}\n                        />\n                        }\n                        \n                        <div className=\"password\">\n                        <label>Password:</label>\n                        <img src={\"./info.png\"} alt=\"information icon\"\n                            onMouseEnter={() => setPasswordHelperDisplay(true)}\n        \t\t\t\t    onMouseLeave={() => setPasswordHelperDisplay(false)} />\n                        {passwordHelperDisplay && <span className=\"password-helper\">Password must have at least 8 characters</span>}\n                        </div>\n                        <label className=\"input-label\">New password:</label>\n                        {formValidationErrors.newPassword !== \"\" ?\n                        <div> \n                            <input id=\"validation-error\" type=\"password\" \n                            name=\"newPassword\"\n                            value={formData.newPassword}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"validation-error-message\">{formValidationErrors.newPassword}</p>\n                        </div> :\n                        <input type=\"password\" \n                        name=\"newPassword\"\n                        value={formData.newPassword}\n                        onChange={handleFormChange}\n                        />\n                        }\n\n                        <label className=\"input-label\">Re-enter password:</label>\n                        {formValidationErrors.passwordVerification !== \"\" ?\n                        <div> \n                            <input id=\"validation-error\" type=\"password\" \n                            name=\"passwordVerification\"\n                            value={formData.passwordVerification}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"validation-error-message\">{formValidationErrors.passwordVerification}</p>\n                        </div> :\n                        <input type=\"password\" \n                        name=\"passwordVerification\"\n                        value={formData.passwordVerification}\n                        onChange={handleFormChange}\n                        />\n                        }\n\n                        {credentialsError !== \"\" && <p id=\"validation-error-message\">{credentialsError}</p>}\n                        <button>Save changes</button>\n                    </form>\n                </div>\n\n                <div className=\"user-box\">\n                    <h3>Permanently Delete Account</h3>\n                    <form onSubmit={handleDeleteUser} noValidate>\n                        <label className=\"input-label\">Email address:</label>\n                        {formValidationErrors.emailAddress !== \"\" ?\n                        <div>\n                            <input id=\"validation-error\" type=\"email\"\n                            name=\"emailAddress\"\n                            value={formData.emailAddress}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"validation-error-message\">{formValidationErrors.emailAddress}</p>\n                        </div> :\n                        <input type=\"email\" \n                        name=\"emailAddress\"\n                        value={formData.emailAddress}\n                        onChange={handleFormChange}\n                        />\n                        }\n                        \n                        <label className=\"input-label\">Current password:</label>\n                        {formValidationErrors.oldPassword !== \"\" ?\n                        <div> \n                            <input id=\"validation-error\" type=\"password\" \n                            name=\"oldPassword\"\n                            value={formData.oldPassword}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"validation-error-message\">{formValidationErrors.oldPassword}</p>\n                        </div> :\n                        <input type=\"password\" \n                        name=\"oldPassword\"\n                        value={formData.oldPassword}\n                        onChange={handleFormChange}\n                        />\n                        }\n\n                        {credentialsError !== \"\" && <p id=\"validation-error-message\">{credentialsError}</p>}\n                        <button>Delete</button>\n                        <span>WARNING - All content will be lost.</span>\n                    </form>\n\n                </div>\n\n            </main>\n        </div>\n\t)\n\n}\n\nexport default Settings;"]},"metadata":{},"sourceType":"module"}