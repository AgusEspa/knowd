{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, createContext } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [userAuth, setUserAuth] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchedAccessToken = window.localStorage.getItem(\"access_token\");\n    const fetchedRefreshToken = window.localStorage.getItem(\"refresh_token\");\n    const fetchedUsername = window.localStorage.getItem(\"username\");\n    setUserAuth({\n      username: fetchedUsername,\n      accessToken: fetchedAccessToken,\n      refreshToken: fetchedRefreshToken\n    });\n    updateToken();\n  }, []);\n\n  const logout = () => {\n    window.localStorage.removeItem(\"access_token\");\n    window.localStorage.removeItem(\"refresh_token\");\n    window.localStorage.removeItem(\"username\");\n    navigate('/');\n  };\n\n  const updateToken = async () => {\n    try {\n      // call refresh\n      if (response.status === 200) {// change accessToken\n      } else {\n        logout();\n      }\n    } catch (e) {\n      console.log(`Error: ${e}`);\n    }\n  };\n\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n\n    let fourMinutes = 1000 * 60 * 4;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      userAuth,\n      setUserAuth,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AuthProvider, \"Nh4xXECuBojNETbkWEPIYAgBtZE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/contexts/AuthContext.js"],"names":["useState","useEffect","createContext","useNavigate","AuthContext","AuthProvider","children","userAuth","setUserAuth","navigate","fetchedAccessToken","window","localStorage","getItem","fetchedRefreshToken","fetchedUsername","username","accessToken","refreshToken","updateToken","logout","removeItem","response","status","e","console","log","contextData","user","authTokens","loginUser","logoutUser","loading","fourMinutes","interval","setInterval","clearInterval"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC,IAAD,CAAjC;AAEP,OAAO,MAAMG,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAE7C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMS,QAAQ,GAAGN,WAAW,EAA5B;AAEGF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,kBAAkB,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B,CAA3B;AACA,UAAMC,mBAAmB,GAAGH,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,eAA5B,CAA5B;AACA,UAAME,eAAe,GAAGJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAxB;AAEAL,IAAAA,WAAW,CAAE;AACTQ,MAAAA,QAAQ,EAAED,eADD;AAETE,MAAAA,WAAW,EAAEP,kBAFJ;AAGTQ,MAAAA,YAAY,EAAEJ;AAHL,KAAF,CAAX;AAMNK,IAAAA,WAAW;AACR,GAZQ,EAYN,EAZM,CAAT;;AAcH,QAAMC,MAAM,GAAG,MAAM;AACpBT,IAAAA,MAAM,CAACC,YAAP,CAAoBS,UAApB,CAA+B,cAA/B;AACAV,IAAAA,MAAM,CAACC,YAAP,CAAoBS,UAApB,CAA+B,eAA/B;AACMV,IAAAA,MAAM,CAACC,YAAP,CAAoBS,UAApB,CAA+B,UAA/B;AACNZ,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACA,GALD;;AAOA,QAAMU,WAAW,GAAG,YAAY;AAE/B,QAAI;AACH;AAEA,UAAIG,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,CAC5B;AACM,OAFP,MAEa;AACHH,QAAAA,MAAM;AACf;AACK,KARP,CAQQ,OAAOI,CAAP,EAAU;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,CAAE,EAAxB;AACA;AACE,GAbJ;;AAeG,MAAIG,WAAW,GAAG;AACdC,IAAAA,IAAI,EAACA,IADS;AAEdC,IAAAA,UAAU,EAACA,UAFG;AAGdC,IAAAA,SAAS,EAACA,SAHI;AAIdC,IAAAA,UAAU,EAACA;AAJG,GAAlB;AAQA9B,EAAAA,SAAS,CAAC,MAAK;AAEX,QAAG+B,OAAH,EAAW;AACPb,MAAAA,WAAW;AACd;;AAED,QAAIc,WAAW,GAAG,OAAO,EAAP,GAAY,CAA9B;AAEA,QAAIC,QAAQ,GAAIC,WAAW,CAAC,MAAK;AAC7B,UAAGN,UAAH,EAAc;AACVV,QAAAA,WAAW;AACd;AACJ,KAJ0B,EAIxBc,WAJwB,CAA3B;AAKA,WAAO,MAAKG,aAAa,CAACF,QAAD,CAAzB;AAEH,GAfQ,EAeN,CAACL,UAAD,EAAaG,OAAb,CAfM,CAAT;AAiBH,sBACC,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEzB,MAAAA,QAAF;AAAYC,MAAAA,WAAZ;AAAyBY,MAAAA;AAAzB,KAA7B;AAAA,cACEd;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAvEM;;GAAMD,Y;UAGKF,W;;;KAHLE,Y","sourcesContent":["import { useState, useEffect, createContext } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nexport const AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n\n\tconst [userAuth, setUserAuth] = useState([]);\n\tconst navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchedAccessToken = window.localStorage.getItem(\"access_token\");\n        const fetchedRefreshToken = window.localStorage.getItem(\"refresh_token\");\n        const fetchedUsername = window.localStorage.getItem(\"username\");\n\n        setUserAuth( {\n            username: fetchedUsername,\n            accessToken: fetchedAccessToken,\n            refreshToken: fetchedRefreshToken\n        })\n\n\t\tupdateToken();\n    }, []);\n\n\tconst logout = () => {\n\t\twindow.localStorage.removeItem(\"access_token\");\n\t\twindow.localStorage.removeItem(\"refresh_token\");\n        window.localStorage.removeItem(\"username\");\n\t\tnavigate('/');\n\t}\n\n\tconst updateToken = async () => {\n\n\t\ttry {\n\t\t\t// call refresh\n        \n\t\t\tif (response.status === 200) {\n\t\t\t\t// change accessToken\n        \t} else {\n            \tlogout();\n\t\t\t}\n        } catch (e) {\n\t\t\tconsole.log(`Error: ${e}`);\n\t\t}\n    }\n\n    let contextData = {\n        user:user,\n        authTokens:authTokens,\n        loginUser:loginUser,\n        logoutUser:logoutUser,\n    }\n\n\n    useEffect(()=> {\n\n        if(loading){\n            updateToken()\n        }\n\n        let fourMinutes = 1000 * 60 * 4\n\n        let interval =  setInterval(()=> {\n            if(authTokens){\n                updateToken()\n            }\n        }, fourMinutes)\n        return ()=> clearInterval(interval)\n\n    }, [authTokens, loading])\n\n\treturn(\n\t\t<AuthContext.Provider value={{ userAuth, setUserAuth, logout }} >\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t);\n}\n "]},"metadata":{},"sourceType":"module"}