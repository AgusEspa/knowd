{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/components/Dashboard/Objectives.js\",\n    _s = $RefreshSig$();\n\nimport useAxios from \"../../utils/useAxios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Goals = props => {\n  _s();\n\n  const [name, setName] = useState();\n  const [importance, setImportance] = useState();\n  const api = useAxios();\n  const objectives = props.objectives.map(objective => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: objective.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Importance: \", objective.importance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this)]\n  }, objective.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this));\n\n  const handleCreateObjective = async () => {\n    try {\n      const response = await api.post(\"/objectives\");\n      props.setObjectives(response.data);\n    } catch (error) {\n      console.log(`Request failed: ${error.response.data.error_message}`);\n    }\n  };\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleImportanceChange = event => {\n    setImportance(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: objectives\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateObjective,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name\",\n            value: name,\n            onChange: handleNameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Importance (1 to 5)\",\n            value: name,\n            onChange: handleImportanceChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create Objective\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Goals, \"mwssShhqJ7rY1GBrLtSVV2UgY8M=\", false, function () {\n  return [useAxios];\n});\n\n_c = Goals;\nexport default Goals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/components/Dashboard/Objectives.js"],"names":["useAxios","useState","Goals","props","name","setName","importance","setImportance","api","objectives","map","objective","id","handleCreateObjective","response","post","setObjectives","data","error","console","log","error_message","handleNameChange","event","target","value","handleImportanceChange"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBJ,QAAQ,EAAlC;AACA,QAAM,CAAEK,UAAF,EAAcC,aAAd,IAAgCN,QAAQ,EAA9C;AAEA,QAAMO,GAAG,GAAGR,QAAQ,EAApB;AAEA,QAAMS,UAAU,GAAGN,KAAK,CAACM,UAAN,CAAiBC,GAAjB,CAAsBC,SAAS,iBACjD;AAAA,4BACC;AAAA,gBAAKA,SAAS,CAACP;AAAf;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,iCAAgBO,SAAS,CAACL,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,KAAUK,SAAS,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,UADkB,CAAnB;;AAOA,QAAMC,qBAAqB,GAAG,YAAY;AACzC,QAAI;AACM,YAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAJ,CAAS,aAAT,CAAvB;AACTZ,MAAAA,KAAK,CAACa,aAAN,CAAoBF,QAAQ,CAACG,IAA7B;AAEM,KAJP,CAIQ,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBF,KAAK,CAACJ,QAAN,CAAeG,IAAf,CAAoBI,aAAc,EAAjE;AACT;AACD,GARD;;AAUA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AACnClB,IAAAA,OAAO,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACA,GAFD;;AAIA,QAAMC,sBAAsB,GAAIH,KAAD,IAAW;AACzChB,IAAAA,aAAa,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACA,GAFD;;AAIA,sBACC;AAAA,4BACC;AAAA,gBAAMhB;AAAN;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,8BACC;AAAM,QAAA,QAAQ,EAAEI,qBAAhB;AAAA,gCACC;AAAA,iCACC;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,MAA/B;AACA,YAAA,KAAK,EAAET,IADP;AAEA,YAAA,QAAQ,EAAEkB;AAFV;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAOC;AAAA,iCACC;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,WAAW,EAAC,qBAAjC;AACA,YAAA,KAAK,EAAElB,IADP;AAEA,YAAA,QAAQ,EAAEsB;AAFV;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAPD,eAaC;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAuBA,CAvDD;;GAAMxB,K;UAKOF,Q;;;KALPE,K;AAyDN,eAAeA,KAAf","sourcesContent":["import useAxios from \"../../utils/useAxios\";\nimport { useState } from \"react\";\n\nconst Goals = (props) => {\n\n\tconst [ name, setName ] = useState();\n\tconst [ importance, setImportance ] = useState();\n\n\tconst api = useAxios();\n\n\tconst objectives = props.objectives.map( objective => \n\t\t<div key={objective.id}>\n\t\t\t<h3>{objective.name}</h3>\n\t\t\t<p>Importance: {objective.importance}</p>\n\t\t</div>\n\t);\n\n\tconst handleCreateObjective = async () => {\n\t\ttry {\n            const response = await api.post(\"/objectives\");\n\t\t\tprops.setObjectives(response.data);\n            \n        } catch (error) {\n            console.log(`Request failed: ${error.response.data.error_message}`);\n\t\t}\n\t}\n\n\tconst handleNameChange = (event) => {\n\t\tsetName(event.target.value);\n\t}\n\n\tconst handleImportanceChange = (event) => {\n\t\tsetImportance(event.target.value);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div>{objectives}</div>\n\t\t\t<div>\n\t\t\t\t<form onSubmit={handleCreateObjective}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"Name\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={handleNameChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input type=\"number\" placeholder=\"Importance (1 to 5)\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={handleImportanceChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"submit\">Create</button>\n\t\t\t\t</form>\n\t\t\t<button >Create Objective</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Goals;"]},"metadata":{},"sourceType":"module"}