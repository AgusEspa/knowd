{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Settings.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport useAxios from \"../utils/useAxios\";\nimport NavBar from \"../components/Dashboard/Navbar/Navbar\";\nimport Notification from \"../components/Dashboard/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const {\n    userAuth,\n    setUserAuth,\n    logout\n  } = useContext(AuthContext);\n  const [formData, setFormData] = useState({\n    username: userAuth.username,\n    emailAddress: userAuth.emailAddress,\n    oldPassword: \"\",\n    newPassword: \"\",\n    passwordVerification: \"\"\n  });\n  const [credentialsError, setCredentialsError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [formValidationErrors, setFormValidationErrors] = useState({\n    username: \"\",\n    emailAddress: \"\",\n    oldPassword: \"\",\n    newPassword: \"\",\n    passwordVerification: \"\"\n  });\n  const [toggleUsername, setToggleUsername] = useState(false);\n  const [togglePassword, setTogglePassword] = useState(false);\n  const [toggleDelete, setToggleDelete] = useState(false);\n  const [networkError, setNetworkError] = useState(\"\");\n  const api = useAxios();\n  useEffect(() => {\n    getCredentials();\n  }, []);\n\n  const getCredentials = async () => {\n    try {\n      const response = await api.get(\"/users/authenticated\");\n      setUserAuth(prevState => ({ ...prevState,\n        username: response.data.username,\n        emailAddress: response.data.emailAddress\n      }));\n    } catch (error) {\n      if (!error.response || error.response.status >= 500) {\n        setNetworkError(\"Unable to contact the server. Please try again later.\");\n        await new Promise(resolve => setTimeout(resolve, 5000));\n        setNetworkError(\"\");\n      } else {\n        logout();\n      }\n    }\n  };\n\n  const handleFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const validateDetailsForm = data => {\n    const errors = {\n      username: \"\",\n      emailAddress: \"\",\n      oldPassword: \"\"\n    };\n    setFormValidationErrors(errors);\n    const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!data.emailAddress) {\n      errors.emailAddress = \"Email address is required\";\n    } else if (!emailPattern.test(data.emailAddress)) {\n      errors.emailAddress = \"Please enter a valid email address\";\n    }\n\n    if (!data.username) {\n      errors.username = \"Username is required\";\n    } else if (data.username.length < 3) {\n      errors.username = \"Username must be at least 3 characters long\";\n    }\n\n    if (!data.oldPassword) {\n      errors.oldPassword = \"Password is required\";\n    } else if (data.oldPassword.length < 8) {\n      errors.oldPassword = \"Password must be at least 8 characters long\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleEditUserDetails = async event => {\n    event.preventDefault();\n    setCredentialsError(\"\");\n    const validationErrors = validateDetailsForm(formData);\n\n    if (validationErrors.emailAddress === \"\" && validationErrors.username === \"\" && validationErrors.oldPassword === \"\") {\n      setIsLoading(true);\n\n      try {\n        await api.put(\"/users\", formData);\n        setIsLoading(false);\n        logout();\n      } catch (error) {\n        setIsLoading(false);\n\n        if (!error.response || error.response.status >= 500) {\n          setNetworkError(\"Unable to contact the server. Please try again later.\");\n          await new Promise(resolve => setTimeout(resolve, 5000));\n          setNetworkError(\"\");\n        } else if (error.response.status) {\n          if (error.response.data.includes(\"mail\")) setFormValidationErrors(prevState => ({ ...prevState,\n            emailAddress: error.response.data\n          }));\n          if (error.response.data.includes(\"password\")) setFormValidationErrors(prevState => ({ ...prevState,\n            oldPassword: error.response.data\n          }));\n        } else setCredentialsError(error.response.data);\n      }\n    }\n  };\n\n  const validatePasswordForm = data => {\n    const errors = {\n      oldPassword: \"\",\n      newPassword: \"\",\n      passwordVerification: \"\"\n    };\n    setFormValidationErrors(errors);\n\n    if (!data.oldPassword) {\n      errors.oldPassword = \"Password is required\";\n    } else if (data.oldPassword.length < 8) {\n      errors.oldPassword = \"Password must be at least 8 characters long\";\n    }\n\n    if (!data.newPassword) {\n      errors.newPassword = \"Password is required\";\n    } else if (data.newPassword.length < 8) {\n      errors.newPassword = \"Password must be at least 8 characters long\";\n    }\n\n    if (!data.passwordVerification) {\n      errors.passwordVerification = \"Plese re-enter the password\";\n    } else if (data.newPassword !== data.passwordVerification) {\n      errors.passwordVerification = \"Passwords don't match\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleEditUserPassword = async event => {\n    event.preventDefault();\n    setCredentialsError(\"\");\n    const validationErrors = validatePasswordForm(formData);\n\n    if (validationErrors.oldPassword === \"\" && validationErrors.newPassword === \"\" && validationErrors.passwordVerification === \"\") {\n      setIsLoading(true);\n\n      try {\n        await api.put(\"/users\", formData);\n        setIsLoading(false);\n        logout();\n      } catch (error) {\n        setIsLoading(false);\n\n        if (!error.response || error.response.status >= 500) {\n          setNetworkError(\"Unable to contact the server. Please try again later.\");\n          await new Promise(resolve => setTimeout(resolve, 5000));\n          setNetworkError(\"\");\n        } else if (error.response.status) {\n          if (error.response.data.includes(\"mail\")) setFormValidationErrors(prevState => ({ ...prevState,\n            emailAddress: error.response.data\n          }));\n          if (error.response.data.includes(\"password\")) setFormValidationErrors(prevState => ({ ...prevState,\n            oldPassword: error.response.data\n          }));\n        } else setCredentialsError(error.response.data);\n      }\n    }\n  };\n\n  const validateDeleteForm = data => {\n    const errors = {\n      emailAddress: \"\",\n      oldPassword: \"\"\n    };\n    setFormValidationErrors(errors);\n\n    if (!data.emailAddress) {\n      errors.emailAddress = \"Email address is required\";\n    } else if (data.emailAddress !== userAuth.emailAddress) {\n      errors.emailAddress = \"Please enter this account's email address\";\n    }\n\n    if (!data.oldPassword) {\n      errors.oldPassword = \"Password is required\";\n    } else if (data.oldPassword.length < 8) {\n      errors.oldPassword = \"Password must be at least 8 characters long\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleDeleteUser = async event => {\n    event.preventDefault();\n    setCredentialsError(\"\");\n    const validationErrors = validateDeleteForm(formData);\n\n    if (validationErrors.emailAddress === \"\" && validationErrors.oldPassword === \"\") {\n      setIsLoading(true);\n\n      try {\n        await api.delete(\"/users\", {\n          data: formData\n        });\n        setIsLoading(false);\n        logout();\n      } catch (error) {\n        setIsLoading(false);\n\n        if (!error.response || error.response.status >= 500) {\n          setNetworkError(\"Unable to contact the server. Please try again later.\");\n          await new Promise(resolve => setTimeout(resolve, 5000));\n          setNetworkError(\"\");\n        } else if (error.response.status) {\n          if (error.response.data.includes(\"mail\")) setFormValidationErrors(prevState => ({ ...prevState,\n            emailAddress: error.response.data\n          }));\n          if (error.response.data.includes(\"password\")) setFormValidationErrors(prevState => ({ ...prevState,\n            oldPassword: error.response.data\n          }));\n        } else setCredentialsError(error.response.data);\n      }\n    }\n  };\n\n  const handleUsernameToggle = event => {\n    event.preventDefault();\n    setToggleUsername(prevState => !prevState);\n    setFormData(prevState => ({ ...prevState,\n      username: userAuth.username,\n      emailAddress: userAuth.emailAddress\n    }));\n    setTogglePassword(false);\n    setToggleDelete(false);\n  };\n\n  const handlePasswordToggle = event => {\n    event.preventDefault();\n    setTogglePassword(prevState => !prevState);\n    setToggleUsername(false);\n    setToggleDelete(false);\n  };\n\n  const handleDeleteToggle = event => {\n    event.preventDefault();\n    setToggleDelete(prevState => !prevState);\n    setFormData(prevState => ({ ...prevState,\n      emailAddress: \"\"\n    }));\n    setToggleUsername(false);\n    setTogglePassword(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"settings-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-box-item\",\n            onClick: handleUsernameToggle,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"User details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./arrow-right.png\",\n              alt: \"arrow icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-box-item\",\n            onClick: handlePasswordToggle,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./arrow-right.png\",\n              alt: \"arrow icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-box-item\",\n            onClick: handleDeleteToggle,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              id: \"delete-label\",\n              children: \"Delete Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./arrow-right.png\",\n              alt: \"arrow icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), toggleUsername && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit username and email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleEditUserDetails,\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              children: \"New username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), formValidationErrors.username !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                autoComplete: \"new-password\",\n                id: \"validation-error\",\n                type: \"text\",\n                name: \"username\",\n                value: formData.username,\n                onChange: handleFormChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"user-validation-error-message\",\n                children: formValidationErrors.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              autoComplete: \"new-password\",\n              type: \"text\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              children: \"New email address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this), formValidationErrors.emailAddress !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                autoComplete: \"new-password\",\n                id: \"validation-error\",\n                type: \"email\",\n                name: \"emailAddress\",\n                value: formData.emailAddress,\n                onChange: handleFormChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"user-validation-error-message\",\n                children: formValidationErrors.emailAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              autoComplete: \"new-password\",\n              type: \"email\",\n              name: \"emailAddress\",\n              value: formData.emailAddress,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              children: \"Current password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 29\n            }, this), formValidationErrors.oldPassword !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                autoComplete: \"new-password\",\n                id: \"validation-error\",\n                type: \"password\",\n                name: \"oldPassword\",\n                value: formData.oldPassword,\n                onChange: handleFormChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"user-validation-error-message\",\n                children: formValidationErrors.oldPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              autoComplete: \"new-password\",\n              type: \"password\",\n              name: \"oldPassword\",\n              value: formData.oldPassword,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 29\n            }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-validation-error-message\",\n              children: credentialsError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 57\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-spinner-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Save changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 33\n              }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-spinner-settings-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this), togglePassword && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Change password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleEditUserPassword,\n            autoComplete: \"off\",\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              children: \"Current password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 29\n            }, this), formValidationErrors.oldPassword !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"validation-error\",\n                type: \"password\",\n                name: \"oldPassword\",\n                value: formData.oldPassword,\n                onChange: handleFormChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"user-validation-error-message\",\n                children: formValidationErrors.oldPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"oldPassword\",\n              value: formData.oldPassword,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              children: \"New password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 29\n            }, this), formValidationErrors.newPassword !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"validation-error\",\n                type: \"password\",\n                name: \"newPassword\",\n                value: formData.newPassword,\n                onChange: handleFormChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"user-validation-error-message\",\n                children: formValidationErrors.newPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"newPassword\",\n              value: formData.newPassword,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              children: \"Re-enter password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 29\n            }, this), formValidationErrors.passwordVerification !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"validation-error\",\n                type: \"password\",\n                name: \"passwordVerification\",\n                value: formData.passwordVerification,\n                onChange: handleFormChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"user-validation-error-message\",\n                children: formValidationErrors.passwordVerification\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"passwordVerification\",\n              value: formData.passwordVerification,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 29\n            }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-validation-error-message\",\n              children: credentialsError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 57\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 29\n            }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 21\n        }, this), toggleDelete && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"delete-title\",\n            children: \"Permanently Delete Your Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleDeleteUser,\n            autoComplete: \"off\",\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              children: \"Type yor email address to confirm:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 29\n            }, this), formValidationErrors.emailAddress !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"validation-error\",\n                type: \"email\",\n                name: \"emailAddress\",\n                value: formData.emailAddress,\n                onChange: handleFormChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"user-validation-error-message\",\n                children: formValidationErrors.emailAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"emailAddress\",\n              value: formData.emailAddress,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"input-label\",\n              children: \"Current password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 29\n            }, this), formValidationErrors.oldPassword !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"validation-error\",\n                autoComplete: \"new-password\",\n                type: \"password\",\n                name: \"oldPassword\",\n                value: formData.oldPassword,\n                onChange: handleFormChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"user-validation-error-message\",\n                children: formValidationErrors.oldPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"oldPassword\",\n              value: formData.oldPassword,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 29\n            }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-validation-error-message\",\n              children: credentialsError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 57\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"delete\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 29\n            }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }, this), networkError !== \"\" && /*#__PURE__*/_jsxDEV(Notification, {\n      message: networkError,\n      type: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Settings, \"Ww+MDOkzZj336jKrSqBPTYKYwjg=\", false, function () {\n  return [useAxios];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Settings.js"],"names":["useState","useEffect","useContext","AuthContext","useAxios","NavBar","Notification","Settings","userAuth","setUserAuth","logout","formData","setFormData","username","emailAddress","oldPassword","newPassword","passwordVerification","credentialsError","setCredentialsError","isLoading","setIsLoading","formValidationErrors","setFormValidationErrors","toggleUsername","setToggleUsername","togglePassword","setTogglePassword","toggleDelete","setToggleDelete","networkError","setNetworkError","api","getCredentials","response","get","prevState","data","error","status","Promise","resolve","setTimeout","handleFormChange","event","name","value","target","validateDetailsForm","errors","emailPattern","test","length","handleEditUserDetails","preventDefault","validationErrors","put","includes","validatePasswordForm","handleEditUserPassword","validateDeleteForm","handleDeleteUser","delete","handleUsernameToggle","handlePasswordToggle","handleDeleteToggle"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport useAxios from \"../utils/useAxios\";\nimport NavBar from \"../components/Dashboard/Navbar/Navbar\";\nimport Notification from \"../components/Dashboard/Notification\";\n\nconst Settings = () => {\n\n    const { userAuth, setUserAuth, logout } = useContext(AuthContext);\n    const [formData, setFormData] = useState({username: userAuth.username, emailAddress: userAuth.emailAddress, oldPassword: \"\", newPassword: \"\", passwordVerification: \"\"});\n    const [credentialsError, setCredentialsError] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(true);\n    const [formValidationErrors, setFormValidationErrors] = useState({username: \"\", emailAddress: \"\", oldPassword: \"\", newPassword: \"\", passwordVerification: \"\"});\n    const [toggleUsername, setToggleUsername] = useState(false);\n    const [togglePassword, setTogglePassword] = useState(false);\n    const [toggleDelete, setToggleDelete] = useState(false);\n    const [networkError, setNetworkError] = useState(\"\");\n\n\n\tconst api = useAxios();\n\n    useEffect( () => {\n\t\tgetCredentials();\n    }, []);\n\n\tconst getCredentials = async () => {\n\n        try {\n            const response = await api.get(\"/users/authenticated\");\n\t\t\t\n            setUserAuth( prevState => ({\n                ...prevState,\n                username: response.data.username,\n                emailAddress: response.data.emailAddress}\n            ));\n            \n        } catch (error) {\n            if (!error.response || error.response.status >= 500) {\n                setNetworkError(\"Unable to contact the server. Please try again later.\");\n                await new Promise(resolve => setTimeout(resolve, 5000));\n                setNetworkError(\"\");\n            } else {\n                logout();\n            }\n        }\n    };\n\n    const handleFormChange = (event) => {\n        const {name, value} = event.target;\n        setFormData( prevState => ({\n            ...prevState,\n            [name]: value \n        }));\n    }\n\n    const validateDetailsForm = (data) => {\n        const errors = {username:\"\", emailAddress: \"\", oldPassword: \"\"};\n        setFormValidationErrors(errors);\n    \n        const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    \n        if (!data.emailAddress) {\n            errors.emailAddress = \"Email address is required\";\n        } \n        else if (!(emailPattern.test(data.emailAddress))) {\n            errors.emailAddress = \"Please enter a valid email address\";\n        }\n\n        if (!data.username) {\n            errors.username = \"Username is required\";\n        } \n        else if (data.username.length < 3) {\n            errors.username = \"Username must be at least 3 characters long\";\n        }\n\n        if (!data.oldPassword) {\n            errors.oldPassword = \"Password is required\";\n        } else if (data.oldPassword.length < 8) {\n            errors.oldPassword = \"Password must be at least 8 characters long\";\n        }\n\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n    const handleEditUserDetails = async (event) => {\n        event.preventDefault();\n\n        setCredentialsError(\"\");\n\n        const validationErrors = validateDetailsForm(formData);\n        \n        if (validationErrors.emailAddress === \"\" && validationErrors.username === \"\" && validationErrors.oldPassword === \"\") {\n\n            setIsLoading(true);\n            \n            try {\n                await api.put(\"/users\", formData);\n                setIsLoading(false);\n\n                logout();\n\n            } catch (error) {\n                setIsLoading(false);\n\n                if (!error.response || error.response.status >= 500) {\n                    setNetworkError(\"Unable to contact the server. Please try again later.\");\n                    await new Promise(resolve => setTimeout(resolve, 5000));\n                    setNetworkError(\"\");\n                } else if (error.response.status) {\n                    if (error.response.data.includes(\"mail\"))\n                    setFormValidationErrors( prevState => ({\n                        ...prevState,\n                        emailAddress: error.response.data \n                    }));\n                    if (error.response.data.includes(\"password\"))\n                    setFormValidationErrors( prevState => ({\n                        ...prevState,\n                        oldPassword: error.response.data\n                    }));\n                } else setCredentialsError(error.response.data);     \n            }\n        }\n    }\n\n    const validatePasswordForm = (data) => {\n        const errors = {oldPassword: \"\", newPassword: \"\", passwordVerification: \"\"};\n\n        setFormValidationErrors(errors);\n    \n        if (!data.oldPassword) {\n            errors.oldPassword = \"Password is required\";\n        } else if (data.oldPassword.length < 8) {\n            errors.oldPassword = \"Password must be at least 8 characters long\";\n        }\n\n        if (!data.newPassword) {\n            errors.newPassword = \"Password is required\";\n        } else if (data.newPassword.length < 8) {\n            errors.newPassword = \"Password must be at least 8 characters long\";\n        }\n\n        if (!data.passwordVerification) {\n            errors.passwordVerification = \"Plese re-enter the password\";\n        } else if (data.newPassword !== data.passwordVerification) {\n            errors.passwordVerification = \"Passwords don't match\";\n        }\n\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n    const handleEditUserPassword =  async (event) => {\n        event.preventDefault();\n\n        setCredentialsError(\"\");\n\n        const validationErrors = validatePasswordForm(formData);\n        \n        if (validationErrors.oldPassword === \"\" && validationErrors.newPassword === \"\" && validationErrors.passwordVerification === \"\" ) {\n\n            setIsLoading(true);\n            \n            try {\n                await api.put(\"/users\", formData);\n                setIsLoading(false);\n                logout();\n\n            } catch (error) {\n                setIsLoading(false);\n\n                if (!error.response || error.response.status >= 500) {\n                    setNetworkError(\"Unable to contact the server. Please try again later.\");\n                    await new Promise(resolve => setTimeout(resolve, 5000));\n                    setNetworkError(\"\");\n                } else if (error.response.status) {\n                    if (error.response.data.includes(\"mail\"))\n                    setFormValidationErrors( prevState => ({\n                        ...prevState,\n                        emailAddress: error.response.data \n                    }));\n                    if (error.response.data.includes(\"password\"))\n                    setFormValidationErrors( prevState => ({\n                        ...prevState,\n                        oldPassword: error.response.data\n                    }));\n                } else setCredentialsError(error.response.data);     \n            }\n        }\n        \n    }\n\n    const validateDeleteForm = (data) => {\n        const errors = {emailAddress: \"\", oldPassword: \"\"};\n\n        setFormValidationErrors(errors);\n        \n        if (!data.emailAddress) {\n            errors.emailAddress = \"Email address is required\";\n        } \n        else if (data.emailAddress !== userAuth.emailAddress) {\n            errors.emailAddress = \"Please enter this account's email address\";\n        }\n\n        if (!data.oldPassword) {\n            errors.oldPassword = \"Password is required\";\n        } else if (data.oldPassword.length < 8) {\n            errors.oldPassword = \"Password must be at least 8 characters long\";\n        }\n\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n    const handleDeleteUser = async (event) => {\n        event.preventDefault();\n\n        setCredentialsError(\"\");\n\n        const validationErrors = validateDeleteForm(formData);\n        \n        if (validationErrors.emailAddress === \"\" && validationErrors.oldPassword === \"\") {\n\n            setIsLoading(true);\n\n            try {\n                await api.delete(\"/users\", {data: formData});\n                setIsLoading(false);\n                logout();\n            } catch (error) {\n                setIsLoading(false);\n                if (!error.response || error.response.status >= 500) {\n                    setNetworkError(\"Unable to contact the server. Please try again later.\");\n                    await new Promise(resolve => setTimeout(resolve, 5000));\n                    setNetworkError(\"\");\n                } else if (error.response.status) {\n                    if (error.response.data.includes(\"mail\"))\n                    setFormValidationErrors( prevState => ({\n                        ...prevState,\n                        emailAddress: error.response.data \n                    }));\n                    if (error.response.data.includes(\"password\"))\n                    setFormValidationErrors( prevState => ({\n                        ...prevState,\n                        oldPassword: error.response.data\n                    }));\n                } else setCredentialsError(error.response.data);     \n            }\n            \n        }\n    }\n\n    const handleUsernameToggle = (event) => {\n        event.preventDefault();\n        setToggleUsername(prevState => !prevState);\n        setFormData( prevState => ({\n            ...prevState,\n            username: userAuth.username,\n            emailAddress: userAuth.emailAddress}\n        ));\n        setTogglePassword(false);\n        setToggleDelete(false);\n    }\n\n    const handlePasswordToggle = (event) => {\n        event.preventDefault();\n        setTogglePassword(prevState => !prevState);\n        setToggleUsername(false);\n        setToggleDelete(false);\n    }\n\n    const handleDeleteToggle = (event) => {\n        event.preventDefault();\n        setToggleDelete(prevState => !prevState);\n        setFormData( prevState => ({\n            ...prevState,\n            emailAddress: \"\"}\n        ));\n        setToggleUsername(false);\n        setTogglePassword(false);\n    }\n\n\n    return (\n        <div>\n            <NavBar />\n        \n            <main className=\"settings-container\">\n                <h2>Account Settings</h2>\n                <div className=\"settings-grid\">\n\n                    <div className=\"button-box\">\n                        <button className=\"button-box-item\" onClick={handleUsernameToggle}>\n                            <label>User details</label>\n                            <img src={\"./arrow-right.png\"} alt=\"arrow icon\" />\n                        </button>\n                        <button className=\"button-box-item\" onClick={handlePasswordToggle}>\n                            <label>Password</label>\n                            <img src={\"./arrow-right.png\"} alt=\"arrow icon\" />\n                        </button>\n                        <button className=\"button-box-item\" onClick={handleDeleteToggle}>\n                            <label id=\"delete-label\">Delete Account</label>\n                            <img src={\"./arrow-right.png\"} alt=\"arrow icon\" />\n                        </button>\n                    </div>\n\n                    {toggleUsername &&\n                    <div className=\"user-box\"> \n                        <h3>Edit username and email address</h3>\n                        <form onSubmit={handleEditUserDetails} noValidate>\n                            \n                            <label className=\"input-label\">New username:</label>\n                            {formValidationErrors.username !== \"\" ?\n                            <div>\n                            <input autoComplete=\"new-password\" id=\"validation-error\" type=\"text\" \n                                name=\"username\"\n                                value={formData.username}\n                                onChange={handleFormChange}\n                                />\n                                <p id=\"user-validation-error-message\">{formValidationErrors.username}</p>\n                            </div> :\n                            <input autoComplete=\"new-password\" type=\"text\"\n                                name=\"username\"\n                                value={formData.username}\n                                onChange={handleFormChange}\n                                />\n                            }\n\n                            <label className=\"input-label\">New email address:</label>\n                            {formValidationErrors.emailAddress !== \"\" ?\n                            <div>\n                                <input autoComplete=\"new-password\" id=\"validation-error\" type=\"email\"\n                                name=\"emailAddress\"\n                                value={formData.emailAddress}\n                                onChange={handleFormChange}\n                                />\n                                <p id=\"user-validation-error-message\">{formValidationErrors.emailAddress}</p>\n                            </div> :\n                            <input autoComplete=\"new-password\" type=\"email\" \n                            name=\"emailAddress\"\n                            value={formData.emailAddress}\n                            onChange={handleFormChange}\n                            />\n                            }\n                            \n                            <label className=\"input-label\">Current password:</label>\n                            {formValidationErrors.oldPassword !== \"\" ?\n                            <div> \n                                <input autoComplete=\"new-password\" id=\"validation-error\" type=\"password\" \n                                name=\"oldPassword\"\n                                value={formData.oldPassword}\n                                onChange={handleFormChange}\n                                />\n                                <p id=\"user-validation-error-message\">{formValidationErrors.oldPassword}</p>\n                            </div> :\n                            <input autoComplete=\"new-password\" type=\"password\" \n                            name=\"oldPassword\"\n                            value={formData.oldPassword}\n                            onChange={handleFormChange}\n                            />\n                            }\n\n                            {credentialsError !== \"\" && <p id=\"user-validation-error-message\">{credentialsError}</p>}\n                            <div className=\"button-spinner-container\">\n                                <button>Save changes</button>\n                                {isLoading &&\n                                <div className=\"loading-spinner-settings-container\">\n                                    <div className=\"loading-spinner\"></div>\n                                </div>\n                                }\n                            </div>\n                        </form>\n                    </div>}\n\n                    {togglePassword &&\n                    <div className=\"user-box\">\n                        <h3>Change password</h3>\n                        <form onSubmit={handleEditUserPassword} autoComplete=\"off\" noValidate>\n\n                            <label className=\"input-label\">Current password:</label>\n                            {formValidationErrors.oldPassword !== \"\" ?\n                            <div> \n                                <input id=\"validation-error\" type=\"password\" \n                                name=\"oldPassword\"\n                                value={formData.oldPassword}\n                                onChange={handleFormChange}\n                                />\n                                <p id=\"user-validation-error-message\">{formValidationErrors.oldPassword}</p>\n                            </div> :\n                            <input type=\"password\" \n                            name=\"oldPassword\"\n                            value={formData.oldPassword}\n                            onChange={handleFormChange}\n                            />\n                            }\n                            \n                            <label className=\"input-label\">New password:</label>\n                            {formValidationErrors.newPassword !== \"\" ?\n                            <div> \n                                <input id=\"validation-error\" type=\"password\" \n                                name=\"newPassword\"\n                                value={formData.newPassword}\n                                onChange={handleFormChange}\n                                />\n                                <p id=\"user-validation-error-message\">{formValidationErrors.newPassword}</p>\n                            </div> :\n                            <input type=\"password\" \n                            name=\"newPassword\"\n                            value={formData.newPassword}\n                            onChange={handleFormChange}\n                            />\n                            }\n\n                            <label className=\"input-label\">Re-enter password:</label>\n                            {formValidationErrors.passwordVerification !== \"\" ?\n                            <div> \n                                <input id=\"validation-error\" type=\"password\" \n                                name=\"passwordVerification\"\n                                value={formData.passwordVerification}\n                                onChange={handleFormChange}\n                                />\n                                <p id=\"user-validation-error-message\">{formValidationErrors.passwordVerification}</p>\n                            </div> :\n                            <input type=\"password\" \n                            name=\"passwordVerification\"\n                            value={formData.passwordVerification}\n                            onChange={handleFormChange}\n                            />\n                            }\n\n                            {credentialsError !== \"\" && <p id=\"user-validation-error-message\">{credentialsError}</p>}\n                            <button>Save changes</button>\n\n                            {isLoading &&\n                            <div className=\"loading-spinner-container\">\n                                <div className=\"loading-spinner\"></div>\n                            </div>\n                            }\n                        </form>\n                    </div>}\n\n                    {toggleDelete &&\n                    <div className=\"user-box\">\n                        <h3 id=\"delete-title\">Permanently Delete Your Account</h3>\n                        <form onSubmit={handleDeleteUser} autoComplete=\"off\" noValidate>\n                            <label className=\"input-label\">Type yor email address to confirm:</label>\n                            {formValidationErrors.emailAddress !== \"\" ?\n                            <div>\n                                <input id=\"validation-error\" type=\"email\"\n                                name=\"emailAddress\"\n                                value={formData.emailAddress}\n                                onChange={handleFormChange}\n                                />\n                                <p id=\"user-validation-error-message\">{formValidationErrors.emailAddress}</p>\n                            </div> :\n                            <input type=\"email\" \n                            name=\"emailAddress\"\n                            value={formData.emailAddress}\n                            onChange={handleFormChange}\n                            />\n                            }\n                            \n                            <label className=\"input-label\">Current password:</label>\n                            {formValidationErrors.oldPassword !== \"\" ?\n                            <div> \n                                <input id=\"validation-error\" autoComplete=\"new-password\" type=\"password\" \n                                name=\"oldPassword\"\n                                value={formData.oldPassword}\n                                onChange={handleFormChange}\n                                />\n                                <p id=\"user-validation-error-message\">{formValidationErrors.oldPassword}</p>\n                            </div> :\n                            <input type=\"password\" \n                            name=\"oldPassword\"\n                            value={formData.oldPassword}\n                            onChange={handleFormChange}\n                            />\n                            }\n\n                            {credentialsError !== \"\" && <p id=\"user-validation-error-message\">{credentialsError}</p>}\n                            <button id=\"delete\">Delete</button>\n\n                            {isLoading &&\n                            <div className=\"loading-spinner-container\">\n                                <div className=\"loading-spinner\"></div>\n                            </div>\n                            }\n                        </form>\n                    </div>}\n                </div>\n            </main>\n            {(networkError !== \"\") &&\n            <Notification \n                message={networkError} \n                type={\"error\"}\n            />}\n        </div>\n\t)\n\n}\n\nexport default Settings;"]},"metadata":{},"sourceType":"module"}