{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport useRefreshToken from \"./useRefreshToken\";\n\nconst useAxios = () => {\n  _s();\n\n  const {\n    userAuth\n  } = useContext(AuthContext);\n  const refresh = useRefreshToken();\n  const baseURL = \"http://localhost:8080/api\";\n  const axiosInstance = axios.create({\n    baseURL: baseURL,\n    timeout: 10000,\n    headers: {\n      'Authorization': `Bearer ${userAuth.accessToken}`\n    }\n  });\n  useEffect(() => {\n    const requestIntercept = axiosInstance.interceptors.request.use(async request => {\n      const decodedToken = jwt_decode(userAuth.accessToken);\n      const tokenExpirationDate = decodedToken.exp;\n      const currentTime = new Date().getTime() / 1000;\n      const isValid = tokenExpirationDate > currentTime;\n      if (isValid) return request;\n      const refreshedToken = await refresh();\n      request.headers.Authorization = `Bearer ${refreshedToken}`;\n      return request;\n    }, error => Promise.reject(error));\n    const responseIntercept = axiosInstance.interceptors.response.use(response => {\n      return response;\n    }, async error => {\n      if (error.status === 403) {\n        const refreshedToken = await refresh();\n        const originalRequest = error.config;\n        originalRequest.headers.Authorization = `Bearer ${refreshedToken}`;\n        return axiosInstance(originalRequest);\n      }\n\n      return Promise.reject(error);\n    });\n    return () => {\n      axiosInstance.interceptors.request.eject(requestIntercept);\n      axiosInstance.interceptors.response.eject(responseIntercept);\n    };\n  }, [auth, refresh]);\n  return axiosInstance;\n};\n\n_s(useAxios, \"sdKuA1Ppy/cdJpq0VQtrNK6FUvo=\", false, function () {\n  return [useRefreshToken];\n});\n\nexport default useAxios;","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/utils/useAxios.js"],"names":["axios","jwt_decode","useContext","AuthContext","useRefreshToken","useAxios","userAuth","refresh","baseURL","axiosInstance","create","timeout","headers","accessToken","useEffect","requestIntercept","interceptors","request","use","decodedToken","tokenExpirationDate","exp","currentTime","Date","getTime","isValid","refreshedToken","Authorization","error","Promise","reject","responseIntercept","response","status","originalRequest","config","eject","auth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,UAAU,CAACC,WAAD,CAA/B;AAEH,QAAMI,OAAO,GAAGH,eAAe,EAA/B;AAEA,QAAMI,OAAO,GAAG,2BAAhB;AAEA,QAAMC,aAAa,GAAGT,KAAK,CAACU,MAAN,CAAa;AAClCF,IAAAA,OAAO,EAAEA,OADyB;AAElCG,IAAAA,OAAO,EAAE,KAFyB;AAGlCC,IAAAA,OAAO,EAAE;AAAE,uBAAkB,UAASN,QAAQ,CAACO,WAAY;AAAlD;AAHyB,GAAb,CAAtB;AAOAC,EAAAA,SAAS,CAAC,MAAM;AAEf,UAAMC,gBAAgB,GAAGN,aAAa,CAACO,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,MAAMD,OAAN,IAAiB;AAEhF,YAAME,YAAY,GAAGlB,UAAU,CAACK,QAAQ,CAACO,WAAV,CAA/B;AACA,YAAMO,mBAAmB,GAAGD,YAAY,CAACE,GAAzC;AACA,YAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAA3C;AAEA,YAAMC,OAAO,GAAGL,mBAAmB,GAAGE,WAAtC;AAEA,UAAIG,OAAJ,EAAa,OAAOR,OAAP;AAEb,YAAMS,cAAc,GAAG,MAAMnB,OAAO,EAApC;AAEAU,MAAAA,OAAO,CAACL,OAAR,CAAgBe,aAAhB,GAAiC,UAASD,cAAe,EAAzD;AACA,aAAOT,OAAP;AAEC,KAfuB,EAepBW,KAAD,IAAWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAfU,CAAzB;AAmBA,UAAMG,iBAAiB,GAAGtB,aAAa,CAACO,YAAd,CAA2BgB,QAA3B,CAAoCd,GAApC,CAAyCc,QAAQ,IAAI;AAE9E,aAAOA,QAAP;AAEC,KAJwB,EAItB,MAAMJ,KAAN,IAAe;AAEjB,UAAIA,KAAK,CAACK,MAAN,KAAiB,GAArB,EAA0B;AACzB,cAAMP,cAAc,GAAG,MAAMnB,OAAO,EAApC;AAEA,cAAM2B,eAAe,GAAGN,KAAK,CAACO,MAA9B;AAEAD,QAAAA,eAAe,CAACtB,OAAhB,CAAwBe,aAAxB,GAAyC,UAASD,cAAe,EAAjE;AAEA,eAAOjB,aAAa,CAACyB,eAAD,CAApB;AACA;;AAED,aAAOL,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,KAjBwB,CAA1B;AAoBA,WAAO,MAAM;AACHnB,MAAAA,aAAa,CAACO,YAAd,CAA2BC,OAA3B,CAAmCmB,KAAnC,CAAyCrB,gBAAzC;AACAN,MAAAA,aAAa,CAACO,YAAd,CAA2BgB,QAA3B,CAAoCI,KAApC,CAA0CL,iBAA1C;AACH,KAHP;AAIG,GA7CK,EA6CH,CAACM,IAAD,EAAO9B,OAAP,CA7CG,CAAT;AA+CG,SAAOE,aAAP;AACH,CA/DD;;GAAMJ,Q;UAIWD,e;;;AA6DjB,eAAeC,QAAf","sourcesContent":["import axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport useRefreshToken from \"./useRefreshToken\";\n\nconst useAxios = () => {\n\n    const { userAuth } = useContext(AuthContext);\n\n\tconst refresh = useRefreshToken();\n\n\tconst baseURL = \"http://localhost:8080/api\";\n\n\tconst axiosInstance = axios.create({\n\t\tbaseURL: baseURL,\n\t\ttimeout: 10000,\n\t\theaders: { 'Authorization': `Bearer ${userAuth.accessToken}`}\n\t});\n\n\n\tuseEffect(() => {\n\n\t\tconst requestIntercept = axiosInstance.interceptors.request.use(async request => {\n\n\t\t\tconst decodedToken = jwt_decode(userAuth.accessToken);\n\t\t\tconst tokenExpirationDate = decodedToken.exp;\n\t\t\tconst currentTime = new Date().getTime() / 1000;\n\t\t\n\t\t\tconst isValid = tokenExpirationDate > currentTime;\n\t\t\n\t\t\tif (isValid) return request;\n\n\t\t\tconst refreshedToken = await refresh();\n\t\t\t\n\t\t\trequest.headers.Authorization = `Bearer ${refreshedToken}`;\n\t\t\treturn request;\n\n\t\t\t}, (error) => Promise.reject(error)\n        );\n\n\n\t\tconst responseIntercept = axiosInstance.interceptors.response.use( response => {\n\n\t\t\treturn response;\n\t\t\t\n\t\t\t}, async error => {\n\n\t\t\t\tif (error.status === 403) {\n\t\t\t\t\tconst refreshedToken = await refresh();\n\n\t\t\t\t\tconst originalRequest = error.config;\n\t\n\t\t\t\t\toriginalRequest.headers.Authorization = `Bearer ${refreshedToken}`;\n\t\n\t\t\t\t\treturn axiosInstance(originalRequest);\n\t\t\t\t} \n\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\t\t);\n\n\t\treturn () => {\n            axiosInstance.interceptors.request.eject(requestIntercept);\n            axiosInstance.interceptors.response.eject(responseIntercept);\n        }\n    }, [auth, refresh])\n    \n    return axiosInstance;\n}\n\nexport default useAxios;"]},"metadata":{},"sourceType":"module"}