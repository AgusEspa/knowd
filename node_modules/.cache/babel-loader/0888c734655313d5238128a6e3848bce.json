{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Settings.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport useAxios from \"../utils/useAxios\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport NavBar from \"../components/Dashboard/Navbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const {\n    userAuth,\n    logout\n  } = useContext(AuthContext);\n  const [formData, setFormData] = useState({\n    username: userAuth.username,\n    emailAddress: userAuth.emailAddress,\n    oldPassword: \"\",\n    newPassword: \"\",\n    passwordVerification: \"\"\n  });\n  const [credentialsError, setCredentialsError] = useState(\"\");\n  const [formValidationErrors, setFormValidationErrors] = useState({\n    username: \"\",\n    emailAddress: \"\",\n    oldPassword: \"\",\n    newPassword: \"\",\n    passwordVerification: \"\"\n  });\n  const [toggleUsername, setToggleUsername] = useState(false);\n  const [togglePassword, setTogglePassword] = useState(false);\n  const [toggleDelete, setToggleDelete] = useState(false);\n  const api = useAxios();\n\n  const handleFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n    setFormValidationErrors(prevState => ({ ...prevState,\n      [name]: \"\"\n    }));\n    setCredentialsError(\"\");\n  };\n\n  const validateDetailsForm = data => {\n    const errors = {\n      username: \"\",\n      emailAddress: \"\",\n      oldPassword: \"\"\n    };\n    const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!data.emailAddress) {\n      errors.emailAddress = \"Email address is required\";\n    } else if (!emailPattern.test(data.emailAddress)) {\n      errors.emailAddress = \"Please enter a valid email address\";\n    }\n\n    if (!data.username) {\n      errors.username = \"Username is required\";\n    } else if (data.username.length < 3) {\n      errors.username = \"Username must be at least 3 characters long\";\n    }\n\n    if (!data.oldPassword) {\n      errors.oldPassword = \"Password is required\";\n    } else if (data.oldPassword.length < 8) {\n      errors.oldPassword = \"Password must be at least 8 characters long\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleEditUserDetails = async event => {\n    event.preventDefault();\n    const validationErrors = validateDetailsForm(formData);\n\n    if (validationErrors.emailAddress === \"\" && validationErrors.username === \"\" && validationErrors.oldPassword === \"\") {\n      try {\n        await api.put(\"/users\", formData);\n        logout();\n      } catch (error) {\n        if (!error.response) {\n          //console.log(error);\n          setCredentialsError(\"Unable to contact the server. Try again later.\");\n        } else {\n          if (error.response.status === 422) {\n            setFormValidationErrors(prevState => ({ ...prevState,\n              emailAddress: error.response.data\n            }));\n          } else setCredentialsError(error.response.data); //console.log(`Error: ${error.response.data}`);\n\n        }\n      }\n    }\n  };\n\n  const validatePasswordForm = data => {\n    const errors = {\n      oldPassword: \"\",\n      newPassword: \"\",\n      passwordVerification: \"\"\n    };\n\n    if (!data.oldPassword) {\n      errors.oldPassword = \"Password is required\";\n    } else if (data.oldPassword.length < 8) {\n      errors.oldPassword = \"Password must be at least 8 characters long\";\n    }\n\n    if (!data.newPassword) {\n      errors.newPassword = \"Password is required\";\n    } else if (data.newPassword.length < 8) {\n      errors.newPassword = \"Password must be at least 8 characters long\";\n    }\n\n    if (!data.passwordVerification) {\n      errors.passwordVerification = \"Plese re-enter the password\";\n    } else if (data.newPassword !== data.passwordVerification) {\n      errors.passwordVerification = \"Passwords don't match\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleEditUserPassword = async event => {\n    event.preventDefault();\n    const validationErrors = validatePasswordForm(formData);\n\n    if (validationErrors.oldPassword === \"\" && validationErrors.newPassword === \"\" && validationErrors.passwordVerification === \"\") {\n      try {\n        await api.put(\"/users\", formData);\n        logout();\n      } catch (error) {\n        if (!error.response) {\n          //console.log(error);\n          setCredentialsError(\"Unable to contact the server. Try again later.\");\n        } else {\n          //console.log(`Error: ${error.response.data}`);\n          setCredentialsError(error.response.data);\n        }\n      }\n    }\n  };\n\n  const validateDeleteForm = data => {\n    const errors = {\n      emailAddress: \"\",\n      oldPassword: \"\"\n    };\n    const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!data.emailAddress) {\n      errors.emailAddress = \"Email address is required\";\n    } else if (!emailPattern.test(data.emailAddress)) {\n      errors.emailAddress = \"Please enter a valid email address\";\n    }\n\n    if (!data.oldPassword) {\n      errors.oldPassword = \"Password is required\";\n    } else if (data.oldPassword.length < 8) {\n      errors.oldPassword = \"Password must be at least 8 characters long\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleDeleteUser = async event => {\n    event.preventDefault();\n    const validationErrors = validateDeleteForm(formData);\n\n    if (validationErrors.emailAddress === \"\" && validationErrors.oldPassword === \"\") {\n      try {\n        console.log(formData);\n        await api.delete(\"/users\", {\n          data: formData\n        });\n        logout();\n      } catch (error) {\n        if (!error.response) {\n          //console.log(error);\n          setCredentialsError(\"Unable to contact the server. Please try again later.\");\n        } else {\n          //console.log(error);\n          setCredentialsError(\"Incorrect email / password\");\n        }\n      }\n    }\n  };\n\n  const handleUsernameToggle = event => {\n    event.preventDefault();\n    setToggleUsername(prevState => !prevState);\n    setTogglePassword(false);\n    setToggleDelete(false);\n  };\n\n  const handlePasswordToggle = event => {\n    event.preventDefault();\n    setTogglePassword(prevState => !prevState);\n  };\n\n  const handleDeleteToggle = event => {\n    event.preventDefault();\n    setToggleDelete(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"settings-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          onClick: handleUsernameToggle,\n          children: \"Username and email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), toggleUsername && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditUserDetails,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), formValidationErrors.username !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"text\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-validation-error-message\",\n              children: formValidationErrors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Email address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), formValidationErrors.emailAddress !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"email\",\n              name: \"emailAddress\",\n              value: formData.emailAddress,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-validation-error-message\",\n              children: formValidationErrors.emailAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"emailAddress\",\n            value: formData.emailAddress,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Current password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), formValidationErrors.oldPassword !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"password\",\n              name: \"oldPassword\",\n              value: formData.oldPassword,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-validation-error-message\",\n              children: formValidationErrors.oldPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"oldPassword\",\n            value: formData.oldPassword,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"user-validation-error-message\",\n            children: credentialsError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          onClick: handlePasswordToggle,\n          children: \"Change password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), togglePassword && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditUserPassword,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Current password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), formValidationErrors.oldPassword !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"password\",\n              name: \"oldPassword\",\n              value: formData.oldPassword,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-validation-error-message\",\n              children: formValidationErrors.oldPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"oldPassword\",\n            value: formData.oldPassword,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"New password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this), formValidationErrors.newPassword !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"password\",\n              name: \"newPassword\",\n              value: formData.newPassword,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-validation-error-message\",\n              children: formValidationErrors.newPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"newPassword\",\n            value: formData.newPassword,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Re-enter password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this), formValidationErrors.passwordVerification !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"password\",\n              name: \"passwordVerification\",\n              value: formData.passwordVerification,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-validation-error-message\",\n              children: formValidationErrors.passwordVerification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"passwordVerification\",\n            value: formData.passwordVerification,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"user-validation-error-message\",\n            children: credentialsError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          onClick: handleDeleteToggle,\n          children: \"Permanently Delete Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), toggleDelete && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleDeleteUser,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Email address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this), formValidationErrors.emailAddress !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"email\",\n              name: \"emailAddress\",\n              value: formData.emailAddress,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-validation-error-message\",\n              children: formValidationErrors.emailAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"emailAddress\",\n            value: formData.emailAddress,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"input-label\",\n            children: \"Current password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this), formValidationErrors.oldPassword !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"validation-error\",\n              type: \"password\",\n              name: \"oldPassword\",\n              value: formData.oldPassword,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"user-validation-error-message\",\n              children: formValidationErrors.oldPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"oldPassword\",\n            value: formData.oldPassword,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"user-validation-error-message\",\n            children: credentialsError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"delete\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Settings, \"62fh9S897TlbQo2BUAnZqzeF//w=\", false, function () {\n  return [useAxios];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Settings.js"],"names":["useState","useContext","useAxios","AuthContext","NavBar","Settings","userAuth","logout","formData","setFormData","username","emailAddress","oldPassword","newPassword","passwordVerification","credentialsError","setCredentialsError","formValidationErrors","setFormValidationErrors","toggleUsername","setToggleUsername","togglePassword","setTogglePassword","toggleDelete","setToggleDelete","api","handleFormChange","event","name","value","target","prevState","validateDetailsForm","data","errors","emailPattern","test","length","handleEditUserDetails","preventDefault","validationErrors","put","error","response","status","validatePasswordForm","handleEditUserPassword","validateDeleteForm","handleDeleteUser","console","log","delete","handleUsernameToggle","handlePasswordToggle","handleDeleteToggle"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport useAxios from \"../utils/useAxios\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport NavBar from \"../components/Dashboard/Navbar/Navbar\";\n\nconst Settings = () => {\n\n    const { userAuth, logout } = useContext(AuthContext);\n    const [formData, setFormData] = useState({username: userAuth.username, emailAddress: userAuth.emailAddress, oldPassword: \"\", newPassword: \"\", passwordVerification: \"\"});\n    const [credentialsError, setCredentialsError] = useState(\"\");\n    const [formValidationErrors, setFormValidationErrors] = useState({username: \"\", emailAddress: \"\", oldPassword: \"\", newPassword: \"\", passwordVerification: \"\"});\n    const [toggleUsername, setToggleUsername] = useState(false);\n    const [togglePassword, setTogglePassword] = useState(false);\n    const [toggleDelete, setToggleDelete] = useState(false);\n\n\tconst api = useAxios();\n\n    const handleFormChange = (event) => {\n        const {name, value} = event.target;\n        setFormData( prevState => ({\n            ...prevState,\n            [name]: value \n        }));\n        setFormValidationErrors( prevState => ({\n            ...prevState,\n            [name]: \"\" \n        }));\n        setCredentialsError(\"\");\n    }\n\n    const validateDetailsForm = (data) => {\n        const errors = {username:\"\", emailAddress: \"\", oldPassword: \"\"};\n    \n        const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    \n        if (!data.emailAddress) {\n            errors.emailAddress = \"Email address is required\";\n        } \n        else if (!(emailPattern.test(data.emailAddress))) {\n            errors.emailAddress = \"Please enter a valid email address\";\n        }\n\n        if (!data.username) {\n            errors.username = \"Username is required\";\n        } \n        else if (data.username.length < 3) {\n            errors.username = \"Username must be at least 3 characters long\";\n        }\n\n        if (!data.oldPassword) {\n            errors.oldPassword = \"Password is required\";\n        } else if (data.oldPassword.length < 8) {\n            errors.oldPassword = \"Password must be at least 8 characters long\";\n        }\n\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n    const handleEditUserDetails = async (event) => {\n        event.preventDefault();\n\n        const validationErrors = validateDetailsForm(formData);\n        \n        if (validationErrors.emailAddress === \"\" && validationErrors.username === \"\" && validationErrors.oldPassword === \"\") {\n            \n            try {\n                await api.put(\"/users\", formData);\n                logout();\n\n            } catch (error) {\n                if (!error.response) {\n                    //console.log(error);\n                    setCredentialsError(\"Unable to contact the server. Try again later.\");\n                } else {\n                    if (error.response.status === 422) {\n                        setFormValidationErrors( prevState => ({\n                            ...prevState,\n                            emailAddress: error.response.data \n                        }));\n                    } else setCredentialsError(error.response.data);\n                    //console.log(`Error: ${error.response.data}`);\n                    \n                }\n            }\n        }\n        \n    }\n\n    const validatePasswordForm = (data) => {\n        const errors = {oldPassword: \"\", newPassword: \"\", passwordVerification: \"\"};\n    \n        if (!data.oldPassword) {\n            errors.oldPassword = \"Password is required\";\n        } else if (data.oldPassword.length < 8) {\n            errors.oldPassword = \"Password must be at least 8 characters long\";\n        }\n\n        if (!data.newPassword) {\n            errors.newPassword = \"Password is required\";\n        } else if (data.newPassword.length < 8) {\n            errors.newPassword = \"Password must be at least 8 characters long\";\n        }\n\n        if (!data.passwordVerification) {\n            errors.passwordVerification = \"Plese re-enter the password\";\n        } else if (data.newPassword !== data.passwordVerification) {\n            errors.passwordVerification = \"Passwords don't match\";\n        }\n\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n    const handleEditUserPassword =  async (event) => {\n        event.preventDefault();\n\n        const validationErrors = validatePasswordForm(formData);\n        \n        if (validationErrors.oldPassword === \"\" && validationErrors.newPassword === \"\" && validationErrors.passwordVerification === \"\" ) {\n            \n            try {\n                await api.put(\"/users\", formData);\n                logout();\n\n            } catch (error) {\n                if (!error.response) {\n                    //console.log(error);\n                    setCredentialsError(\"Unable to contact the server. Try again later.\");\n                } else {\n                    //console.log(`Error: ${error.response.data}`);\n                    setCredentialsError(error.response.data);\n                }\n            }\n        }\n        \n    }\n\n    const validateDeleteForm = (data) => {\n        const errors = {emailAddress: \"\", oldPassword: \"\"};\n    \n        const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    \n        if (!data.emailAddress) {\n            errors.emailAddress = \"Email address is required\";\n        } \n        else if (!(emailPattern.test(data.emailAddress))) {\n            errors.emailAddress = \"Please enter a valid email address\";\n        }\n\n        if (!data.oldPassword) {\n            errors.oldPassword = \"Password is required\";\n        } else if (data.oldPassword.length < 8) {\n            errors.oldPassword = \"Password must be at least 8 characters long\";\n        }\n\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n    const handleDeleteUser = async (event) => {\n        event.preventDefault();\n\n        const validationErrors = validateDeleteForm(formData);\n        \n        if (validationErrors.emailAddress === \"\" && validationErrors.oldPassword === \"\") {\n\n            try {\n                console.log(formData);\n\n                await api.delete(\"/users\", {data: formData});\n                logout();\n            } catch (error) {\n                if (!error.response) {\n                    //console.log(error);\n                    setCredentialsError(\"Unable to contact the server. Please try again later.\");\n                } else {\n                    //console.log(error);\n                    setCredentialsError(\"Incorrect email / password\");\n                }\n            }\n        }\n    }\n\n    const handleUsernameToggle = (event) => {\n        event.preventDefault();\n        setToggleUsername(prevState => !prevState);\n        setTogglePassword(false);\n        setToggleDelete(false);\n    }\n\n    const handlePasswordToggle = (event) => {\n        event.preventDefault();\n        setTogglePassword(prevState => !prevState);\n    }\n\n    const handleDeleteToggle = (event) => {\n        event.preventDefault();\n        setToggleDelete(prevState => !prevState);\n    }\n\n\n\treturn (\n        <div>\n            <NavBar />\n        \n            <main className=\"settings-container\">\n\n                <h2>Account Settings</h2>\n\n                <div className=\"user-box\">\n\n                    <h3 onClick={handleUsernameToggle}>Username and email address</h3>\n                    {toggleUsername &&\n                    <form onSubmit={handleEditUserDetails} noValidate>\n                        \n                        <label className=\"input-label\">Username:</label>\n                        {formValidationErrors.username !== \"\" ?\n                        <div>\n                        <input id=\"validation-error\" type=\"text\" \n                            name=\"username\"\n                            value={formData.username}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"user-validation-error-message\">{formValidationErrors.username}</p>\n                        </div> :\n                        <input type=\"text\" \n                            name=\"username\"\n                            value={formData.username}\n                            onChange={handleFormChange}\n                            />\n                        }\n\n                        <label className=\"input-label\">Email address:</label>\n                        {formValidationErrors.emailAddress !== \"\" ?\n                        <div>\n                            <input id=\"validation-error\" type=\"email\"\n                            name=\"emailAddress\"\n                            value={formData.emailAddress}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"user-validation-error-message\">{formValidationErrors.emailAddress}</p>\n                        </div> :\n                        <input type=\"email\" \n                        name=\"emailAddress\"\n                        value={formData.emailAddress}\n                        onChange={handleFormChange}\n                        />\n                        }\n                        \n                        <label className=\"input-label\">Current password:</label>\n                        {formValidationErrors.oldPassword !== \"\" ?\n                        <div> \n                            <input id=\"validation-error\" type=\"password\" \n                            name=\"oldPassword\"\n                            value={formData.oldPassword}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"user-validation-error-message\">{formValidationErrors.oldPassword}</p>\n                        </div> :\n                        <input type=\"password\" \n                        name=\"oldPassword\"\n                        value={formData.oldPassword}\n                        onChange={handleFormChange}\n                        />\n                        }\n\n                        {credentialsError !== \"\" && <p id=\"user-validation-error-message\">{credentialsError}</p>}\n                        <button>Save changes</button>\n                    </form>}\n                </div>\n\n                <div className=\"user-box\">\n\n                    <h3 onClick={handlePasswordToggle}>Change password</h3>\n                    {togglePassword &&\n                    <form onSubmit={handleEditUserPassword} noValidate>\n\n                        <label className=\"input-label\">Current password:</label>\n                        {formValidationErrors.oldPassword !== \"\" ?\n                        <div> \n                            <input id=\"validation-error\" type=\"password\" \n                            name=\"oldPassword\"\n                            value={formData.oldPassword}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"user-validation-error-message\">{formValidationErrors.oldPassword}</p>\n                        </div> :\n                        <input type=\"password\" \n                        name=\"oldPassword\"\n                        value={formData.oldPassword}\n                        onChange={handleFormChange}\n                        />\n                        }\n                        \n                        <label className=\"input-label\">New password:</label>\n                        {formValidationErrors.newPassword !== \"\" ?\n                        <div> \n                            <input id=\"validation-error\" type=\"password\" \n                            name=\"newPassword\"\n                            value={formData.newPassword}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"user-validation-error-message\">{formValidationErrors.newPassword}</p>\n                        </div> :\n                        <input type=\"password\" \n                        name=\"newPassword\"\n                        value={formData.newPassword}\n                        onChange={handleFormChange}\n                        />\n                        }\n\n                        <label className=\"input-label\">Re-enter password:</label>\n                        {formValidationErrors.passwordVerification !== \"\" ?\n                        <div> \n                            <input id=\"validation-error\" type=\"password\" \n                            name=\"passwordVerification\"\n                            value={formData.passwordVerification}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"user-validation-error-message\">{formValidationErrors.passwordVerification}</p>\n                        </div> :\n                        <input type=\"password\" \n                        name=\"passwordVerification\"\n                        value={formData.passwordVerification}\n                        onChange={handleFormChange}\n                        />\n                        }\n\n                        {credentialsError !== \"\" && <p id=\"user-validation-error-message\">{credentialsError}</p>}\n                        <button>Save changes</button>\n                    </form>}\n                </div>\n\n                <div className=\"user-box\">\n                    <h3 onClick={handleDeleteToggle}>Permanently Delete Account</h3>\n                    {toggleDelete &&\n                    <form onSubmit={handleDeleteUser} noValidate>\n                        <label className=\"input-label\">Email address:</label>\n                        {formValidationErrors.emailAddress !== \"\" ?\n                        <div>\n                            <input id=\"validation-error\" type=\"email\"\n                            name=\"emailAddress\"\n                            value={formData.emailAddress}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"user-validation-error-message\">{formValidationErrors.emailAddress}</p>\n                        </div> :\n                        <input type=\"email\" \n                        name=\"emailAddress\"\n                        value={formData.emailAddress}\n                        onChange={handleFormChange}\n                        />\n                        }\n                        \n                        <label className=\"input-label\">Current password:</label>\n                        {formValidationErrors.oldPassword !== \"\" ?\n                        <div> \n                            <input id=\"validation-error\" type=\"password\" \n                            name=\"oldPassword\"\n                            value={formData.oldPassword}\n                            onChange={handleFormChange}\n                            />\n                            <p id=\"user-validation-error-message\">{formValidationErrors.oldPassword}</p>\n                        </div> :\n                        <input type=\"password\" \n                        name=\"oldPassword\"\n                        value={formData.oldPassword}\n                        onChange={handleFormChange}\n                        />\n                        }\n\n                        {credentialsError !== \"\" && <p id=\"user-validation-error-message\">{credentialsError}</p>}\n                        <button id=\"delete\">Delete</button>\n                    </form>}\n                </div>\n\n            </main>\n        </div>\n\t)\n\n}\n\nexport default Settings;"]},"metadata":{},"sourceType":"module"}