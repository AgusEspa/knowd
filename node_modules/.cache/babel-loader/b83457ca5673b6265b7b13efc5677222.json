{"ast":null,"code":"var _jsxFileName = \"/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    emailAddress: \"\",\n    username: \"\",\n    password: \"\",\n    passwordVerification: \"\"\n  });\n  const [formValidationErrors, setFormValidationErrors] = useState({\n    emailAddress: \"\",\n    username: \"\",\n    password: \"\",\n    passwordVerification: \"\"\n  });\n  const [credentialsError, setCredentialsError] = useState(\"\");\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [passwordHelperDisplay, setPasswordHelperDisplay] = useState(false);\n  const navigate = useNavigate();\n  const baseUrl = \"http://localhost:8080/api\";\n\n  const handleFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const validateForm = data => {\n    const errors = {\n      emailAddress: \"\",\n      username: \"\",\n      password: \"\",\n      passwordVerification: \"\"\n    };\n    const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!data.emailAddress) {\n      errors.emailAddress = \"Email address is required\";\n    } else if (!emailPattern.test(data.emailAddress)) {\n      errors.emailAddress = \"Please enter a valid email address\";\n    }\n\n    if (!data.username) {\n      errors.username = \"Username is required\";\n    } else if (data.username.length < 3) {\n      errors.username = \"Username must be at least 3 characters long\";\n    }\n\n    if (!data.password) {\n      errors.password = \"Password is required\";\n    } else if (data.password.length < 8) {\n      errors.password = \"Password must be at least 8 characters long\";\n    }\n\n    if (!data.passwordVerification) {\n      errors.passwordVerification = \"Plese re-enter the password\";\n    } else if (data.password !== data.passwordVerification) {\n      errors.passwordVerification = \"Passwords don't match\";\n    }\n\n    setFormValidationErrors(errors);\n    return errors;\n  };\n\n  const handleRegistration = async event => {\n    event.preventDefault();\n    const validationErrors = validateForm(formData);\n\n    if (validationErrors.emailAddress === \"\" && validationErrors.username === \"\" && validationErrors.password === \"\" && validationErrors.passwordVerification === \"\") {\n      const requestBody = {\n        username: formData.username,\n        emailAddress: formData.emailAddress,\n        password: formData.password\n      };\n      setFormValidationErrors({\n        emailAddress: \"\",\n        username: \"\",\n        password: \"\",\n        passwordVerification: \"\"\n      });\n      setCredentialsError(\"\");\n\n      try {\n        await axios.post(`${baseUrl}/users/signup`, requestBody);\n        setIsRegistered(true);\n        await new Promise(resolve => setTimeout(resolve, 4000));\n        navigate(\"/login\");\n      } catch (error) {\n        if (!error.response) {\n          setCredentialsError(\"Unable to contact the server. Please try again later.\");\n        } else if (error.response.status === 422) {\n          if (error.response.data.includes(\"email\")) setFormValidationErrors(prevState => ({ ...prevState,\n            emailAddress: error.response.data\n          }));\n        } else setCredentialsError(error.response.data);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-box\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: \"./logo.png\",\n          alt: \"self.OKRs logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegistration,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), formValidationErrors.username !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"validation-error\",\n            type: \"text\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"validation-error-message\",\n            children: formValidationErrors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), formValidationErrors.emailAddress !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"validation-error\",\n            type: \"email\",\n            name: \"emailAddress\",\n            value: formData.emailAddress,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"validation-error-message\",\n            children: formValidationErrors.emailAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"emailAddress\",\n          value: formData.emailAddress,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./info.png\",\n            alt: \"information icon\",\n            onMouseEnter: () => setPasswordHelperDisplay(true),\n            onMouseLeave: () => setPasswordHelperDisplay(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), passwordHelperDisplay && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"password-helper\",\n            children: \"Password must have at least 8 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), formValidationErrors.password !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"validation-error\",\n            type: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"validation-error-message\",\n            children: formValidationErrors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Re-enter password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), formValidationErrors.passwordVerification !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"validation-error\",\n            type: \"password\",\n            name: \"passwordVerification\",\n            value: formData.passwordVerification,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"validation-error-message\",\n            children: formValidationErrors.passwordVerification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"passwordVerification\",\n          value: formData.passwordVerification,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), credentialsError !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registration-error-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: credentialsError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), isRegistered && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"successful-registration\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your account was succesfully created.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Redirecting to login...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Register, \"SjYaj1493VLNioOT2K0cjg5Xuac=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/agusespa/Programming/Projects/self-okrs-ui/src/pages/Register.js"],"names":["useState","axios","useNavigate","Register","formData","setFormData","emailAddress","username","password","passwordVerification","formValidationErrors","setFormValidationErrors","credentialsError","setCredentialsError","isRegistered","setIsRegistered","passwordHelperDisplay","setPasswordHelperDisplay","navigate","baseUrl","handleFormChange","event","name","value","target","prevState","validateForm","data","errors","emailPattern","test","length","handleRegistration","preventDefault","validationErrors","requestBody","post","Promise","resolve","setTimeout","error","response","status","includes"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Register = () => {\n\n    const [formData, setFormData] = useState({emailAddress: \"\", username:\"\", password: \"\", passwordVerification:\"\"});\n    const [formValidationErrors, setFormValidationErrors] = useState({emailAddress: \"\", username:\"\", password: \"\", passwordVerification:\"\"});\n    const [credentialsError, setCredentialsError] = useState(\"\");\n    const [isRegistered, setIsRegistered] = useState(false);\n\tconst [passwordHelperDisplay, setPasswordHelperDisplay] = useState(false);\n\tconst navigate = useNavigate();\n\n\tconst baseUrl = \"http://localhost:8080/api\";\n\n\tconst handleFormChange = (event) => {\n        const {name, value} = event.target;\n        setFormData( prevState => ({\n            ...prevState,\n            [name]: value \n        }));\n    }\n\n    const validateForm = (data) => {\n        const errors = {emailAddress: \"\", username:\"\", password: \"\", passwordVerification:\"\"};\n    \n        const emailPattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    \n        if (!data.emailAddress) {\n            errors.emailAddress = \"Email address is required\";\n        } \n        else if (!(emailPattern.test(data.emailAddress))) {\n            errors.emailAddress = \"Please enter a valid email address\";\n        }\n\n        if (!data.username) {\n            errors.username = \"Username is required\";\n        } \n        else if (data.username.length < 3) {\n            errors.username = \"Username must be at least 3 characters long\";\n        }\n\n        if (!data.password) {\n            errors.password = \"Password is required\";\n        } else if (data.password.length < 8) {\n            errors.password = \"Password must be at least 8 characters long\";\n        }\n\n        if (!data.passwordVerification) {\n            errors.passwordVerification = \"Plese re-enter the password\";\n        } else if (data.password !== data.passwordVerification) {\n            errors.passwordVerification = \"Passwords don't match\";\n        }\n\n        setFormValidationErrors(errors);\n        return errors;\n    }\n\n  \tconst handleRegistration = async (event) => {\n\t\tevent.preventDefault();\n\n        const validationErrors = validateForm(formData);\n\n        if (validationErrors.emailAddress === \"\" && validationErrors.username === \"\" && validationErrors.password === \"\" && validationErrors.passwordVerification === \"\") {\n        \n            const requestBody = {username: formData.username, \n                emailAddress: formData.emailAddress,\n                password: formData.password};\n\n                setFormValidationErrors({emailAddress: \"\", username:\"\", password: \"\", passwordVerification:\"\"});\n                setCredentialsError(\"\");\n\n            try {\n                await axios.post(`${baseUrl}/users/signup`, requestBody);\n                setIsRegistered(true);\n                await new Promise(resolve => setTimeout(resolve, 4000));\n                navigate(\"/login\");\n            } catch (error) {\n                if (!error.response) {\n                    setCredentialsError(\"Unable to contact the server. Please try again later.\");\n                } else if (error.response.status === 422) {\n                    if (error.response.data.includes(\"email\"))\n                    setFormValidationErrors( prevState => ({\n                        ...prevState,\n                        emailAddress: error.response.data \n                    }));\n                } else setCredentialsError(error.response.data);     \n            } \n        }\n  \t}\n\n\n\treturn (\n\t\t<main className=\"register-container\">\n            <div className=\"register-box\">\n                <div className=\"logo-box\">\n\t\t\t\t\t<img className=\"logo\" src={\"./logo.png\"} alt=\"self.OKRs logo\"/>\n\t\t\t\t</div>  \n\n                <form onSubmit={handleRegistration} noValidate>\n\n                    <label>Username:</label>\n                    {formValidationErrors.username !== \"\" ?\n                    <div>\n                    <input id=\"validation-error\" type=\"text\" \n                        name=\"username\"\n                        value={formData.username}\n                        onChange={handleFormChange}\n                        />\n                        <p id=\"validation-error-message\">{formValidationErrors.username}</p>\n                    </div> :\n                    <input type=\"text\" \n                        name=\"username\"\n                        value={formData.username}\n                        onChange={handleFormChange}\n                        />\n                    }\n\n                    <label>Email address:</label>\n                    {formValidationErrors.emailAddress !== \"\" ?\n                    <div>\n                        <input id=\"validation-error\" type=\"email\"\n                        name=\"emailAddress\"\n                        value={formData.emailAddress}\n                        onChange={handleFormChange}\n                        />\n                        <p id=\"validation-error-message\">{formValidationErrors.emailAddress}</p>\n                    </div> :\n                    <input type=\"email\" \n                    name=\"emailAddress\"\n                    value={formData.emailAddress}\n                    onChange={handleFormChange}\n                    />\n                    }\n\n                    <div className=\"password\">\n                        <label>Password:</label>\n                        <img src={\"./info.png\"} alt=\"information icon\"\n                            onMouseEnter={() => setPasswordHelperDisplay(true)}\n        \t\t\t\t    onMouseLeave={() => setPasswordHelperDisplay(false)} />\n                        {passwordHelperDisplay && <span className=\"password-helper\">Password must have at least 8 characters</span>}\n                    </div>\n                    {formValidationErrors.password !== \"\" ?\n                    <div> \n                        <input id=\"validation-error\" type=\"password\" \n                        name=\"password\"\n                        value={formData.password}\n                        onChange={handleFormChange}\n                        />\n                        <p id=\"validation-error-message\">{formValidationErrors.password}</p>\n                    </div> :\n                    <input type=\"password\" \n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleFormChange}\n                    />\n                    }\n\n                    <label>Re-enter password:</label>\n                    {formValidationErrors.passwordVerification !== \"\" ?\n                    <div> \n                        <input id=\"validation-error\" type=\"password\" \n                        name=\"passwordVerification\"\n                        value={formData.passwordVerification}\n                        onChange={handleFormChange}\n                        />\n                        <p id=\"validation-error-message\">{formValidationErrors.passwordVerification}</p>\n                    </div> :\n                    <input type=\"password\" \n                    name=\"passwordVerification\"\n                    value={formData.passwordVerification}\n                    onChange={handleFormChange}\n                    />\n                    }\n                    \n                    <button>Create account</button>\n                    {credentialsError !== \"\" && \n                    <div className=\"registration-error-message\">\n                        <p>{credentialsError}</p>\n                    </div>}\n                    {isRegistered && \n                    <div className=\"successful-registration\">\n                    <p>Your account was succesfully created.</p>\n                    <p>Redirecting to login...</p>\n                    </div>}\n                </form>\n\n                \n            </div>\n        </main>\n\t)\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}